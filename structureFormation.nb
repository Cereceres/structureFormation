(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1183459,      23381]
NotebookOptionsPosition[   1180175,      23273]
NotebookOutlinePosition[   1180568,      23290]
CellTagsIndexPosition[   1180525,      23287]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"===", "==="}], "=", 
    RowBox[{
     RowBox[{"==", 
      RowBox[{"===", "===", "===", 
       RowBox[{
        RowBox[{
        "Aqu\[IAcute]", " ", "inician", " ", "los", " ", "calculos", " ", 
         "de", " ", "Press"}], "-", "Schechter"}], "===", "===", 
       RowBox[{"==", "==", "=="}], "===", "===", "===", "===", "===", "===", "===",
        "==="}]}], "="}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"camb", "[", "i", "]"}], "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "==", "1"}], ",", 
           RowBox[{
           "$HomeDirectory", "<>", 
            "\"\</Google \
\\Drive/Cosmomc_Planck_Dic13/camb/test_matterpower.dat\>\""}], ",", 
           RowBox[{
           "$HomeDirectory", "<>", 
            "\"\</Google\\Drive/Cosmomc_Planck_Dic13/camb/test_matterpower_\>\
\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}]}], 
          "]"}], ",", "\"\<Data\>\""}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cambqnv", "[", 
       RowBox[{"j", ",", "l", ",", "i"}], "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "==", "1"}], ",", 
          RowBox[{
          "$HomeDirectory", "<>", 
           "\"\</MEGA/Cosmomc_Planck_Dic13/cosmomc_v1_5Mayo/camb/\>\"", "<>", 
           "\"\<test_\>\"", "<>", 
           RowBox[{"ToString", "[", "j", "]"}], "<>", 
           RowBox[{"ToString", "[", "l", "]"}], "<>", 
           "\"\<_matterpower.dat\>\""}], ",", 
          RowBox[{
          "$HomeDirectory", "<>", 
           "\"\</MEGA/Cosmomc_Planck_Dic13/cosmomc_v1_5Mayo/camb/\>\"", "<>", 
           "\"\<test_\>\"", "<>", 
           RowBox[{"ToString", "[", "j", "]"}], "<>", 
           RowBox[{"ToString", "[", "l", "]"}], "<>", "\"\<_matterpower_\>\"",
            "<>", 
           RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.dat\>\""}]}], 
         "]"}], ",", "\"\<Data\>\""}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "201"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8"}], ",", 
         RowBox[{"-", "6"}], ",", 
         RowBox[{"-", "4"}], ",", 
         RowBox[{"-", "2"}], ",", "0", ",", "20"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "4", ",", "10"}], "}"}]}], "}"}]}], "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"evolveqv", "[", "k", "]"}], "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{
         "$HomeDirectory", "<>", 
          "\"\</Cosmomc_Planck_Dic13/cosmomc_v1_5Mayo/camb/\>\"", "<>", 
          "\"\<evolve_\>\"", "<>", 
          RowBox[{"ToString", "[", "k", "]"}], "<>", 
          RowBox[{"ToString", "[", "j", "]"}], "<>", 
          RowBox[{"ToString", "[", "l", "]"}], "<>", "\"\<.dat\>\""}], ",", 
         "\"\<Data\>\""}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{
         "0.0001", ",", "0.001", ",", "0.01", ",", "0.1", ",", "1", ",", 
          "10"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "8"}], ",", 
          RowBox[{"-", "6"}], ",", 
          RowBox[{"-", "4"}], ",", 
          RowBox[{"-", "2"}], ",", "0", ",", "20"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "2", ",", "4", ",", "6", ",", "10"}], 
         "}"}]}], "}"}]}], "]"}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.654811808011868*^9, {3.656806307597458*^9, 3.656806313932273*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6559271597401237`*^9, 3.6559272067627687`*^9}, 
   3.655927369989678*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox["\[IndentingNewLine]",
   FontSize->16], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Needs", " ", "to", " ", "work"}], "*)"}],
   FontSize->16], 
  StyleBox["\[IndentingNewLine]",
   FontSize->16], 
  RowBox[{
   RowBox[{
   "Needs", "[", "\"\<NumericalDifferentialEquationAnalysis`\>\"", "]"}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Funci\[OAcute]n", " ", 
       SubscriptBox["\[CapitalOmega]", "R"], 
       RowBox[{"(", 
        RowBox[{"a", 
         RowBox[{"(", "t", ")"}]}], ")"}]}], "\[Tilde]", 
      RowBox[{"1", "/", 
       SuperscriptBox["a", "4"]}]}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16,
    FontColor->RGBColor[0, 1, 0]], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"FOrad", "[", 
       RowBox[{"y_", ",", "omer_"}], "]"}], ":=", 
      RowBox[{"omer", "/", 
       SuperscriptBox["y", "4"]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Funci\[OAcute]n", " ", 
       SubscriptBox["\[CapitalOmega]", "b"], 
       RowBox[{"(", 
        RowBox[{"a", 
         RowBox[{"(", "t", ")"}]}], ")"}]}], "\[Tilde]", 
      RowBox[{"1", "/", 
       SuperscriptBox["a", "3"]}]}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"FObar", "[", 
       RowBox[{"y_", ",", "omeb_"}], "]"}], ":=", 
      RowBox[{"omeb", "/", 
       SuperscriptBox["y", "3"]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{"Funci\[OAcute]n", " ", 
      SubscriptBox["\[CapitalOmega]", "\[CapitalLambda]"], 
      RowBox[{"(", "a", ")"}]}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"FOde", "[", 
       RowBox[{"y_", ",", "omede_"}], "]"}], ":=", "omede"}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "Raz\[OAcute]n", " ", "de", " ", "expanci\[OAcute]n", " ", "3000", " ", 
      StyleBox[
       RowBox[{"M", 
        StyleBox["pc",
         FontSize->16]}]], " ", 
      SubscriptBox["H", "o"]}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"h", "=", "0.704"}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Esta", " ", "es", " ", "la", " ", "omega", " ", "de", " ", "materia"}],
       ",", " ", 
      RowBox[{
      "que", " ", "incluye", " ", "materia", " ", "oscura", " ", "y", "  ", 
       "materia", " ", "bari\[OAcute]nica", " ", 
       SubsuperscriptBox["\[CapitalOmega]", "M", "o"], 
       SuperscriptBox["h", "2"]}]}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16,
    FontColor->RGBColor[0, 1, 0]], 
   StyleBox[
    RowBox[{
     RowBox[{"ome", "=", "0.1598"}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{"\[CapitalIAcute]ndice", " ", "espectral"}], "*)"}],
    FontSize->16,
    FontColor->RGBColor[0, 1, 0]], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16,
    FontColor->RGBColor[0, 1, 0]], 
   StyleBox[
    RowBox[{
     RowBox[{"n", "=", "0.968"}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["(",
       FontSize->16], 
      StyleBox["*",
       FontSize->18]}]], 
    StyleBox[
     RowBox[{
      SubsuperscriptBox["\[CapitalOmega]", "b", "o"], 
      SuperscriptBox["h", "2"]}],
     FontSize->16], 
    StyleBox["*)",
     FontSize->16]}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"omebar", "=", "0.02255"}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "Esta", " ", "es", " ", "la", " ", "omega", " ", "de", " ", "materia", 
      " ", "oscura"}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"omedm", "=", 
      RowBox[{"ome", "-", "omebar"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      SubsuperscriptBox["\[CapitalOmega]", "\[Gamma]", "o"], 
      SuperscriptBox["h", "2"]}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"omefot", "=", 
      RowBox[{"2.47", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"Tcmb", "=", 
      RowBox[{"2.75", "/", "11605"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      SubsuperscriptBox["\[CapitalOmega]", "\[Nu]", "o"], 
      SuperscriptBox["h", "2"]}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"omeneu", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"21", "/", "8"}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"4", "/", "11"}], ")"}], 
        RowBox[{"4", "/", "3"}]], 
       RowBox[{"(", 
        RowBox[{"2.47", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]]}], ")"}]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "Omega", " ", "total", " ", "de", " ", "radiaci\[OAcute]n", " ", "a", 
      " ", "hoy"}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"omerad", "=", 
      RowBox[{"omeneu", "+", "omefot"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Esta", " ", "es", " ", "la", " ", "condici\[OAcute]n", " ", "de", " ", 
       "planitud"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "desde", " ", "la", " ", "cual", " ", "imponemos", " ", "que", "  ", 
         SubsuperscriptBox["\[CapitalOmega]", "M", "o"]}], "+", 
        SubsuperscriptBox["\[CapitalOmega]", "\[CapitalLambda]", "o"]}], 
       "\[TildeTilde]", "1"}]}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"omeconst", "=", 
      RowBox[{
       RowBox[{"h", "*", "h"}], "-", "ome", "-", "omerad"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"hfunc", "[", "y_", "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{"1", "/", "3000"}], ")"}],
       FontSize->16], 
      RowBox[{
       StyleBox["Sqrt",
        FontSize->12], 
       StyleBox["[",
        FontSize->12], 
       RowBox[{
        StyleBox["(",
         FontSize->16], 
        StyleBox[
         RowBox[{
          StyleBox[
           RowBox[{"FOrad", "[", 
            RowBox[{"y", ",", "omerad"}], "]"}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{"FObar", "[", 
            RowBox[{"y", ",", "omebar"}], "]"}],
           FontSize->16], 
          StyleBox["+",
           FontSize->16], 
          RowBox[{
           StyleBox["omedm",
            FontSize->16], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "/", "y"}], ")"}], "3"]}], 
          StyleBox["+",
           FontSize->16], 
          StyleBox[
           RowBox[{"FOde", "[", 
            RowBox[{"y", ",", "omeconst"}], "]"}],
           FontSize->16]}],
         FontSize->12], 
        StyleBox[")",
         FontSize->16]}], 
       StyleBox["]",
        FontSize->16]}]}]}], 
    StyleBox[";",
     FontSize->12]}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      SuperscriptBox["\[CapitalDelta]", "2"], 
      RowBox[{"(", "q", ")"}]}], "*)"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"Ncua", "=", 
      RowBox[{"2.45", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "9"}]]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"FOdm", "[", 
       RowBox[{"y_", ",", "omed_", ",", "ac_", ",", "qn_"}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox["If",
       FontSize->16], 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       StyleBox[
        RowBox[{"y", "<", "ac"}],
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       RowBox[{
        StyleBox[
         RowBox[{"(", 
          RowBox[{"omed", "*", 
           RowBox[{"ac", "/", 
            SuperscriptBox["y", "4"]}]}], ")"}],
         FontSize->16], 
        RowBox[{
         StyleBox["Exp",
          FontSize->16], 
         StyleBox["[",
          FontSize->16], 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["-",
             FontSize->16], 
            SuperscriptBox[
             StyleBox["qn",
              FontSize->16], "2"]}], 
           StyleBox["/",
            FontSize->16], 
           StyleBox["2",
            FontSize->16]}], 
          StyleBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["ac", "2"], "-", "1"}], ")"}],
           FontSize->16]}], 
         StyleBox["]",
          FontSize->16]}]}], 
       StyleBox[",",
        FontSize->16], 
       RowBox[{
        StyleBox[
         RowBox[{"(", 
          RowBox[{"omed", "/", 
           SuperscriptBox["y", "3"]}], ")"}],
         FontSize->16], 
        RowBox[{
         StyleBox["Exp",
          FontSize->16], 
         StyleBox["[",
          FontSize->16], 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["-",
             FontSize->16], 
            SuperscriptBox[
             StyleBox["qn",
              FontSize->16], "2"]}], 
           StyleBox["/",
            FontSize->16], 
           StyleBox["2",
            FontSize->16]}], 
          StyleBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["ac", "2"], "-", 
             RowBox[{
              SuperscriptBox["ac", "2"], "/", 
              SuperscriptBox["y", "2"]}]}], ")"}],
           FontSize->16]}], 
         StyleBox["]",
          FontSize->16]}]}]}], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox[" ",
     FontSize->16], 
    StyleBox[";",
     FontSize->16]}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"FOdm2", "[", 
       RowBox[{"y_", ",", "omed_", ",", "ac_", ",", "qn_"}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"y", "<", "ac"}], ",", 
        RowBox[{"(", 
         RowBox[{"omed", "*", 
          RowBox[{"ac", "/", 
           SuperscriptBox["y", "4"]}]}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"omed", "/", 
          SuperscriptBox["y", "3"]}], ")"}]}], "]"}]}], " ", ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Funci\[OAcute]n", " ", "w", 
       RowBox[{"(", 
        RowBox[{"a", 
         RowBox[{"(", "t", ")"}]}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"obtenida", " ", "a", " ", "partir", " ", "de", " ", "P", 
        RowBox[{
         RowBox[{"(", "t", ")"}], "/", "\[Rho]"}], 
        RowBox[{"(", "t", ")"}]}], "=", 
       RowBox[{
        RowBox[{"w", 
         RowBox[{"(", "t", ")"}], " ", "y", " ", 
         RowBox[{"\[Rho]", "'"}]}], "=", 
        RowBox[{
         RowBox[{"-", "3"}], "H", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "P"}], ")"}]}]}]}]}], "*)"}],
    FontColor->GrayLevel[0.5]], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"Fw", "[", 
       RowBox[{"y_", ",", "omedm_", ",", "ac_", ",", "qn_"}], "]"}], ":=", 
      " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"y", "<", "ac"}], ",", 
        RowBox[{"1", "/", "3"}], ",", 
        RowBox[{
         RowBox[{"qn", "/", "3"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"ac", "/", "y"}], ")"}], "2"]}]}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "y"}], " ", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"FOdm", "[", 
            RowBox[{"y", ",", "omedm", ",", "ades"}], "]"}], ",", "y"}], 
          "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"3", 
           RowBox[{"FOdm", "[", 
            RowBox[{"y", ",", "omedm", ",", "ades"}], "]"}]}], ")"}]}]}], "-",
        "1"}], "*)"}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"dFw", "[", 
       RowBox[{"y_", ",", "omedm_", ",", "ac_", ",", "qn_"}], "]"}], ":=", 
      " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"y", "<", "ac"}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         RowBox[{"qn", "/", "3"}], " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"ac", "/", "y"}], ")"}], "2"], "/", "y"}]}]}], "]"}]}], 
     ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"DFw", "[", 
       RowBox[{"y_", ",", "omedm_", ",", "ac_", ",", "qn_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Fw", "[", 
        RowBox[{"y", ",", "omedm", ",", "ac", ",", "qn"}], "]"}], "-", 
       RowBox[{
        RowBox[{"1", "/", "3"}], " ", "y", " ", 
        RowBox[{
         RowBox[{"dFw", "[", 
          RowBox[{"y", ",", "omedm", ",", "ac", ",", "qn"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Fw", "[", 
            RowBox[{"y", ",", "omedm", ",", "ac", ",", "qn"}], "]"}]}], 
          ")"}]}]}]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"hfun", "[", 
       RowBox[{
        RowBox[{"y_", "?", "NumberQ"}], ",", 
        RowBox[{"ac_", "?", "NumberQ"}], ",", 
        RowBox[{"qn_", "?", "NumberQ"}], ",", 
        RowBox[{"ome_", "?", "NumberQ"}]}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{"1", "/", "3000"}], ")"}],
       FontSize->16], 
      SuperscriptBox[
       StyleBox[
        RowBox[{"(", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FOrad", "[", 
            RowBox[{"y", ",", "omerad"}], "]"}], "+", 
           RowBox[{"FObar", "[", 
            RowBox[{"y", ",", "omebar"}], "]"}], "+", 
           RowBox[{"FOdm", "[", 
            RowBox[{"y", ",", "ome", ",", "ac", ",", "qn"}], "]"}], "+", 
           RowBox[{"FOde", "[", 
            RowBox[{"y", ",", "omeconst"}], "]"}]}], ")"}], ")"}],
        FontSize->16], 
       RowBox[{"1", "/", "2"}]]}]}], 
    StyleBox[";",
     FontSize->16]}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{"(*", 
    RowBox[{"Velocidad", " ", "de", " ", "la", " ", "particula"}], " ", 
    "*)"}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"vc", "[", 
       RowBox[{
        RowBox[{"y_", "?", "NumberQ"}], ",", 
        RowBox[{"ac_", "?", "NumberQ"}], ",", 
        RowBox[{"qn_", "?", "NumberQ"}]}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox["If",
       FontSize->16], 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       StyleBox[
        RowBox[{"y", "<", "ac"}],
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       RowBox[{
        StyleBox["qn",
         FontSize->16], 
        RowBox[{"(", 
         RowBox[{"ac", "/", "y"}], ")"}]}]}], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox[";",
     FontSize->16]}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{"(*", 
    RowBox[{
    "Densidad", " ", "Critica", " ", "del", " ", "universo", " ", "dada", " ",
      "en", " ", 
     SuperscriptBox["10", "8"], " ", 
     RowBox[{
      SubscriptBox["M", "\[CircleDot]"], "/", 
      SuperscriptBox["Mpc", "3"]}]}], "*)"}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{"densidad", "=", " ", 
      RowBox[{"1.2", "*", 
       SuperscriptBox["10", "3"]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{"(*", 
    RowBox[{
    "Masa", " ", "contenidad", " ", "en", " ", "una", " ", "esfera", " ", 
     "de", " ", "radio", " ", 
     RowBox[{
      SubscriptBox["\[Lambda]", "FS"], "/", "2"}], " ", "dada", " ", "en", 
     " ", 
     SuperscriptBox["10", "8"], " ", 
     SubscriptBox["M", "\[CircleDot]"]}], " ", "*)"}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"masa", "[", 
       RowBox[{
        RowBox[{"a_", "?", "NumberQ"}], ",", 
        RowBox[{"ac_", "?", "NumberQ"}], ",", 
        RowBox[{"qn_", "?", "NumberQ"}]}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{"4", " ", 
         RowBox[{"Pi", "/", "3"}]}], ")"}],
       FontSize->16], 
      StyleBox[" ",
       FontSize->16], 
      StyleBox["densidad",
       FontSize->16], 
      SuperscriptBox[
       StyleBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"lambda", "[", 
           RowBox[{"a", ",", "ac", ",", "qn"}], "]"}], "/", "2"}], ")"}],
        FontSize->16], "3"]}]}], 
    StyleBox[";",
     FontSize->16]}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{"(*", 
    RowBox[{
     SubscriptBox["\[Lambda]", "FS"], " ", "para", " ", "la", " ", "cual", 
     " ", "ua", " ", "esfera", " ", "de", " ", "radio", " ", 
     RowBox[{
      SubscriptBox["\[Lambda]", "FS"], "/", "2"}], " ", "contiene", " ", "la",
      " ", "masa", " ", "m", " ", "media", " ", "en", " ", "unidades", " ", 
     "de", "  ", 
     SuperscriptBox["10", "8"], " ", 
     SubscriptBox["M", "\[CircleDot]"]}], " ", "*)"}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"lambdaM", "[", 
       RowBox[{"m_", "?", "NumberQ"}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox["2",
       FontSize->16], 
      SuperscriptBox[
       StyleBox[
        RowBox[{"(", 
         RowBox[{"3", 
          RowBox[{"m", "/", 
           RowBox[{"(", 
            RowBox[{"4", " ", "Pi", " ", "densidad"}], ")"}]}]}], ")"}],
        FontSize->16], 
       RowBox[{"1", "/", "3"}]]}]}], ";"}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Masa", " ", 
      SubscriptBox["m", "c"], " ", "de", " ", "la", " ", "particula", " ", 
      "dada", " ", "por", " ", "la", " ", "relacion", " ", 
      SubscriptBox["m", "c"]}], "=", 
     RowBox[{"3", 
      RowBox[{
       SubscriptBox["T", "c"], "/", 
       SuperscriptBox[
        SubscriptBox["v", "c"], "2"]}], " ", "dada", " ", "en", " ", 
      "keV"}]}], "*)"}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["mc",
       FontSize->16], 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       RowBox[{"ac_", "?", "NumberQ"}], ",", 
       RowBox[{"qn_", "?", "NumberQ"}]}], "]"}], ":=", 
     RowBox[{"3", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          RowBox[{
           StyleBox["omedm",
            FontSize->16], "/", 
           SuperscriptBox["ac", "3"]}], 
          StyleBox[")",
           FontSize->16]}], 
         RowBox[{
          RowBox[{
           StyleBox["Exp",
            FontSize->16], 
           StyleBox["[",
            FontSize->16], 
           RowBox[{
            RowBox[{
             RowBox[{
              StyleBox["-",
               FontSize->16], 
              SuperscriptBox[
               StyleBox["qn",
                FontSize->16], "2"]}], 
             StyleBox["/",
              FontSize->16], 
             StyleBox["2",
              FontSize->16]}], 
            StyleBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["ac", "2"], "-", "1"}], ")"}],
             FontSize->16]}], 
           StyleBox["]",
            FontSize->16]}], "/", "omefot"}]}], ")"}], 
       RowBox[{"1", "/", "4"}]], " ", 
      RowBox[{
       RowBox[{"Tcmb", "/", 
        SuperscriptBox["qn", "2"]}], "/", "1000"}]}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Masa", " ", 
      SubscriptBox["m", "w"], " ", "de", " ", "la", " ", "particula", " ", 
      "dada", " ", "por", " ", "la", " ", "relacion", " ", 
      SubscriptBox["m", "w"]}], "=", 
     RowBox[{"3", 
      SubscriptBox["T", "c"], " ", "dada", " ", "en", " ", "keV"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["mW",
       FontSize->16], 
      StyleBox["[",
       FontSize->16], 
      RowBox[{"ac_", "?", "NumberQ"}], "]"}], ":=", 
     RowBox[{"3", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          RowBox[{
           StyleBox["omedm",
            FontSize->16], "/", 
           SuperscriptBox["ac", "3"]}], 
          StyleBox[")",
           FontSize->16]}], 
         RowBox[{
          RowBox[{
           StyleBox["Exp",
            FontSize->16], 
           StyleBox["[",
            FontSize->16], 
           RowBox[{
            RowBox[{
             RowBox[{
              StyleBox["-",
               FontSize->16], "1"}], 
             StyleBox["/",
              FontSize->16], 
             StyleBox["2",
              FontSize->16]}], 
            StyleBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["ac", "2"], "-", "1"}], ")"}],
             FontSize->16]}], 
           StyleBox["]",
            FontSize->16]}], "/", "omefot"}]}], ")"}], 
       RowBox[{"1", "/", "4"}]], " ", 
      RowBox[{"Tcmb", "/", "1000"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     SubscriptBox["a", "c"], " ", "para", " ", "el", " ", "cual", " ", "se", 
     " ", "la", " ", "particula", " ", "tiene", " ", "una", " ", "masa", " ", 
     
     SubscriptBox["m", "c"], " ", "y", " ", "un", " ", "cambio", " ", "en", 
     " ", "la", " ", "velocidad", " ", "en", " ", "la", " ", "transicion", 
     " ", "de", " ", 
     RowBox[{"cero", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"acmc0", "[", 
      RowBox[{"m_", "?", "NumberQ"}], "]"}], ":=", 
     RowBox[{"ac", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["mc",
           FontSize->16], 
          StyleBox["[",
           FontSize->16], 
          RowBox[{"ac", ",", "1"}], "]"}], "\[Equal]", "m"}], ",", 
        RowBox[{"{", 
         RowBox[{"ac", ",", 
          SuperscriptBox["10", 
           RowBox[{"-", "12"}]]}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     SubscriptBox["a", "c"], " ", "para", " ", "el", " ", "cual", " ", "la", 
     " ", "particula", " ", "tiene", " ", "una", " ", 
     SubscriptBox["\[Lambda]", "FS"], " ", "y", " ", "un", " ", "cambio", " ",
      "en", " ", "la", " ", "velocidad", " ", "en", " ", "la", " ", 
     "transicion", " ", "de", " ", 
     RowBox[{"cero", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "==="}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Calculo", " ", "de", " ", 
     SubscriptBox["\[Lambda]", "FS"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["a", "c"], ",", 
       SubscriptBox["v", "c"]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"y_", "?", "NumberQ"}], ",", 
       RowBox[{"omed_", "?", "NumberQ"}], ",", 
       RowBox[{"ac_", "?", "NumberQ"}], ",", 
       RowBox[{"a_", "?", "NumberQ"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], 
           RowBox[{"hfun", "[", 
            RowBox[{"x", ",", "ac", ",", "a", ",", "omed"}], "]"}]}], ")"}]}],
         ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "ac"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<GaussKronrodRule\>\"", ",", 
           RowBox[{"\"\<Points\>\"", "\[Rule]", "10"}]}], "}"}]}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "1000"}]}], "]"}], "+", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", " ", 
           RowBox[{"ac", "/", "x"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "2"], 
           RowBox[{"hfun", "[", 
            RowBox[{"x", ",", "ac", ",", "a", ",", "omed"}], "]"}]}], ")"}]}],
         ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "ac", ",", "y"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<GaussKronrodRule\>\"", ",", 
           RowBox[{"\"\<Points\>\"", "\[Rule]", "10"}]}], "}"}]}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "1000"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"acLambda0", "[", 
     RowBox[{"\[Lambda]_", "?", "NumberQ"}], "]"}], ":=", 
    RowBox[{"ac", "/.", 
     RowBox[{"FindRoot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"1", ",", "omedm", ",", "ac", ",", "1"}], "]"}], "\[Equal]", 
        "\[Lambda]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ac", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "12"}]]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Longitud", " ", "de", " ", "FreeStreaming", " ", 
     SubscriptBox["\[Lambda]", "FS"], " ", "dada", " ", "por", " ", "la", " ",
      "integral", " ", 
     RowBox[{"\[Integral]", 
      RowBox[{"v", 
       RowBox[{"\[DifferentialD]", "\[Tau]"}], " ", "en", " ", "unidades", 
       " ", "de", " ", "Mpc"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"lambda", "[", 
       RowBox[{
        RowBox[{"y_", "?", "NumberQ"}], ",", 
        RowBox[{"omed_", "?", "NumberQ"}], ",", 
        RowBox[{"ac_", "?", "NumberQ"}], ",", 
        RowBox[{"a_", "?", "NumberQ"}]}], "]"}], ":=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", "2"], 
            RowBox[{"hfun", "[", 
             RowBox[{"x", ",", "ac", ",", "a", ",", "omed"}], "]"}]}], 
           ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "ac"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<GaussKronrodRule\>\"", ",", 
            RowBox[{"\"\<Points\>\"", "\[Rule]", "10"}]}], "}"}]}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "1000"}]}], "]"}], "+", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", " ", 
            RowBox[{"ac", "/", "x"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", "2"], 
            RowBox[{"hfun", "[", 
             RowBox[{"x", ",", "ac", ",", "a", ",", "omed"}], "]"}]}], 
           ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "ac", ",", "y"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<GaussKronrodRule\>\"", ",", 
            RowBox[{"\"\<Points\>\"", "\[Rule]", "10"}]}], "}"}]}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "1000"}]}], "]"}]}]}],
     FontSize->14], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"masa1", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"qc", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       RowBox[{"ac_", "?", "NumberQ"}], ",", 
       RowBox[{"qn_", "?", "NumberQ"}]}], "]"}], ":=", 
     RowBox[{"omedm", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "25"}]], "/", "27"}], ")"}], "densidad", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"FOdm", "[", 
         RowBox[{"ac", ",", "omedm", ",", "ac", ",", "qn"}], "]"}], ")"}], 
       "/", 
       SuperscriptBox["qn", "3"]}]}]}], ";", 
    RowBox[{"Q1", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}], ";", 
    RowBox[{"Q2", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "4"}]]}], ";", 
    RowBox[{"masa2", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "1"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hyperlink", "[", 
     RowBox[{
     "\"\<Link Articulo \!\(\*SubscriptBox[\(m\), \(c\)]\)\>\"", ",", " ", 
      "\"\<http://arxiv.org/abs/1311.5223\>\""}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Valor", " ", "aceptado", " ", "en", " ", "el", " ", "arituclo", " ", 
      "de", " ", 
      RowBox[{"http", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1311.5223"}], "  ",
        "donde", " ", "encuentran", " ", "los", " ", "valores", " ", "de", 
       " ", 
       SubscriptBox["m", "c"]}], ">", " ", 
      RowBox[{"3.3", " ", "KeV", " ", "y", " ", 
       SubscriptBox["\[Lambda]", "FS"]}], "<", " ", 
      RowBox[{"2", " ", 
       SuperscriptBox["10", "8"], " ", 
       SubscriptBox["M", "\[CircleDot]"]}]}]}], "*)"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mc1", "=", "3.3"}], ";", 
    RowBox[{"mc2", "=", 
     SuperscriptBox["10", "9"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", " ", 
     RowBox[{"Funcion", " ", "rho_c", 
      RowBox[{"(", 
       RowBox[{"a", ",", 
        SubscriptBox["a", "c"], ",", 
        SubscriptBox["v", "c"]}], ")"}]}], "===", "===", "===", "===", "===", 
     "===", "===", "===", "===", "===", "==="}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rhoc", "[", 
      RowBox[{
       RowBox[{"x_", "?", "NumberQ"}], ",", 
       RowBox[{"ac_", "?", "NumberQ"}], ",", 
       RowBox[{"y_", "?", "NumberQ"}]}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", "<", "ac"}], ",", 
       RowBox[{"ac", " ", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"y", " ", "ac"}], ")"}], "2"]}], "/", 
            RowBox[{"(", 
             RowBox[{"2", 
              SuperscriptBox["ac", "2"]}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox["ac", "2"]}], ")"}]}], "]"}], "/", 
         SuperscriptBox["x", "4"]}]}], ",", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"y", " ", "ac"}], ")"}], "2"]}], "/", 
           RowBox[{"(", 
            RowBox[{"2", 
             SuperscriptBox["x", "2"]}], ")"}]}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["x", "2"]}], ")"}]}], "]"}], "/", 
        SuperscriptBox["x", "3"]}]}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "===", " ", 
      RowBox[{
      "Funcion", " ", "que", " ", "calcula", " ", "el", " ", "valor", " ", 
       "de", " ", 
       SubscriptBox["e", 
        RowBox[{"eq", " "}]], "dado", " ", "por", " ", "la", " ", "solucion", 
       " ", "de", " ", 
       SubscriptBox["\[Rho]", "R"], 
       RowBox[{"(", "a", ")"}]}]}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Rho]", "B"], 
       RowBox[{"(", "a", ")"}]}], "+", 
      RowBox[{
       SubscriptBox["\[Rho]", "DM"], 
       RowBox[{"(", "a", ")"}]}]}]}], "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"aeq", "[", 
      RowBox[{
       RowBox[{"ac_", "?", "NumberQ"}], ",", 
       RowBox[{"vc_", "?", "NumberQ"}], ",", 
       RowBox[{"aeQ_", "?", "NumberQ"}], ",", 
       RowBox[{"ratDm_", "?", "NumberQ"}]}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"ac0", "=", "ac"}], ",", 
         RowBox[{"y0", "=", "vc"}]}], "}"}], ",", 
       RowBox[{"x", "/.", 
        RowBox[{
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{"aeQ", "\[Equal]", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "ratDm"}], ")"}], " ", "x"}], " ", "+", 
              RowBox[{
               SuperscriptBox["x", "4"], "ratDm", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"x", "<", "ac"}], ",", 
                 RowBox[{"ac", "/", 
                  SuperscriptBox["x", "4"]}], ",", " ", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"vc", " ", "ac"}], ")"}], "2"]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", 
                    SuperscriptBox["x", "2"]}], ")"}]}], 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}], ")"}]}], "]"}], "/", 
                  SuperscriptBox["x", "3"]}]}], "]"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             SuperscriptBox["10", 
              RowBox[{"-", "10"}]]}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", " ", 
     RowBox[{
      RowBox[{"Funcion", " ", "de", "  ", 
       SubscriptBox["\[Rho]", "R"], 
       RowBox[{"(", "a", ")"}]}], "-", 
      RowBox[{
       SubscriptBox["\[Rho]", "B"], 
       RowBox[{"(", "a", ")"}]}], "-", 
      RowBox[{
       SubscriptBox["\[Rho]", "DM"], 
       RowBox[{"(", "a", ")"}]}]}], "===", "===", "===", "===", "===", "===", 
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "=="}], "*)"}], 
   RowBox[{
    RowBox[{"aeqdiff", "[", 
     RowBox[{
      RowBox[{"x_", "?", "NumberQ"}], ",", 
      RowBox[{"ac_", "?", "NumberQ"}], ",", 
      RowBox[{"y_", "?", "NumberQ"}], ",", 
      RowBox[{"aeQ_", "?", "NumberQ"}], ",", 
      RowBox[{"ratDm_", "?", "NumberQ"}]}], "]"}], ":=", " ", 
    RowBox[{"aeQ", "-", 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "ratDm"}], ")"}], " ", "x"}], " ", "+", 
       RowBox[{
        SuperscriptBox["x", "4"], "ratDm", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", "<", "ac"}], ",", 
          RowBox[{"ac", "/", 
           SuperscriptBox["x", "4"]}], ",", " ", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"y", " ", "ac"}], ")"}], "2"]}], "/", 
              RowBox[{"(", 
               RowBox[{"2", 
                SuperscriptBox["x", "2"]}], ")"}]}], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["x", "2"]}], ")"}]}], "]"}], "/", 
           SuperscriptBox["x", "3"]}]}], "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", " ", 
     RowBox[{
      RowBox[{"Calculo", " ", "del", " ", "valor", " ", "de", " ", 
       SubscriptBox["a", "c"], " ", "para", " ", "el", " ", "cual", " ", 
       "tenemos", " ", 
       SubscriptBox["a", "eq"]}], "<", "0"}], "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "=="}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"logacneg", "[", 
     RowBox[{
      RowBox[{"vc_", "?", "NumberQ"}], ",", 
      RowBox[{"aeq0_", "?", "NumberQ"}], ",", 
      RowBox[{"ratDm_", "?", "NumberQ"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a1", ",", "a2", ",", "a3", ",", "ae1", ",", "error", ",", "test"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"error", "=", 
        RowBox[{"N", "[", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"a1", "=", 
        RowBox[{"-", "10"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"a2", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"error", ">", 
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"test", "=", 
           RowBox[{
            RowBox[{"aeq", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               SuperscriptBox["10", "a1"], "]"}], ",", 
              RowBox[{"N", "[", "vc", "]"}], ",", 
              RowBox[{"N", "[", "aeq0", "]"}], ",", 
              RowBox[{"N", "[", "ratDm", "]"}]}], "]"}], "*", 
            RowBox[{"aeq", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               SuperscriptBox["10", "a2"], "]"}], ",", 
              RowBox[{"N", "[", "vc", "]"}], ",", 
              RowBox[{"N", "[", "aeq0", "]"}], ",", 
              RowBox[{"N", "[", "ratDm", "]"}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"test", ">", "0"}], ",", 
            RowBox[{
             RowBox[{"a3", "=", "Null"}], ";", 
             RowBox[{"Break", "[", "]"}]}], ",", "Null"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"a3", "=", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a1", "+", "a2"}], ")"}], "/", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ae1", "=", 
           RowBox[{"aeq", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              SuperscriptBox["10", "a3"], "]"}], ",", 
             RowBox[{"N", "[", "vc", "]"}], ",", 
             RowBox[{"N", "[", "aeq0", "]"}], ",", 
             RowBox[{"N", "[", "ratDm", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ae1", ">=", "0"}], ",", 
            RowBox[{"a1", "=", "a3"}], ",", 
            RowBox[{"a2", "=", "a3"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Abs", "[", "ae1", "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"N", "[", "a3", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", "===", "===", "===", "===", "===", "===", "===", "===", "===", 
     RowBox[{
     "Util", " ", "para", " ", "la", " ", "otra", " ", "Funci\[OAcute]n"}], "===",
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "\[Equal]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"logacnegmod", "[", 
     RowBox[{
      RowBox[{"vc_", "?", "NumberQ"}], ",", 
      RowBox[{"aeq0_", "?", "NumberQ"}], ",", 
      RowBox[{"ratDm_", "?", "NumberQ"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a1", ",", "a2", ",", "a3", ",", "ae1", ",", "error", ",", "test"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"error", "=", 
        RowBox[{"N", "[", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"a1", "=", 
        RowBox[{"-", "10"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"a2", "=", "5"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"error", ">", 
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"test", "=", 
           RowBox[{
            RowBox[{"aeq", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               SuperscriptBox["10", "a1"], "]"}], ",", 
              RowBox[{"N", "[", "vc", "]"}], ",", 
              RowBox[{"N", "[", "aeq0", "]"}], ",", 
              RowBox[{"N", "[", "ratDm", "]"}]}], "]"}], "*", 
            RowBox[{"aeq", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               SuperscriptBox["10", "a2"], "]"}], ",", 
              RowBox[{"N", "[", "vc", "]"}], ",", 
              RowBox[{"N", "[", "aeq0", "]"}], ",", 
              RowBox[{"N", "[", "ratDm", "]"}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"test", ">", "0"}], ",", 
            RowBox[{
             RowBox[{"a3", "=", "Null"}], ";", 
             RowBox[{"Break", "[", "]"}]}], ",", "Null"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"a3", "=", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"a1", "+", "a2"}], ")"}], "/", "2"}], ",", "10"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ae1", "=", 
           RowBox[{"aeq", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              SuperscriptBox["10", "a3"], "]"}], ",", 
             RowBox[{"N", "[", "vc", "]"}], ",", 
             RowBox[{"N", "[", "aeq0", "]"}], ",", 
             RowBox[{"N", "[", "ratDm", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ae1", ">=", "0"}], ",", 
            RowBox[{"a1", "=", "a3"}], ",", 
            RowBox[{"a2", "=", "a3"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"error", "=", 
           RowBox[{"Abs", "[", "ae1", "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"N", "[", "a3", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "===", " ", 
      RowBox[{"Calculo", " ", "del", " ", "valor", " ", "de", " ", 
       SubscriptBox["a", "c"], "  ", "para", " ", "el", " ", "cual", " ", 
       "tenemos", " ", 
       SubscriptBox["a", "eqneg"]}]}], "=", "1"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"logaeq", "[", 
      RowBox[{
       RowBox[{"vc_", "?", "NumberQ"}], ",", 
       RowBox[{"ratDm_", "?", "NumberQ"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a1", ",", "a2", ",", "a3", ",", "ae1", ",", "error", ",", "test"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"error", "=", 
         RowBox[{"N", "[", 
          SuperscriptBox["10", 
           RowBox[{"-", "2"}]], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"a1", "=", 
         RowBox[{"-", "10"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"a2", "=", "2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"error", ">", 
           SuperscriptBox["10", 
            RowBox[{"-", "8"}]]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"test", "=", 
            RowBox[{
             RowBox[{"logacnegmod", "[", 
              RowBox[{
               RowBox[{"N", "[", "vc", "]"}], ",", 
               RowBox[{"N", "[", 
                SuperscriptBox["10", "a1"], "]"}], ",", 
               RowBox[{"N", "[", "ratDm", "]"}]}], "]"}], "*", 
             RowBox[{"logacnegmod", "[", 
              RowBox[{
               RowBox[{"N", "[", "vc", "]"}], ",", 
               RowBox[{"N", "[", 
                SuperscriptBox["10", "a2"], "]"}], ",", 
               RowBox[{"N", "[", "ratDm", "]"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"test", ">", "0"}], ",", 
             RowBox[{
              RowBox[{"a3", "=", "0"}], ";", 
              RowBox[{"Break", "[", "]"}]}], ",", "Null"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"a3", "=", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a1", "+", "a2"}], ")"}], "/", "2"}], ",", "10"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ae1", "=", 
            RowBox[{"1", "-", 
             RowBox[{"logacnegmod", "[", 
              RowBox[{
               RowBox[{"N", "[", 
                SuperscriptBox["10", "a3"], "]"}], ",", 
               RowBox[{"N", "[", "vc", "]"}], ",", 
               RowBox[{"N", "[", 
                SuperscriptBox["10", "a3"], "]"}], ",", 
               RowBox[{"N", "[", "ratDm", "]"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ae1", ">=", "0"}], ",", 
             RowBox[{"a1", "=", "a3"}], ",", 
             RowBox[{"a2", "=", "a3"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"error", "=", 
            RowBox[{"Abs", "[", "ae1", "]"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"N", "[", "a3", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"===", "===", "===", "===", "===", "===", "===", " ", 
      RowBox[{
      "ac", " ", "para", " ", "la", " ", "cual", " ", "tenemos", " ", "una", 
       " ", 
       SubscriptBox["m", "w"], 
       RowBox[{"(", 
        SubscriptBox["a", "c"], ")"}]}]}], "=", 
     SubscriptBox["m", "w"]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"transacvc", "[", 
      RowBox[{"mwc_", "?", "NumberQ"}], "]"}], ":=", 
     RowBox[{"acc", "/.", 
      RowBox[{
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"mW", "[", "acc", "]"}], "==", "mwc"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"acc", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "15"}]]}], "}"}], ",", 
         RowBox[{"MaxIterations", "\[Rule]", "Infinity"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Metodo", " ", "para", " ", "integrar", " ", "numericamente", " ", 
      "utilizando", " ", "el", " ", "metodo", " ", "de", " ", "cuadratura", 
      " ", "de", " ", "Gauss"}], "-", "Legendre"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{"Clear", "[", "w", "]"}], ";", 
     RowBox[{"nd", " ", "=", " ", "150"}], ";", 
     RowBox[{"w", "=", 
      RowBox[{"GaussianQuadratureWeights", "[", 
       RowBox[{"nd", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"integral", " ", "[", 
       RowBox[{"f_", ",", "a_", ",", "b_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}], "/", "2"}], ")"}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"f", "[", "#", "]"}], "&"}], "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "-", "a"}], ")"}], "/", "2"}], " ", 
             RowBox[{"w", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", "+", "a"}], ")"}], "/", "2"}]}], "]"}], 
          RowBox[{"w", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nd"}], "}"}]}], "]"}]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\n",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"Fwind", "[", "y_", "]"}], ":=", 
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "y", "]"}], "/", 
          SuperscriptBox["y", "3"]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "y", "]"}], "/", 
          SuperscriptBox["y", "2"]}]}], ")"}]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\n",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["numk",
        FontSize->12], "[", 
       RowBox[{"l_", ",", "j_", ",", "z_"}], "]"}], 
      StyleBox[" ",
       FontSize->12], 
      StyleBox[":=",
       FontSize->12], 
      StyleBox[" ",
       FontSize->12], 
      RowBox[{
       RowBox[{"Dimensions", "[", 
        RowBox[{"cambqnv", "[", 
         RowBox[{"l", ",", "j", ",", "z"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"kmin", "[", 
       RowBox[{"l_", ",", "j_", ",", "z_"}], "]"}], ":=", " ", 
      RowBox[{
       RowBox[{"cambqnv", "[", 
        RowBox[{"l", ",", "j", ",", "z"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"kmax", "[", 
       RowBox[{"l_", ",", "j_", ",", "z_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"cambqnv", "[", 
        RowBox[{"l", ",", "j", ",", "z"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"numk", "[", 
          RowBox[{"l", ",", "j", ",", "z"}], "]"}], ",", "1"}], "]"}], "]"}]}],
     FontSize->16], 
    StyleBox[";",
     FontSize->16], 
    StyleBox[
     RowBox[{
      RowBox[{"nk", "[", 
       RowBox[{"logk_", ",", "l_", ",", "j_", ",", "z_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"IntegerPart", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"logk", "-", 
            RowBox[{"Log", "[", 
             RowBox[{"10", ",", 
              RowBox[{"kmin", "[", 
               RowBox[{"l", ",", "j", ",", "z"}], "]"}]}], "]"}]}], ")"}], 
          "/", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{
             RowBox[{"kmax", "[", 
              RowBox[{"l", ",", "j", ",", "z"}], "]"}], "/", 
             RowBox[{"kmin", "[", 
              RowBox[{"l", ",", "j", ",", "z"}], "]"}]}]}], "]"}]}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"numk", "[", 
            RowBox[{"l", ",", "j", ",", "z"}], "]"}], "-", "1"}], ")"}]}], 
        "]"}], "+", "1"}]}],
     FontSize->12], 
    StyleBox[";",
     FontSize->12]}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"logk_", ",", "l_", ",", "j_", ",", "z_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"cambqnv", "[", 
        RowBox[{"l", ",", "j", ",", "z"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"nk", "[", 
          RowBox[{"logk", ",", "l", ",", "j", ",", "z"}], "]"}], ",", "2"}], 
        "]"}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalDelta]", "[", 
       RowBox[{"R_", ",", "logk_", ",", "l_", ",", "j_", ",", "z_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", 
         SuperscriptBox["Pi", "2"]}], 
        StyleBox[")",
         FontSize->12]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Fwind", "[", 
          RowBox[{
           RowBox[{"Exp", "[", "logk", "]"}], 
           StyleBox["R",
            FontSize->12]}], 
          StyleBox["]",
           FontSize->12]}], ")"}], "2"], 
       RowBox[{"Exp", "[", 
        RowBox[{"3", " ", "logk"}], "]"}], 
       RowBox[{"P", "[", 
        RowBox[{"logk", ",", "l", ",", "j", ",", "z"}], "]"}]}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    StyleBox[
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"R_", ",", "l_", ",", "j_", ",", "z_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"0.81", "/", "21.18457487637353"}], "*", 
       RowBox[{"Sqrt", "[", " ", 
        RowBox[{"integral", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[CapitalDelta]", "[", 
             RowBox[{"R", ",", "#", ",", "l", ",", "j", ",", "z"}], "]"}], 
            "&"}], ")"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"kmin", "[", 
             RowBox[{"l", ",", "j", ",", "z"}], "]"}]}], "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", 
            RowBox[{"kmax", "[", 
             RowBox[{"l", ",", "j", ",", "z"}], "]"}]}], "]"}]}], "]"}], 
        StyleBox["]",
         FontSize->12]}]}]}],
     FontSize->16], 
    StyleBox[";",
     FontSize->12]}], 
   StyleBox[" ",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"Table\[Sigma]", "[", 
       RowBox[{"R_", ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      "\[IndentingNewLine]", "\t\t", "\t\t", "\t\t", "\t\t", "\t\t", "\t\t", 
      "\t\t", "\t\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{"\[Sigma]", "[", 
           RowBox[{"R", ",", "l", ",", "j", ",", "z"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      SubscriptBox[
       StyleBox["\[Sigma]",
        FontSize->12], "8"], "=", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"8", ",", "20", ",", "10", ",", "201"}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"Growth", "[", 
       RowBox[{"z_", ",", "l_", ",", "j_"}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     StyleBox["\[IndentingNewLine]",
      FontSize->16], 
     RowBox[{
      RowBox[{
       StyleBox["201",
        FontSize->16], 
       StyleBox["*",
        FontSize->16], 
       RowBox[{
        RowBox[{
         StyleBox["(",
          FontSize->16], 
         StyleBox[
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"8", ",", "l", ",", "j", ",", 
               RowBox[{
                RowBox[{"IntegerPart", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"603", "-", 
                    RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}], "-", 
                "1"}]}], "]"}],
             FontSize->12], 
            StyleBox["/",
             FontSize->12], 
            StyleBox[
             SubscriptBox[
              StyleBox["\[Sigma]",
               FontSize->12], "8"],
             FontSize->16]}], "-", 
           RowBox[{
            StyleBox[
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"8", ",", "l", ",", "j", ",", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"603", "-", 
                   RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}], "]"}],
             FontSize->12], 
            StyleBox["/",
             FontSize->12], 
            StyleBox[
             SubscriptBox[
              StyleBox["\[Sigma]",
               FontSize->12], "8"],
             FontSize->16]}]}],
          FontSize->9], 
         StyleBox[")",
          FontSize->16]}], 
        StyleBox["/",
         FontSize->16], 
        StyleBox["3",
         FontSize->16]}], 
       StyleBox[
        RowBox[{"(", 
         RowBox[{"z", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"603", "-", 
             RowBox[{"3", 
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"603", "-", 
                  RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}]}], ")"}],
            "/", "200"}]}], ")"}],
        FontSize->16]}], 
      StyleBox["+",
       FontSize->16], 
      RowBox[{
       StyleBox[
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"8", ",", "l", ",", "j", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"603", "-", 
              RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}], "]"}],
        FontSize->12], 
       StyleBox["/",
        FontSize->12], 
       StyleBox[
        SubscriptBox[
         StyleBox["\[Sigma]",
          FontSize->12], "8"],
        FontSize->16]}]}]}], 
    StyleBox[";",
     FontSize->16], 
    StyleBox[
     RowBox[{
      RowBox[{"\[Sigma]8", "[", 
       RowBox[{"z_", ",", "l_", ",", "j_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"201", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"8", ",", "l", ",", "j", ",", 
             RowBox[{
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"603", "-", 
                  RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}], "-", 
              "1"}]}], "]"}], "-", 
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"8", ",", "l", ",", "j", ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"603", "-", 
                 RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}], "]"}]}], 
          ")"}], "/", "3"}], 
        RowBox[{"(", 
         RowBox[{"z", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"603", "-", 
             RowBox[{"3", 
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"603", "-", 
                  RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}]}], ")"}],
            "/", "200"}]}], ")"}]}], "+", 
       RowBox[{"\[Sigma]", "[", 
        RowBox[{"8", ",", "l", ",", "j", ",", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"603", "-", 
             RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}], "]"}]}]}],
     FontSize->16], 
    StyleBox[";",
     FontSize->16]}], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"fsigma8", "[", 
       RowBox[{"z_", ",", "l_", ",", "j_"}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox[
       RowBox[{"201", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"8", ",", "l", ",", "j", ",", 
             RowBox[{
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"603", "-", 
                  RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}], "-", 
              "1"}]}], "]"}], "-", 
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"8", ",", "l", ",", "j", ",", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"603", "-", 
                 RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}], "]"}]}], 
          ")"}], "/", "3"}], 
        RowBox[{"(", 
         RowBox[{"z", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"603", "-", 
             RowBox[{"3", 
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"603", "-", 
                  RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}]}], ")"}],
            "/", "200"}]}], ")"}]}],
       FontSize->16], 
      StyleBox["+",
       FontSize->16], 
      RowBox[{
       StyleBox[
        RowBox[{"\[Sigma]", "[", 
         RowBox[{"8", ",", "l", ",", "j", ",", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"603", "-", 
              RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}], "]"}],
        FontSize->16], 
       StyleBox["201",
        FontSize->16], 
       StyleBox["*",
        FontSize->16], 
       RowBox[{
        RowBox[{
         StyleBox["(",
          FontSize->16], 
         RowBox[{
          RowBox[{
           StyleBox[
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"8", ",", "l", ",", "j", ",", 
              RowBox[{
               RowBox[{"IntegerPart", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"603", "-", 
                   RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}], "-", 
               "1"}]}], "]"}],
            FontSize->12], 
           StyleBox["/",
            FontSize->12], 
           StyleBox[
            SubscriptBox[
             StyleBox["\[Sigma]",
              FontSize->12], "8"],
            FontSize->16]}], 
          StyleBox["-",
           FontSize->16], 
          StyleBox[
           RowBox[{
            StyleBox[
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"8", ",", "l", ",", "j", ",", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"603", "-", 
                   RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}], "]"}],
             FontSize->12], 
            StyleBox["/",
             FontSize->12], 
            SubscriptBox[
             StyleBox["\[Sigma]",
              FontSize->12], "8"]}],
           FontSize->16]}], 
         StyleBox[")",
          FontSize->16]}], 
        StyleBox["/",
         FontSize->16], 
        StyleBox["3",
         FontSize->16]}], 
       StyleBox[
        RowBox[{"(", 
         RowBox[{"z", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"603", "-", 
             RowBox[{"3", 
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"603", "-", 
                  RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}]}], ")"}],
            "/", "200"}]}], ")"}],
        FontSize->16]}], 
      StyleBox["+",
       FontSize->16], 
      StyleBox[
       RowBox[{
        StyleBox[
         RowBox[{"\[Sigma]", "[", 
          RowBox[{"8", ",", "l", ",", "j", ",", 
           RowBox[{"IntegerPart", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"603", "-", 
               RowBox[{"200", "z"}]}], ")"}], "/", "3"}], "]"}]}], "]"}],
         FontSize->12], 
        StyleBox["/",
         FontSize->12], 
        SubscriptBox[
         StyleBox["\[Sigma]",
          FontSize->12], "8"]}],
       FontSize->16]}]}], 
    StyleBox[";",
     FontSize->16]}], "\n", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"Fmasses", "[", 
       RowBox[{"R_", ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"z_", "?", "NumberQ"}]}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox["2.84",
       FontSize->16], 
      StyleBox[" ",
       FontSize->16], 
      RowBox[{
       StyleBox["(",
        FontSize->16], 
       RowBox[{
        StyleBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FObar", "[", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"3", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], 
               ")"}]}], ",", "omebar"}], "]"}], "+", 
           RowBox[{"FOdm", "[", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"3", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], 
               ")"}]}], ",", "omedm", ",", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"-", "l"}], "]"}], "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]]}], ",", 
             RowBox[{"Exp", "[", 
              RowBox[{"-", "j"}], "]"}]}], "]"}]}], ")"}],
         FontSize->16], 
        StyleBox["/",
         FontSize->16], 
        SuperscriptBox[
         RowBox[{"(", 
          StyleBox[
           RowBox[{"1", "+", 
            RowBox[{"3", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}],
           FontSize->16], ")"}], "3"]}], 
       StyleBox[")",
        FontSize->16]}], 
      StyleBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", " ", "R", ")"}], "3"], "/", 
        SuperscriptBox["h", "2"]}],
       FontSize->16]}]}], 
    StyleBox[";",
     FontSize->16]}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"TableFmasses", "[", 
       RowBox[{"R_", ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      "\[IndentingNewLine]", "\t\t", "\t\t", "\t\t", "\t\t", "\t\t", "\t\t", 
      "\t\t", "\t\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{"Fmasses", "[", 
           RowBox[{"R", ",", "l", ",", "j", ",", "z"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"D\[Sigma]", "[", 
       RowBox[{
        RowBox[{"R_", "?", "NumberQ"}], ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"z_", "?", "NumberQ"}]}], "]"}], ":=", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Sigma]", "[", 
          RowBox[{"x", ",", "l", ",", "j", ",", "z"}], "]"}], ",", "x"}], 
        "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "R"}]}]}], ";"}],
    FontSize->16], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"TableD\[Sigma]", "[", 
       RowBox[{"R_", ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      "\[IndentingNewLine]", "\t\t", "\t\t", "\t\t", "\t\t", "\t\t", "\t\t", 
      "\t\t", "\t\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{"D\[Sigma]", "[", 
           RowBox[{"R", ",", "l", ",", "j", ",", "z"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"Fr", "[", 
       RowBox[{"M_", ",", "l_", ",", "j_", ",", "z_"}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox["10",
       FontSize->16], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"M", " ", 
         StyleBox[
          SuperscriptBox["h", "2"],
          FontSize->16], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             StyleBox["1",
              FontSize->16], 
             StyleBox["+",
              FontSize->16], 
             RowBox[{
              StyleBox["3",
               FontSize->16], 
              RowBox[{
               StyleBox[
                RowBox[{"(", 
                 RowBox[{"201", "-", "z"}], ")"}],
                FontSize->16], 
               StyleBox["/",
                FontSize->16], 
               StyleBox[
                RowBox[{
                 StyleBox["200",
                  FontSize->16], "3"}]]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], ")"}], 
           "3"], "/", 
          RowBox[{"(", 
           RowBox[{"2.84", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"omebar", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"3", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], ")"}],
                 "3"]}], "+", 
              StyleBox[
               RowBox[{"FOdm", "[", 
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"3", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], 
                   ")"}]}], ",", "omedm", ",", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "l"}], "]"}], "*", 
                  SuperscriptBox["10", 
                   RowBox[{"-", "5"}]]}], ",", 
                 RowBox[{"Exp", "[", 
                  RowBox[{"-", "j"}], "]"}]}], "]"}],
               FontSize->16]}], ")"}]}], ")"}]}]}], ")"}], 
       RowBox[{"1", "/", "3"}]]}]}], 
    StyleBox[";",
     FontSize->16]}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"TableFr", "[", 
       RowBox[{"R_", ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      "\[IndentingNewLine]", "\t\t", "\t\t", "\t\t", "\t\t", "\t\t", "\t\t", 
      "\t\t", "\t\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{"Fr", "[", 
           RowBox[{"R", ",", "l", ",", "j", ",", "z"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"dn", "[", 
       RowBox[{"R_", ",", 
        RowBox[{"deltac_", "?", "NumberQ"}], ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"z_", "?", "NumberQ"}]}], "]"}],
      FontSize->16], 
     StyleBox[":=",
      FontSize->16], 
     RowBox[{
      StyleBox[
       RowBox[{"(", "2.84", ")"}],
       FontSize->16], 
      StyleBox[
       SqrtBox[
        RowBox[{"2", "/", "Pi"}]],
       FontSize->16], 
      StyleBox[
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"Fmasses", "[", 
             RowBox[{"R", ",", "l", ",", "j", ",", "z"}], "]"}], "2"], 
           RowBox[{"\[Sigma]", "[", 
            RowBox[{"R", ",", "l", ",", "j", ",", "z"}], "]"}]}], ")"}]}], 
        ")"}],
       FontSize->16], 
      StyleBox["deltac",
       FontSize->16], 
      StyleBox["   ",
       FontSize->16], 
      RowBox[{
       RowBox[{
        StyleBox["(",
         FontSize->16], 
        RowBox[{
         RowBox[{
          StyleBox[
           RowBox[{"omebar", "/", 
            SuperscriptBox["h", "2"]}],
           FontSize->16], 
          SuperscriptBox[
           RowBox[{"(", 
            StyleBox[
             RowBox[{"1", "+", 
              RowBox[{"3", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}],
             FontSize->16], ")"}], "3"]}], 
         StyleBox["+",
          FontSize->16], 
         StyleBox[
          RowBox[{
           RowBox[{"FOdm", "[", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"3", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], 
               ")"}]}], ",", "omedm", ",", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"-", "l"}], "]"}], "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]]}], ",", 
             RowBox[{"Exp", "[", 
              RowBox[{"-", "j"}], "]"}]}], "]"}], "/", 
           SuperscriptBox["h", "2"]}],
          FontSize->16]}], 
        StyleBox[")",
         FontSize->16]}], 
       StyleBox["/",
        FontSize->16], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], ")"}], 
        "3"]}], 
      StyleBox[
       RowBox[{"Exp", "[", 
        RowBox[{
         StyleBox[
          RowBox[{"-", 
           SuperscriptBox["deltac", "2"]}],
          FontSize->16], 
         StyleBox["/",
          FontSize->16], 
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          RowBox[{
           StyleBox["2",
            FontSize->16], 
           SuperscriptBox[
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"R", ",", 
              StyleBox["l",
               FontSize->16], 
              StyleBox[",",
               FontSize->16], 
              StyleBox["j",
               FontSize->16], 
              StyleBox[",",
               FontSize->16], 
              StyleBox["z",
               FontSize->16]}], "]"}], "2"]}], 
          StyleBox[")",
           FontSize->16]}]}], "]"}],
       FontSize->16], 
      StyleBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"R", "/", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"R", ",", "l", ",", "j", ",", "z"}], "]"}]}], ")"}]}], 
         RowBox[{"D\[Sigma]", "[", 
          RowBox[{"R", ",", "l", ",", "j", ",", "z"}], "]"}]}], ")"}],
       FontSize->16]}]}], 
    StyleBox[";",
     FontSize->16]}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"Tabledn", "[", 
       RowBox[{"R_", ",", 
        RowBox[{"deltac_", "?", "NumberQ"}], ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{"dn", "[", 
           RowBox[{"R", ",", "deltac", ",", "l", ",", "j", ",", "z"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["nM",
       FontSize->16], 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       StyleBox[
        RowBox[{"M_", "?", "NumberQ"}],
        FontSize->16], 
       RowBox[{
        StyleBox["(*",
         FontSize->16], 
        RowBox[{
         SuperscriptBox[
          StyleBox["10",
           FontSize->16], "8"], 
         StyleBox[" ",
          FontSize->16], 
         StyleBox["masas",
          FontSize->16], 
         StyleBox[" ",
          FontSize->16], 
         StyleBox["solares",
          FontSize->16]}], 
        StyleBox["*)",
         FontSize->16]}], 
       StyleBox[",",
        FontSize->16], 
       StyleBox[
        RowBox[{"deltac_", "?", "NumberQ"}],
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox[
        RowBox[{"l_", "?", "NumberQ"}],
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox[
        RowBox[{"j_", "?", "NumberQ"}],
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox[
        RowBox[{"z_", "?", "NumberQ"}],
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[":=",
      FontSize->16], 
     StyleBox[
      RowBox[{"integral", "[", 
       RowBox[{
        StyleBox[
         RowBox[{
          RowBox[{"dn", "[", 
           RowBox[{"#", ",", "deltac", ",", "l", ",", "j", ",", "z"}], "]"}], 
          "&"}],
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", 
          RowBox[{"Fr", "[", 
           RowBox[{"M", ",", "l", ",", "j", ",", "z"}], "]"}]}], "]"}], ",", 
        "10000"}], "]"}],
      FontSize->16]}], 
    StyleBox[";",
     FontSize->16]}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"Table", 
         StyleBox["nM",
          FontSize->16]}]], "[", 
       RowBox[{
        RowBox[{"M_", "?", "NumberQ"}], 
        RowBox[{"(*", 
         RowBox[{
          SuperscriptBox[
           StyleBox["10",
            FontSize->16], "8"], " ", "masas", " ", "solares"}], "*)"}], ",", 
        
        RowBox[{"deltac_", "?", "NumberQ"}], ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{"nM", "[", 
           RowBox[{"M", ",", "deltac", ",", "l", ",", "j", ",", "z"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"rcom", "[", 
       RowBox[{
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"z_", "?", "NumberQ"}]}], "]"}], ":=", " ", 
      RowBox[{"integral", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", 
           RowBox[{"hfun", "[", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", "#"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"-", "l"}], "]"}], "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]]}], ",", 
             RowBox[{"Exp", "[", 
              RowBox[{"-", "j"}], "]"}], ",", "omedm"}], "]"}]}], ")"}], 
         "&"}], ",", "0", ",", 
        RowBox[{"3", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], "]"}]}], ";"}],
    
    FontSize->16], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"Tablercom", "[", 
       RowBox[{
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{"rcom", "[", 
           RowBox[{"l", ",", "j", ",", "z"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}],
    FontSize->16], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"dVdzd\[CapitalOmega]", "[", 
       RowBox[{
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"z_", "?", "NumberQ"}]}], "]"}], ":=", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Pi", "/", "180"}], ")"}], "2"], " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"rcom", "[", 
          RowBox[{"l", ",", "j", 
           StyleBox[",",
            FontSize->16], "z"}], "]"}], "2"], "/", 
        RowBox[{"hfun", "[", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"3", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], ")"}]}], 
          ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"-", "l"}], "]"}], "*", 
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]]}], ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", "j"}], "]"}], ",", "omedm"}], "]"}]}]}]}], ";"}],
    FontSize->16], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"TabledVdzd\[CapitalOmega]", "[", 
       RowBox[{
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{"dVdzd\[CapitalOmega]", "[", 
           RowBox[{"l", ",", "j", ",", "z"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}],
    FontSize->16], 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"Tabledhfun", "[", 
       RowBox[{
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{"hfun", "[", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"3", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}]}], ")"}]}],
             ",", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"-", "l"}], "]"}], "*", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]]}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"-", "j"}], "]"}], ",", "omedm"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}],
    FontSize->16], "\[IndentingNewLine]", 
   StyleBox["\[IndentingNewLine]",
    FontSize->16], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"dNdz", "[", 
       RowBox[{
        RowBox[{"M_", "?", "NumberQ"}], ",", 
        RowBox[{"deltac_", "?", "NumberQ"}], ",", 
        RowBox[{"l_", "?", "NumberQ"}], ",", 
        RowBox[{"j_", "?", "NumberQ"}], ",", 
        RowBox[{"znum_", "?", "NumberQ"}]}], "]"}], ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"201", "-", "z"}], ")"}], "/", "200"}]}], ",", 
          RowBox[{
           RowBox[{"dVdzd\[CapitalOmega]", "[", 
            RowBox[{"l", ",", "j", ",", "z"}], "]"}], 
           RowBox[{"nM", "[", 
            RowBox[{"M", ",", "deltac", ",", "l", ",", "j", ",", "z"}], 
            "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", "201", ",", "znum", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}],
    FontSize->16], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{
  3.509368859215281*^9, {3.509369907896824*^9, 3.509370108524181*^9}, {
   3.509373477444502*^9, 3.509373481700485*^9}, {3.509373513179132*^9, 
   3.509373587369544*^9}, {3.509380115877343*^9, 3.509380143178195*^9}, {
   3.509392113376926*^9, 3.509392166991666*^9}, {3.509392778322144*^9, 
   3.509392874288129*^9}, {3.509392905813339*^9, 3.509392906143641*^9}, {
   3.509392951492415*^9, 3.509392974228783*^9}, {3.509889002617493*^9, 
   3.509889012053054*^9}, {3.509889374775866*^9, 3.509889375407338*^9}, {
   3.509890214714276*^9, 3.509890216900067*^9}, {3.509890377853346*^9, 
   3.509890427109459*^9}, {3.509891828528406*^9, 3.50989183070197*^9}, 
   3.510595702645807*^9, {3.510597244030619*^9, 3.510597247996706*^9}, {
   3.510609547221792*^9, 3.51060959664342*^9}, {3.511705389748797*^9, 
   3.511705420699049*^9}, {3.511896264382943*^9, 3.511896267921233*^9}, {
   3.517075427948774*^9, 3.517075429826409*^9}, {3.517665915258137*^9, 
   3.517665919952117*^9}, {3.517773839934355*^9, 3.51777386727557*^9}, {
   3.517773909893013*^9, 3.517773914576664*^9}, {3.520872754792461*^9, 
   3.520872800405123*^9}, {3.520873486180518*^9, 3.520873488212216*^9}, {
   3.521041703320686*^9, 3.521041708173047*^9}, {3.524173148949214*^9, 
   3.524173194340165*^9}, 3.524173232335428*^9, {3.524327257455134*^9, 
   3.524327308085494*^9}, {3.52432775473324*^9, 3.5243277684429*^9}, {
   3.524328251795702*^9, 3.524328256961104*^9}, {3.524328305527989*^9, 
   3.524328345052757*^9}, {3.524339644797206*^9, 3.524339693314782*^9}, {
   3.524339732392066*^9, 3.524339737598591*^9}, {3.524345898817827*^9, 
   3.524345908181188*^9}, {3.524418054271775*^9, 3.524418059816301*^9}, {
   3.524418146090079*^9, 3.524418252881675*^9}, {3.524418325913003*^9, 
   3.524418415602688*^9}, 3.524418948477129*^9, {3.524516718469885*^9, 
   3.524516767317251*^9}, {3.52452403843376*^9, 3.524524052711068*^9}, {
   3.524943646670669*^9, 3.524943659227595*^9}, {3.541913439460795*^9, 
   3.541913452403204*^9}, {3.541913502263321*^9, 3.541913687051359*^9}, {
   3.541913732852908*^9, 3.541913844158106*^9}, 3.54306701443543*^9, {
   3.5873051494296217`*^9, 3.587305185464932*^9}, {3.5873052377853947`*^9, 
   3.5873052940556307`*^9}, {3.5873053722947073`*^9, 3.587305482929332*^9}, {
   3.587404410792274*^9, 3.58740442448921*^9}, {3.587404467814707*^9, 
   3.587404467980734*^9}, {3.5874046750950747`*^9, 3.587404708698483*^9}, {
   3.587405090090157*^9, 3.5874050902169733`*^9}, {3.587405122612947*^9, 
   3.587405128450836*^9}, {3.58740704261865*^9, 3.587407050274406*^9}, {
   3.587407561048106*^9, 3.587407561400339*^9}, {3.5874078601780167`*^9, 
   3.587407869490676*^9}, {3.5874079600784616`*^9, 3.587407963119*^9}, {
   3.587408706515011*^9, 3.587408736771247*^9}, {3.587409417425962*^9, 
   3.587409422010872*^9}, {3.587411818743191*^9, 3.587411882897943*^9}, {
   3.5874122136170273`*^9, 3.58741222011061*^9}, {3.587412617282569*^9, 
   3.5874126198465977`*^9}, {3.587412776849895*^9, 3.5874127998737183`*^9}, {
   3.5876848184885817`*^9, 3.587684844484145*^9}, {3.60556344831956*^9, 
   3.605563454704317*^9}, {3.60556405888661*^9, 3.605564074378994*^9}, {
   3.605564337208157*^9, 3.605564339752851*^9}, {3.605566031105133*^9, 
   3.605566045945898*^9}, {3.6059920320386868`*^9, 3.605992059509055*^9}, 
   3.605995995293787*^9, {3.605996814087702*^9, 3.6059969388168087`*^9}, {
   3.605997001847818*^9, 3.6059970238833323`*^9}, {3.605997186687044*^9, 
   3.605997194933523*^9}, {3.606092859334855*^9, 3.606092879826221*^9}, {
   3.607104256948288*^9, 3.6071043453995457`*^9}, {3.6071043778282833`*^9, 
   3.6071044584333973`*^9}, {3.607104505490468*^9, 3.6071045744273663`*^9}, {
   3.607104613554265*^9, 3.607104625382225*^9}, {3.607104688385805*^9, 
   3.6071048183625937`*^9}, {3.607107267557838*^9, 3.607107327117896*^9}, {
   3.6071073638832893`*^9, 3.6071073642470217`*^9}, {3.607107848262583*^9, 
   3.607107892329277*^9}, {3.607108205267617*^9, 3.607108205713954*^9}, {
   3.607108318495397*^9, 3.607108318940558*^9}, {3.607108423747891*^9, 
   3.6071084412333813`*^9}, {3.607108509350422*^9, 3.607108636310364*^9}, {
   3.607112073901054*^9, 3.607112171017201*^9}, {3.607123664386424*^9, 
   3.607123674510475*^9}, 3.607123718275735*^9, {3.607123753817127*^9, 
   3.607123788930019*^9}, 3.607124122642487*^9, {3.607175262173523*^9, 
   3.6071753971611843`*^9}, {3.6071756756453257`*^9, 3.607175676837661*^9}, {
   3.607175712664448*^9, 3.607175784140082*^9}, {3.609179301924207*^9, 
   3.6091793580547*^9}, {3.609179417351312*^9, 3.609179470916809*^9}, {
   3.609179717021895*^9, 3.609179745491897*^9}, {3.609179783671963*^9, 
   3.609179795466877*^9}, {3.609180955598407*^9, 3.609181083711998*^9}, {
   3.609181122447283*^9, 3.609181149012489*^9}, {3.609263466886224*^9, 
   3.609263468913945*^9}, {3.609265570552343*^9, 3.609265571404925*^9}, {
   3.609271337673698*^9, 3.609271352360997*^9}, {3.60927148040522*^9, 
   3.609271481043413*^9}, {3.609273371845959*^9, 3.609273549665756*^9}, {
   3.609273649442082*^9, 3.609273652544478*^9}, {3.609273997519657*^9, 
   3.609274007196472*^9}, {3.609274403976345*^9, 3.609274423052292*^9}, {
   3.60927449945241*^9, 3.609274626390532*^9}, {3.609278964267127*^9, 
   3.609278986379067*^9}, {3.609279020185007*^9, 3.609279066970596*^9}, {
   3.609290663607752*^9, 3.609290741132958*^9}, {3.609290779454455*^9, 
   3.609290838830547*^9}, {3.609291834662165*^9, 3.609291848980752*^9}, {
   3.609380860100856*^9, 3.609380985327335*^9}, {3.609381034055144*^9, 
   3.609381181604421*^9}, {3.609381270339514*^9, 3.609381290327165*^9}, {
   3.609381485393498*^9, 3.609381486151857*^9}, {3.609381631316237*^9, 
   3.60938164442396*^9}, {3.609382099383671*^9, 3.609382100243951*^9}, {
   3.609382194304497*^9, 3.609382198677686*^9}, 3.609382352406383*^9, {
   3.609382427070165*^9, 3.609382427560566*^9}, {3.609417902257599*^9, 
   3.609417906237154*^9}, {3.609417939635979*^9, 3.609417943052449*^9}, {
   3.609421701080253*^9, 3.609421724992789*^9}, {3.609421887655424*^9, 
   3.609422047160058*^9}, {3.60942207950374*^9, 3.60942224201073*^9}, {
   3.609422319642486*^9, 3.609422335078664*^9}, {3.609422438475517*^9, 
   3.609422457839378*^9}, {3.609422514594149*^9, 3.609422547433598*^9}, {
   3.609422589710151*^9, 3.609422617109516*^9}, {3.609422726108493*^9, 
   3.609422775257442*^9}, {3.60942358972909*^9, 3.609423594208546*^9}, {
   3.609423740186985*^9, 3.6094237754934*^9}, {3.609423821676039*^9, 
   3.609423837394789*^9}, {3.609423871494236*^9, 3.60942387704838*^9}, {
   3.609423985086391*^9, 3.60942398568593*^9}, {3.609424021333508*^9, 
   3.609424049665444*^9}, {3.609424089120522*^9, 3.609424110487581*^9}, {
   3.609424156143267*^9, 3.609424164727216*^9}, {3.609424199844316*^9, 
   3.609424279478079*^9}, {3.609424427552229*^9, 3.609424591278674*^9}, {
   3.609424935428234*^9, 3.609425119101096*^9}, {3.609425508836437*^9, 
   3.609425513335337*^9}, {3.60942608130816*^9, 3.609426081711322*^9}, {
   3.609428426248041*^9, 3.609428429764888*^9}, 3.609429549554633*^9, {
   3.60944237556816*^9, 3.609442444891362*^9}, {3.609443948785266*^9, 
   3.609444005850973*^9}, {3.609444035897188*^9, 3.60944412132554*^9}, 
   3.609445203669427*^9, {3.609445341740174*^9, 3.609445370521948*^9}, {
   3.609445414460984*^9, 3.609445417998942*^9}, {3.609445609975019*^9, 
   3.609445626346704*^9}, {3.609445667245451*^9, 3.609445687784016*^9}, {
   3.609445720701501*^9, 3.609445729407729*^9}, {3.60944684621026*^9, 
   3.609446876307213*^9}, {3.60944828199734*^9, 3.609448283178734*^9}, {
   3.60944834855112*^9, 3.609448349784647*^9}, {3.609448490992699*^9, 
   3.609448491239106*^9}, {3.60944857516877*^9, 3.609448575992725*^9}, {
   3.609448893085446*^9, 3.609448894496426*^9}, {3.609449075092521*^9, 
   3.609449084423094*^9}, {3.609449136737013*^9, 3.609449146527538*^9}, {
   3.609449555505515*^9, 3.609449556392755*^9}, {3.609449604257984*^9, 
   3.60944960497982*^9}, {3.609449763434494*^9, 3.609449763742649*^9}, {
   3.609450059714559*^9, 3.609450060744067*^9}, 3.609450179567249*^9, {
   3.609450232825299*^9, 3.609450290851976*^9}, {3.60945032337475*^9, 
   3.60945032763234*^9}, {3.609542053554841*^9, 3.609542081635612*^9}, {
   3.609543729791485*^9, 3.609543750936236*^9}, {3.609602301189535*^9, 
   3.609602301801298*^9}, {3.609603532271316*^9, 3.609603577796451*^9}, {
   3.610586645691261*^9, 3.6105866473391*^9}, 3.610586688640311*^9, {
   3.610586719991887*^9, 3.610586721470285*^9}, {3.610837964577879*^9, 
   3.610838015657879*^9}, {3.61083810971303*^9, 3.610838132098433*^9}, {
   3.610838292308443*^9, 3.610838308529861*^9}, {3.610839310147045*^9, 
   3.610839317116081*^9}, {3.610839361817705*^9, 3.610839362158478*^9}, {
   3.610841520941302*^9, 3.610841523028855*^9}, {3.61084410571653*^9, 
   3.610844119944323*^9}, {3.610927995285761*^9, 3.610927995988269*^9}, {
   3.610928053403968*^9, 3.610928101167162*^9}, {3.610928288957438*^9, 
   3.610928300181364*^9}, 3.611175906104801*^9, {3.611251438877765*^9, 
   3.611251477152261*^9}, {3.614382882693505*^9, 3.614382884396209*^9}, 
   3.614382937530379*^9, {3.614383169586836*^9, 3.614383170372791*^9}, {
   3.614383204055692*^9, 3.614383256786963*^9}, {3.614383327853748*^9, 
   3.614383331790663*^9}, {3.614383434874749*^9, 3.614383435637675*^9}, {
   3.636808978660999*^9, 3.636808992680825*^9}, 3.636809111243053*^9, {
   3.636809175702816*^9, 3.63680921738954*^9}, {3.636809532680117*^9, 
   3.636809534317635*^9}, {3.636809582090447*^9, 3.636809593528717*^9}, {
   3.636809765814213*^9, 3.636809777128311*^9}, {3.636809876743029*^9, 
   3.636809936200714*^9}, {3.651799747778604*^9, 3.651799771754779*^9}, {
   3.653076345052741*^9, 3.6530763467777452`*^9}, {3.653076420410475*^9, 
   3.6530764492209*^9}, {3.65307648388335*^9, 3.653076487459118*^9}, {
   3.653076519560575*^9, 3.653076519881164*^9}, {3.653078567174508*^9, 
   3.65307856838785*^9}, {3.653079234303219*^9, 3.653079234420249*^9}, {
   3.653079650080741*^9, 3.653079650252881*^9}, {3.653079738605693*^9, 
   3.653079738778832*^9}, {3.6530797961598186`*^9, 3.6530797962774563`*^9}, {
   3.6530798652238607`*^9, 3.6530798653742037`*^9}, {3.653080741523697*^9, 
   3.6530807417135973`*^9}, {3.653081049012145*^9, 3.65308104912934*^9}, {
   3.6530825194167223`*^9, 3.653082519500763*^9}, {3.653082635870717*^9, 
   3.653082637141817*^9}, {3.653082712121386*^9, 3.653082778002329*^9}, {
   3.653082839996952*^9, 3.653082852410883*^9}, {3.65308288721416*^9, 
   3.653082937516556*^9}, {3.653082983942217*^9, 3.653082997581394*^9}, {
   3.653083170645743*^9, 3.653083170740574*^9}, {3.653083272343782*^9, 
   3.653083272496801*^9}, {3.653083439671417*^9, 3.653083456365603*^9}, {
   3.6530834895723457`*^9, 3.6530835123321123`*^9}, {3.653083570314369*^9, 
   3.653083625123316*^9}, {3.6530837052283697`*^9, 3.653083706610832*^9}, {
   3.653083772086687*^9, 3.653083927402338*^9}, {3.653084127951226*^9, 
   3.653084141726169*^9}, {3.6530841797229967`*^9, 3.65308417981833*^9}, {
   3.6530844048363543`*^9, 3.653084407164988*^9}, {3.6530846000275383`*^9, 
   3.6530846006346483`*^9}, {3.6530847110285187`*^9, 3.653084715217115*^9}, {
   3.653084957974351*^9, 3.653084958406781*^9}, {3.65308499071107*^9, 
   3.653084990828569*^9}, {3.654198381916728*^9, 3.654198387654912*^9}, {
   3.6543485494189157`*^9, 3.6543485506876802`*^9}, 3.654452746532577*^9, 
   3.654509264321719*^9, {3.654509812160492*^9, 3.654509828826498*^9}, {
   3.654520364302723*^9, 3.6545203643602943`*^9}, {3.654521291956107*^9, 
   3.654521299141746*^9}, {3.654522047281345*^9, 3.6545220504132643`*^9}, {
   3.6545220922595243`*^9, 3.654522108283874*^9}, {3.654522743182601*^9, 
   3.6545227434447803`*^9}, {3.654523091035021*^9, 3.654523197774144*^9}, {
   3.654523239015786*^9, 3.6545232555036993`*^9}, {3.654523305657892*^9, 
   3.654523306921419*^9}, {3.654523504781912*^9, 3.654523509580114*^9}, {
   3.6548105105647917`*^9, 3.65481051244272*^9}, {3.65481112243097*^9, 
   3.654811243038233*^9}, {3.654811796370327*^9, 3.65481182487753*^9}, 
   3.65540711034302*^9, {3.655407148535569*^9, 3.65540716056386*^9}, {
   3.655407230776997*^9, 3.655407258382066*^9}, 3.655407597845669*^9, {
   3.655407664800523*^9, 3.655407670131692*^9}, 3.65540827454458*^9, {
   3.6554086683401747`*^9, 3.655408669165477*^9}, {3.655409379941433*^9, 
   3.6554093879296293`*^9}, {3.655658417715972*^9, 3.6556584557659807`*^9}, 
   3.655659246580072*^9, {3.65565963693373*^9, 3.655659662884077*^9}, 
   3.655660588211755*^9, 3.655661780020776*^9, 3.6559271373893957`*^9, 
   3.655927371938686*^9, {3.655927764416842*^9, 3.65592776662607*^9}, 
   3.6560137080558243`*^9, {3.656013765031784*^9, 3.656013815341563*^9}, {
   3.656013847844371*^9, 3.6560138917407084`*^9}, {3.6560139324401703`*^9, 
   3.656013940831705*^9}, {3.656015452961762*^9, 3.656015504365223*^9}, {
   3.656016651636096*^9, 3.656016694667734*^9}, {3.656806384359243*^9, 
   3.656806391067988*^9}, {3.6568064757304583`*^9, 3.656806476249606*^9}, {
   3.6568065495552588`*^9, 3.656806613333102*^9}, {3.656807367744872*^9, 
   3.6568073692651367`*^9}, {3.656807527103434*^9, 3.65680757215034*^9}, {
   3.6568076657699747`*^9, 3.6568076789689837`*^9}, {3.656807763941493*^9, 
   3.656807778878852*^9}, {3.656884478925902*^9, 3.6568844888194733`*^9}, {
   3.656977570506509*^9, 3.65697757661429*^9}, {3.657288039033009*^9, 
   3.657288060654251*^9}, {3.657382165357519*^9, 3.657382191875972*^9}, {
   3.65800379569169*^9, 3.658003796807959*^9}, {3.666027858924364*^9, 
   3.666027859289537*^9}},
 FontSize->12],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", "20", ",", "10"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "8"}], ",", "0"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "8"}], ",", "4"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "8"}], ",", "10"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<z\>\"", ",", 
      "\"\<f(z)\!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\)(z)\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.649284840743781*^9, 3.649284880197845*^9}, {
   3.649285762083754*^9, 3.649285827501396*^9}, {3.649291787057678*^9, 
   3.6492917885912237`*^9}, {3.6492919933923817`*^9, 3.649292007661295*^9}, {
   3.649292048450851*^9, 3.649292086723041*^9}, {3.649293394613287*^9, 
   3.64929340151609*^9}, {3.6492934691249723`*^9, 3.6492935267221613`*^9}, {
   3.649379042606894*^9, 3.649379068188387*^9}, {3.649379111212577*^9, 
   3.649379150755718*^9}, {3.649379182083078*^9, 3.649379186626589*^9}, {
   3.654351830010614*^9, 3.654351846984709*^9}, {3.6543524155936413`*^9, 
   3.654352415720092*^9}, {3.6543843856643343`*^9, 3.654384393261956*^9}, 
   3.666478213435424*^9, {3.667224539281252*^9, 3.667224542616548*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
rxKiIOVYLLs8lo5+fb9nS5ZSkN+c4qwdSUfY9YJL/9ZT0Nle/WjPUzqumbz9
e3sjBefVjyZ3P6FDTyPgxcRmCigvG7+5BdHxe86Z6jEVCkZMO5Z9DiD5fvlL
lbmbgl/dw9FqfnRsutNTY61Jgeueq8UtvnTwXSqx/K5FwfQr1pDjPTo+bQ4O
oxygQMDs58Y0Lzr8Frtsu6BHgV/BrSPHPOm48MusrucQBQukJ+15HnTs6NK5
cuYIBY/v3gkOukPHwsItfB1HKRAbmE1XcqeDY7A289ExCnLbHgynuNHR0LPs
qtYJCvi9bx3kEr6U/xZI/TShQG7T4nynR3Q8mfz3Ld6UAu2mBNW//nRc9/95
78w5Ci67acd7P6DjmCRNXfQCBb6yvSuFiJ6lOxpjnC5TUH5j8RwJwj9WWnZi
4xUKvq/84PLKm/ht/EWw9yoF80u02bJEz4vrcdcOOFBwcKlzmzLhX5HkhKVu
FNSk974/5ELHpIbNWLk7BcyzzlLfbtHRXW323u0uBSJzljw1caLjFU1vMfUe
BQYnDty2uEGHtPzKgU9BFHwb+2Bwx5aOdREFd4++paBVzeXHp4t0zNuUvo3/
PQW/e5dc2XmBjpGcdyOZHyiQuJ/YnX+ejvdtTwylPlFwuq2vtPoMHf6WvgKN
aRS4eLjsOmZKx9Ux1+x7mRSErRdLbj9F5lXMQpr1hYKuWzqhQyfI/L8+1Ryd
T8HUmn7h/4zpYCsf8TP+SsGqChfP0WNkvxZAY34JBXscxH45G9GRbKDG/VJG
8rP849V/R+kI6tkYZ19JwZ1Cnb57BmR+/ltzSraGgqgr/ceFj9BhNCkm3FZH
wVd5jVs5hFfVf36h/zcKbFLx78A5OsQk/97QbKZg6V7d+42E/2c8b/1oK8lv
9WFRM8KfUdr5+HQ3BUuGTNY4m5B9MptopvCdgs8SdnsTCM9eZ6N/pVOkP+5h
Hgt16Bj/j+6u/4/cd9GqPU2bjtSL3lMNsxQ462xTOb2fDjn9jD9dc6mgidZR
YrXoEJKS/MlbREXV69kD6rvpKFmSev2WGBWe9+sie9XpcJ+nz5sSp2LXf+G/
vXfSweXeZs9bSUXC9u3v67aTfBT3j6yWp8K/4oqwhTLxI9vFKnY9Ffs+br8s
qETHwY9LhhU2UjH5hC8/aQsduSHa1K1KVNicibD/s5EOp4c9F3NUqJDVsq6I
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
WDi40+B/6PYCyA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
lAk8VF23sLpKwYEV8EPjJgL/A04QdIQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
c1fzUyLzm7LpRG5rLm6pFz3uVCT53B0yzWWQ/TIU1m/U4aKzUuDN6plcvD/+
OvC/A1ycMLE/dFQiD3I/l8wp38fFMVvD4DS1PCzd9nfAiuhpHP+iSTucB78W
e8MUosfQbeOwpFUe5tozcv9qkvl4xa/s4pOHqZSmV+FEz96KnCr05GFAKda4
nfCqym2Yqb+bj3ebD1UcWsfFp4+Bb2b98yFbk7c9RI6LLep8eqpv8xF6RTWW
JsvFpqN9wUF1+fBNkH7ovoqLNQ9eKJuvKsDNDTz1PEkuokX+tfuqFoBdbpUw
bynJQ/D1ewUHC3DhUoek6WIulicdql5jV4ATbwt/jC/gYlHP3/PMggJoyL34
qCzCRcClayLSrQVIKxZa+WAuFwu+dX8yYBRA0erukzpBLkSFM2aSFxRi9euL
l6/M4cInUC52aG0hQrS727P+cTBX5rneIrVCSAwaHhCa5YB/59WXDucKwb96
15rYaQ7cirt2v7tTiHv5if7fpjiYPawz0vW4EONnZP9qT3JwvyvNZ15kIexm
gq75/eJg+sIald2phWCEi/T2/eTAedSv43p5IQTvbFBNnE/61GXmXnR3IU6f
Ear6K8qFg5Dt2mZeIRIP0C2M55F+D+isnjOnCLOKFeNxwlzkX/8M2rIinH8Q
lNwuxMVjvWdZlVuKUN54/rIg0beKb3+cr2kRntrPdl3k40LnZvJDydQiLMtW
y1v7m4N6+f0RwSrFUNmf6B7D4eBzcEqnl2YxAoOcNZtZHITwr17spFOMXzTd
n/8YHJwfnPQxO1OMvMfUS+eoHEy8THaUeVwMvYZVejL9HKwRkjZ5P1gMK9Pn
CyIbOBC64+0Xxi5G+QeLqro6DjiUn9VPx4uxcUbRbaaGg8z8RtiJluBrVPV3
80oOwhW07llKluDYWEji03Lib+iHrKNrSpC+1/pibikH1nOlfuxVLMGywO2r
OMUcGDh4Km3bVQIX6pwO6SIOVEa+X1m3rwT9O5r99As4WHrsXNxSwxJs1jPs
8Oog/hfUDwmdLoGv3OK03DYOhhQ1V06eL8HodJf/WAsH5WEJp1jXyf7tUdfW
N3OQKCwZ2ONUgrTki3pmjRw4UMdE8v1K4Gg1NqeslgMzY4uDyaEl6NbIHJys
5kC7qPZh9NsS7F5yL29LFQfzIuIn3L6U4F/F3P9CyjiINjlD06GX4LGiDMs2
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
0H29SML7AvHrQsbcz6o9CEmx+fLuHBMtNpIZkbo9WLwzZz7LjIla+64FDrd7
ILbXLP2qERPz0lWmR516cPW8ksiMIRN644/ptg96UOMxx8L3MBNVjur553x6
8Ljiw9yPeqTP74XZHo7ugcDhabOv+5kQKPh+ovJtDy5eb/z0YB8T+2f19+77
0INSv1iBBXuZKHabXqaW0QO3ZoNk5T1MFHidKV9bS/SejOC7pcbEn8r0lKgm
otfp5km+XUxoicyPWN7Rg9zQA4kBO5i4p3/JO6iX6M+V+rdmO8nb03z7BRSi
v497/PNWJn7XLbV4Qif6/xS936dK5l3cTk+Q2wM1meC/LcpMOBlVbH/4rQd8
4webxEH69flq2elfxI88W7m3hOdX83+i/830YL2H/x11LSZ2LG78NcbXCzX9
9IoGTSbSg13r6WK9ONv1x3aK8KaGDbm0yPUi/ufztCPbSF9sXtW7bWMvbCaV
XrPJ/pu+mGoGb+nFppk6Xy8Vkp/ululTar1I4hexLthC5keq/F6/YS8+L3KT
UtrIhN3L9w+YTr3IV7l1f/4q8v0N9AG9B71w3b7A9v0KJmgZctqJHr2A2seT
B6VJvtrDZ6/79aJUm6V8fxkThkv8Hv6I7UXVEath7kImRN7WDB1/34snxrMN
jyXIeW2buzczuRcGJyNz1y1gYrfJQz7nnF40nO0OOiPGxMRwnlVPQS+eWzm6
Tc4j/WA/VaxZ1kvmcqldkAgTCi/s3f829KLt2jHdOiEmGGs+DVu29SL45ug2
G0EmYlM5+4q7e3HqzjNZAQEmLPdujJUb7IWUk8L813NIvpsv8j+i9uKBU6eT
4yLSZ+diLtBYvUjr3eMgRXgDx/pLdUZ7wdwTfyuH8M2TOPVI5HcvTAQdbKcJ
X3l0INV2thc+Nn3WEaLkvlNuOlAn0IeC2v0XtAjv1BE9Qf8Ffdj4YtEZ17lM
sJ5pei1Z34c/q1MM+cn+cauc6A6b+7DNfZn+238MWH1M1+lU7oMN7YHOwVkG
uuq2zA3T6ENroqG29wwDlaKyj2WO9iFBjaMiOsFAvI/Ak813+2BsvGHJYi4D
i2k+rsoP+7BVvz6yls2AGxY4bPfsw8J9d+QfsRgwn1h+bo9/H5pVSzTG6QxI
XFLeaRzbh6MLLaw6KQzcL0pXOJXQB2URQY7/EAOcFRprznzswwK+pDuHBhko
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUl3c81t8bxiVJNL5IQ6KhZbaT5KpESESUhtVCQ0hGKkSSUZKUQogmZYXs
nb33fB7PHlGSrPQ7v7+8zuvz+Zzzvq77vq/zWH32mskFQQEBgW3CAgL//6t/
gd1UxDHTXD7pr/561newPh0/O7B8O9b+3bi0/h8fS8TaHqYvPwhlgZpf43/5
UNm9ODF6uSn2Cy9KNpzkQ71xW0rY8vO4JPFMbnKEj6KXpTtClrsgR+GtkDGd
j+3N7qnrTt9AubIe1XOQj/ciKsoFUa5o2MzLf0PhI+zGc/lhOQ/Qdqq6Tffy
cc7oqqTx+jsQ08rivG3jw9cnyD1wuR/OnP5WP1PBR4HMxczjOX64aGn/cVM5
H+NZ+0bXnL4HRxuxANNSPq4M/b6WG+UPP1uj/R8K+TA9bW3Ll3uA5Osd6WbZ
fDwcU0/MLnqALFePUO9MPiofS9H8bAJR7LHi6scMPvZWVluufB2ENi+r9bNS
+XA/lxjF0QrGwN1Zs5U+85E249X9hR4Mzr3XA8eT+eBHnlp2914IfgVo5/l8
5GP9jh3HDdc/xEwQ63nSez6sGxeFS397iA0+AtduE/6Xl7lNTNtHGMkVnU4q
4+Oy7+D9k0KhyB9b/KC3hA+RpoY3haahCNgit2R+MR+Jsvnl6xJDcezKptd7
iJ4DVz7Qg36HQvbtts2X8/m4NffeGvOIx8iQ0dWv/srHcjPn/QXMx/A6YdIx
kcVHZryVtfyuMOiHnTm/iej9sVc95kdHGChzne4EpPFx3mV4+YPl4Zj/KzJN
h/Bvmx12M80xHHsFfVSMCL9g2Paenm/huCpu9+HEWz5effaIUnF9igbVnfF2
r/no5s6Wa22OwOMrzY8DX/LxzuON199Nz1Di+XXBk0g+3ET0KOt9nuFXYOyD
l8/4WLz+YZyH6nOYvnfwSXrCh5HNMnm54EgsZYo61QfxIfsjx0+XFgnd3z/5
7Q+Iv3csGE7qL+Au1GU3cJ+PwKj4N2XsF+he89b6hy8f5orac4fwEqJbH/aO
+/CxIYdlu/TZS+zZf8N8ljcfZR1Kmy5pRyHKSuuoxC0+nlxsePAkKgp1Dgq1
0jf5OPvbiZv3Kwozt8V117rzsdlv8WGmfjRUQsZLFV35+CeR9XFRfDSsogaw
3YWP+riT83dPRCP0Y0WuhjMfUZunr5w9GoOinORd2o6knoUxdUFvY/CzKjz9
iAOZD8P9Kl9mYrBsaE2ffSCpbx/tYb/ZK3jYaBS6BfDRcdl/eG7yK/S0msXd
8+cjp+yCebJyLF7lBlyIu0v0DX5YLtAbi/UPhr53Et6wlTuiEtXisV0+Z+bQ
ZT4mz/sbqJ+PR8SzFoqZPR82SR3T9Y/iMS76veScLdGz56bFODMeuT/l7nud
46POvFD28NPXOFB4b1HWacITrhf342cCjE8Zr1pvwMeUGnUqTjoRD/42CJnp
8zHU5378mFYiimMNOb66fLRseCeWGZ6ILazDadSDfFTU4qJtfiLsA6sj/tPi
I9upo2gZMxFxynqe2M9HTK6wq+euNxB30TkYvZePx9YxjUrWb6C3tHxj7R4+
/ObsVOwPeAOfHK0FU7v5cP1Qd+9R6hvkWJT83KTGh73RBcq+7jcYEdjfbr6T
jzOj0+ojgm+hkFCYc387H4aR4U9fK77FsP/C/aZH+divqfTD1PQtDoUf/nrf
kOQPrVRf+PZbvIoL2JJL9G0IOJ2YlfgWfz6Vvx8i+qSVf/2zq38LozzBNWv0
SL1d13ypkXuHf+23JB5o81Et6iP3uOQdrOY7/TquSeZ5q+boCpEPkHM7+WVE
lY9jHW2GdZs/wM0vQnm9Ch86t66+v3PyAxoetySeVOJDsSLKkvrhA7ySjkQU
beRj7ORU5ZsjHzFA3e/2cDUfnJmwteauH7Fr+M5wsRwfva8V7sx79RGPpnNt
f6/ko/j7yW1XfnwElu40PyPNR7BPdvSWJ0l4ZaCwW0GSD6/1R8cHc5Pw56Rt
qoU4H841LJNwehKMbBM2PV7ExwmppSJ/diTjn4+s9LgYH/o5n86+s0zGiUen
wxRF+dCw0sk/eT8Zn6Oei1qJ8LHm/Q3nvM5kWGVJTJULkXk1XFB3ddYnZJUZ
XZ8Q5GPur4QNcgqfsKg5mKc0i/TfM427jSafYDtQdc76Hw98jdZeH89PKOQL
9z75yyM6L+/alvAJSye1TL9N8dDsPzuMXvsJV6z6tk0sIfOp+JL/9PcnlNRY
N2yR4iOrceuhQ7KfsVSNfukS0feQw9dV0vkM7aP7fn8k+i4KvtUXd/iM63ZR
Xt+JviXbVxj25H9Gw3PTcMf5fOTW+HzIUknB/YmyfNc5fKxQvZR6uD4FYzmJ
//n+4cF/z6GtmoMpkG+Z9bLsNw8jh+TTN4+lwIRnsU54lIdq6/4MKdlUfFqx
RP3BDx5uhplkD1xNxcVb/ucecXjo/q1eeH1BGtr22ma+7OFBR3DZvour0zD7
eOm+vi4e0hb+LjLfkYYtDnI1sp08BG74XLLXIg0hMR0Dca08jG0L1trslIbc
zG2XaM08nN1nX7bmXho49Y9G5Zt4UD+5tmJuchoO/js0710dD28uCByaLEqD
89KEJ5waHiSc+77xW9MQqyogq1jNw507OboD7DTUHzrz7kolD9zAZ1VN02mY
tsre+qmCh+PPXPTL/kuHgvvi/OEyHkpeG9dkyqfDPNTx0JZSHlRSVAzeq6Uj
Imr+fX4fD5F5YnUvDdKxW95sZGsvD0JV7CMPrdPR+zHawqObB8e28npvl3R4
bWNWFhJ9ukNejRei0lF+wO2VQRsP43KjLar8dBjbRBpcrOfB3Le3uzQoA5di
+t5EFvHwH2W9km1cBlY8LUvIKeChSsPptmhWBmqDPsb35BH9Y3NWGQ9mQMXD
I2blVx5W2Kte6Ff7gpFjUhFxqTy0lntk+hh+wWv96Scln3kIXlM2d935LzDd
T3tMS+Zhusf8w+VHX5Cpkhqy7gMP/YZ3h8cZX3Bz3pF77+N5iPhYuy9q6gsU
Bbb7VsfyYCSyNAzimegdk/bhxfBQVPxxu79GJjTp7FvKL3lwlx27t8kkE8Pd
DTcNI3nY7Lmvo9Y2E7FNme7XnvEQt73NQ/JJJgQL/VxSn/Bw6rFcTea7TKR9
uezc/JjUa8he5lRBJs4lmTj+ekT6Sz/j6t+WTEi93u2w+CEPd9/OFMRyMlER
uerKjmCiX0jvv4P/MuEWOvfS8UAeflk/sWEtzoK1+sIK9wQekvL70gIVsmD1
4FRRDNFzXnqjkMq+LFh2vskpI3pk3JzNmsyyYLHhVwaX6GlryXvjcjkLp13x
+b9o0q8hxnq5EVk4ubjz9RmiZ4OA50Pd71kwPTovZJTwchl1y869yIZ+5WUr
eV8e4g8suySckk3yOvukvg/R9+ps7vvybOheFDJ19OKhxvyPxY8f2dAWitbN
8yR8Nate3z70Ffv21W8xdeHhWup15eejX7Eze7OQ3wUehjSoLVUiOZiorIyt
OsfDlUrDm1MyOcjtst676CwPdgObvllq52DfVKjrC0semJeeXQ09mYPZ8zdJ
Us4QvWNCi0uu5qBCpvjzutM8WC+gWK+LyMFhzZ/slBOk3s+PzD3xIQcLjB7c
GzPj4Yx8bnJAQQ4arVav0TAl8/t5o2lOcw6eOH4t8DEh/bknYpLHzEHXVZ+G
FVd4aK+YHbdyKgeakUUjFy/xYGridMhoUS5el/2TSrPj4ai9QXjarlw4rLhz
RpfoqR/9qk4/nIsWnXyvJ0SPgfcGqpR1LtScp+P7bch8PBNU8QjIhWDVTY4L
0bOvPPsbunLxzNXNNY7wbl69bqr2Zh4KmxxDJ/V4+JQUFjfzMA/r/n5O19bl
QUlNQHfz6zwEbhxuD9XhYaNRT/iTmjyYel1duUGLh1W3H6uckskHW+nSh2Ma
PMSI/GsN2pwPQ/P3dTHqpB/Cr3jmH8xHui/7B0eNh2UfD1WuupqP290Xd3nv
4EG8668NKz8f4gHnypJUeAg9f1lkeXM+XNPjWX+UeFj4o/OTPjMfPf1UUS1F
HkTnZkwlLyzAmx3Wxl0beAgIWx0/sKYAYjavXOTX8yAs+0hXfFcBHIP7n12T
50Fwx6WnLlYFUKed6Z+zmgfvoo49b64X4NXCqFnGcjzMHNYe7LhfACH1Hvmo
lTzc6kgLmBdVAPsL0rqsFTxMnl2luielAA2hJy9vlSbzOBTSdqWsABrTfs+c
t5E89ZjyjOkswEWVQ0YlW3hwmWO/ppFfQH5nzJsrsZnke2h75axZhcgNqymw
IfryrqSCvqQQ5tk+2iFE333d4MwKpUKM9u2qzVYgfgkcSAgyL4TKpoSuRUSf
9rVkL6mUQsQW3hrNJ7y16w+8DFctwj2+soK0OA+p4Z/b76kXYbUEPUV7EckX
wZUSbtpFKNj1YpfTAh5s+v8EnDxdhD93hbUr5xHep8musveLYL98wMpVkNRv
znKTd/1FMNQJfdr8i4s51/1DIjlF4F7WkZn5yQWX8qsycLQI9x9Px2/6wcWX
vHpcFS1GUa9dijefixcKGp6WUsWwEJTblcTlwvv5+0yjVcWY2NCW38Hm4oLw
0pF9isWIOBJ0cDaLC30XP+WtO4ux9fr+GhUGF6qDP+3W7i8m9+cf41M0LhYf
tUpYbFAM66yhtS1TXEzm1w7MOVEM6QzNEKFJLgYU1Vf8sSlGS8rDsR3jXJRF
vj3OvlKMkOR+K9sxLj7MlQrrcivGoQ8qVc9HuXChDYvkhRQj53X9yynCf9LY
4mDy82Jcj5WdozzMhWZhtVfM62IoRzs4WH7nYt7LxDHvr8WIjVi4v5jDRYzJ
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
nmtn403+kkz9nc0oa/Q7+K2VjQHHksjCPc0I4P28qdjCxjJ5h9vb9zfj90zT
jZ9MNkw6ltu812lGtVL02tMMNoIDyw/KGjQj5pRdUxmNjfK9ThufGDfDJWCb
lwrhV0uoHL51phmy9KruWYTX+YRLy0+bZoyIPw243MfGR9FVWRdtm1EJ651t
PWzIOrndOercDOeXY4/fdbIhpLl+gXxAM8pN1uoZNbOh+bPpx/OQZrzwHhrL
bmTDLeF264Inzbj26WvCmgY2uKJtL/9EN2O56FGBsRo2Gjt8FWrSm3G1+FZW
VDkbUU7UQ84DzZDa3L6Om81Gu3yIIoveDK5FXMuxLDYWdaotOsNtRmHQFZ/8
L2zc1Qxt1/7dDHuWYF9oGht5P/fk5Ew2Q1OqPnAyhY3fCaxoVYEWSGpFqp3/
zIadGC4sF2tBfoxq+K4kNuILuLoP/2tBWO3k/rgPbPQ4RSjNXtIC28nyYdH3
bCxed+A/9xUt0Nj4ONrlLRuGnd9/8Ve1QPz4mcP9iWwEBEV22KxvAdN3w8Sh
BDaKNbVz2xVbkJs68iY1no3Jnz9iDm9pQehAvumKODa2J0bdLdrZgviAzqmr
GWw4mOte3KHRgm8/rdf3Ef63YqN6H/a3gH+Kc9QglQ1p58Pi4QYt2KE8majw
iQ0BkjC2Z1tQ2bTiKIvw1HSeyF/4sAXD0lYJ1i+JH90sqUtPWjD0XXdtRySp
b6+bQ/lzsi7aGn/kORsJA8/kbr0m64vCsepP2bjF7PDhZJPv05JfLn7Exla2
bffBArK+90w6KIQNNufP1thSsjb3iZwVzIbp96X04/VkPWP6bCiADeXREzpl
NLLWnw6rvMsG/TcrRo5D9l/JFIcPGy/+uP25OUSe/2gI/eJF5m/q2bstE2Qd
8fph/C1Sr+kNs0JmyNo+ZMFyT9J/M1kn2bNbMazhFvzIg43+WZ2irxaS9aB+
4C1XNsJn252blCTrL9vn/XJhQ3/OeK7ZcrIOkA2wv078mRuwOFWWrE+LzKU4
sZEpsuzqfHmyVhm5d9zx//P1rtx2Uyt6bov82+fLxpr5arKlKq2gPrlckUd4
OxdUuspubwXrfX2ImjcbjxaZN3jsbgW/cItZxh02dMTZG9o0WzHSFi6z+TYb
0xLu3psPtuIP7w/tI+G3W/J8C8uwFbOXFTi/dmdj38rOJ6bnWyHtqB8a5szG
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
D0tOIaU=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.28}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"f(z)\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(8\\)]\\)(z)\"", 
         TraditionalForm], None}, {
        FormBox["\"z\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0.28294516021862137`, 1.0048331566724928`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.657717216450717*^9, 3.6664778285689583`*^9, 
  3.6672336072964067`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", "20", ",", "10"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "6"}], ",", "0"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "6"}], ",", "4"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "6"}], ",", "10"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<z\>\"", ",", 
      "\"\<f(z)\!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\)(z)\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.654384413019195*^9, 3.654384421550446*^9}, 
   3.6543845119569683`*^9, {3.6580650288247433`*^9, 3.658065032742009*^9}, {
   3.667224557408584*^9, 3.66722455968001*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
rxKiIOVYLLs8lo5+fb9nS5ZSkN+c4qwdSUfY9YJL/9ZT0Nle/WjPUzqumbz9
e3sjBefVjyZ3P6FDTyPgxcRmCigvG7+5BdHxe86Z6jEVCkZMO5Z9DiD5fvlL
lbmbgl/dw9FqfnRsutNTY61Jgeueq8UtvnTwXSqx/K5FwfQr1pDjPTo+bQ4O
oxygQMDs58Y0Lzr8Frtsu6BHgV/BrSPHPOm48MusrucQBQukJ+15HnTs6NK5
cuYIBY/v3gkOukPHwsItfB1HKRAbmE1XcqeDY7A289ExCnLbHgynuNHR0LPs
qtYJCvi9bx3kEr6U/xZI/TShQG7T4nynR3Q8mfz3Ld6UAu2mBNW//nRc9/95
78w5Ci67acd7P6DjmCRNXfQCBb6yvSuFiJ6lOxpjnC5TUH5j8RwJwj9WWnZi
4xUKvq/84PLKm/ht/EWw9yoF80u02bJEz4vrcdcOOFBwcKlzmzLhX5HkhKVu
FNSk974/5ELHpIbNWLk7BcyzzlLfbtHRXW323u0uBSJzljw1caLjFU1vMfUe
BQYnDty2uEGHtPzKgU9BFHwb+2Bwx5aOdREFd4++paBVzeXHp4t0zNuUvo3/
PQW/e5dc2XmBjpGcdyOZHyiQuJ/YnX+ejvdtTwylPlFwuq2vtPoMHf6WvgKN
aRS4eLjsOmZKx9Ux1+x7mRSErRdLbj9F5lXMQpr1hYKuWzqhQyfI/L8+1Ryd
T8HUmn7h/4zpYCsf8TP+SsGqChfP0WNkvxZAY34JBXscxH45G9GRbKDG/VJG
8rP849V/R+kI6tkYZ19JwZ1Cnb57BmR+/ltzSraGgqgr/ceFj9BhNCkm3FZH
wVd5jVs5hFfVf36h/zcKbFLx78A5OsQk/97QbKZg6V7d+42E/2c8b/1oK8lv
9WFRM8KfUdr5+HQ3BUuGTNY4m5B9MptopvCdgs8SdnsTCM9eZ6N/pVOkP+5h
Hgt16Bj/j+6u/4/cd9GqPU2bjtSL3lMNsxQ462xTOb2fDjn9jD9dc6mgidZR
YrXoEJKS/MlbREXV69kD6rvpKFmSev2WGBWe9+sie9XpcJ+nz5sSp2LXf+G/
vXfSweXeZs9bSUXC9u3v67aTfBT3j6yWp8K/4oqwhTLxI9vFKnY9Ffs+br8s
qETHwY9LhhU2UjH5hC8/aQsduSHa1K1KVNicibD/s5EOp4c9F3NUqJDVsq6I
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
WDi40+B/6PYCyA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
sQvx/2LrNrufZbD/Hr//rjONEbFwP4d/hOf5BYFLd2mse3+Kc31mOf5uVks7
eof4b6aqcWd+OS5cktCf5UH8/zXqcm9JOe6dCuKfekiTd0tOg7tyOYKPLM4Z
dqOxccuDpY81yvHOONyR+4DsA5f5BYF65ejcGv2lhvAVzlz7L8GuHFqSyS0h
RG+F6ZoMzxvlkOVEfrtB9HzD1S6duV8O4YRnQgdv07BZp9KzPLgc7G23Nord
pDFlqZD/oqQcznY7wx5co7EpWdLZY3EFKks6T9pdoBE5vmDDaaUKvH9Sf8fg
PNl3evN5/2lUIPRw0XPlczTaP809+m9nBS5+f13BsaVxXXAmHB0qMF/myuqD
J2h0Gwr9OnCnApN9p/TWHaexM2j6Ow2PCvSlWFiLHaMhqSog9zWsApn6Or5V
1jTSDv6dOlFZAasrM0d1DtOQefUnfVtzBfR1JmbLHKJx/8uvi3I9FVgzk6f4
x5zGZ60xpcnBCkg3c3RaD5J5dBntZo9WQPBls/l7MxpZVSPPM/9VQK5QTUDQ
hsYyiWGj57MqkbVh3J0meh5HeTOuSlTCLKlUtMSKxvc3X/OMl1biu4Lf02hL
GhajXxzVVSrhFWIp7XaERr7OZzXR9ZVQnLfi5SnC59PUF16xpxJH/uXFK1mQ
eZ3suYvrlSj7NFQYd4BGgH73+iX3KnFsf6b+IxMaE36d38a9KzFRdr/2rDFN
7vMn6/TISmikLfq0ah+Nc/sbdVTrKhHqs+t7ggHp16iSqUWKVbjyX7RsyjYa
l91MOVCvwljE9bxoXRqbbZnikxur4DRlYB0EGg2rpj1KMqyCy8fhMOetNP6k
/Dd/u2MVfNSxxGgjjZKnTT9Pu1RB/PG83G3ahP/aiXYvzyoEfOZaam2gIb/x
flhLeBVCYrxDZbTIPCya7zIeVwU5QZstYpo0MiYij8u9r0KkzbpOwXXkXhQU
KZ8tr8KbxezFX9aQekaazPJhVWG1U2J2tzoNzn1qKLWjCu9aXY40qtFIOOVQ
38atwmiZSN040XfUF0id4FXB0PKZ8zDR113pH7BsvAqvh2U1BtbTEBGRv75z
WjX43OOobsITUbdti69UNd6nZOvVEP1zySzZD/LVENXX+1W0loaW/zF+9upq
2HbWxX3UoFFl5lq2fFs1FglRIq8Jz4/Ogv0ZZ6vhYinc6KpCIy9v/7rOK9Vg
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUl3c81e8bxmVT8k0pSqShYTUkJJcGUSKaKkUlUZQSUmhIykhSMlIUlZUQ
svfee49z5OxzNBBFv+f313md13PO87yv677u+/l8FM9esbDl5+PjeyLMx/f/
z3229OYixhG9hx+VBeyWjYGWcvTsoKwGjopv0ziydAyL57YHpcvuwZpLu2x3
y45BTXtR3CvZwyhRsaxUWDIGnaYtqSGy5zHzyde/S2oMRZGlWwNlXeCSObxw
n/gYNFrcP685eQO7lnD2aImN4aOommpBlCsWuP++oSQ6hpAbL1fzFG7ik7Zk
F7/wGM6ZOS40V/ICM083KnfOGO7f9Xd/LOuDIl914xM/eCiQu5B5NMcHVkaG
iZpjPPzO0v+18uQD/BGzkljI5eEyd/xKbpQvNAMfN9cyeDh80tqOrfAISc++
We4Y5iFoQicuu+gR9h35mys7yEPVU2mqj81j0BYvlJ/o42FHVc3p5W/9sTJC
n5LSxYP7ubgoxu4AFJ08tse/g4e0We+eLyMBOL3cKd6ujQd2+AmZew8C8WfA
R3RPCw9KW7ceNVUKQvibSIcVTTxYN0mGLq0MgoP4uIH0OA+Rl5jNo3ZPYMXS
2DNJ9Fy6T3loKRiMg3Uuu7qJHtHmxvjCw8HYnZyhn0v0xMnnl6+JC4Zm0C+9
V2wedl1OGPEfD8b6Kxo7vJk83BZ5sPL4i6eQ3JShvXuUB9kj13YWjD4Fv9Sv
bWtGeMiMPWO9elsIxn9s0RSh8DC2Qyd6rDMEvRnpm2v7eTjvwpN9JBuK91rp
yofaedgiEOKRdjUUc6XyQkRaeeAP0ejtrQzFFVbZVC7R8/rTzSg11+fYFt1R
ubqOhx6mgEJbywtUCEyfmyjh4cPNeO+Z9WHY0M9fm1DEg5uo8ZDS3TAEZc7d
fKaAh0VKQTE31V/iqP1yvqqvPJjZyKxWCAjHaIN+VHgqD/JjOT5G1HDs+2As
YJpC/PWy+uasE4HkuxYO/Ek8PI6KjS+jR+CGxnmtS+95OK5sIMJFJLolHF8r
xPGwNodmtyQsEjtoN4TbYnko61RZ72AQBaGIh2260Tw8u9D46FlUFOyvB2//
HsnD2XFnZt7PKNSbhMfGhfOw0WfR/tF9r7BJKVbsRBgP/6SyEiVjXyH0X8LV
+c95aIixnKc99Qq/u9I7S0J4iNr49/LZg9E4lZan5xZM6lkYXe//PhpF/uVx
ykE86JjuVPsyG42X8pPZpmmkvv3UoIEjr8HZxndAjOjtvOTLE0l+jd3mYsOl
yTzklNkeT1Z9A879ZWLaH4k+SoIsX98b7GLActUbHkKWb42K04oFO91vajKQ
h+nzviY652Oxs/5pYJo/DzZJnX8bnsTixWiEouMjome7h9Xv0VjoyyYbU3x4
qD9eKL//+Vs892oOr7tFeEKNY8a+vwOMl+rE2PPwR2v4T8zSOHgEVRy5Z8cD
t9/96KHdcfjSes35nC0PrWs/zM0MjYPy6doPa2x4qKjDBbv8ONi9dSsTPsND
tnNnkcxoHGLpq4Zop3iIzhV2vbUtHjLXby9JOM7DU+voJhXreBzKXrfF/ygP
PkKaygN+8QiaaTO9fJgH14T6B08+x6N6112HAxY82JvZDun3xEPQT9VX7SAP
p3791fnB/x6o746RNOXBNDz0+Vvl99jIvK5Z7MzDTj2VscOH3yMhTbP1/RUe
NKil+4Q932P1rakrQY4kH34n47Li3iN6d968G5d4WKr689/FhveQmef98STR
/8915ZdahQ+Y90qQuo7orRG/q/C05APGCySPlhI91pv1fi0TTUA5v5Lu7/08
HOpsN63fmADU0rsGjHkwvO340csyAV+fJd4o38uDckXU6eGEBKSs3vQpZDcP
E5Z/quIPJOKFoe5K1e08MGZDVh13TcR/kv8KFmrz0Pd2g5fY60Q87iw+Oa3J
QzHHcsvlsUR4Xdz7vHIzDwF3s19tepYEu8cWomc38OCtdPA3JTcJwxbScUbr
eLhWS7MIHUnCyWVdO9WVeDgmvUR0cmsyzJKsbv1V5GFfTsrZD6eTUe2yQoaq
wIPuGcN8y4fJ2L2DmlG9nIeVH29cy+tKxraGi9wXsqRfTSXqHeek4PMLZX/P
JTyI/Hy3VmFDClTOcNeelyb5C9O912SRgvi1n8v2LST9qtvWd/dWClaMXbfZ
tICHweFL27a8S0FEtubsEkkeWnwFQkbqUiBcceXLf0RPmXIk+/l4CgzeHToy
o85DVtPmvXvlP8Hn3rZxhiqZ1wy2kYrhJ9CO+swZVubhAv/7fQucPmG/crNE
13oeFmssM+3N/4QFbQ5KFWt4yK29m5ClloroNdHHYomeZeoOn/c3pCKrSjDn
hAQPvtv3btajpGLZK/MK87k8/Ni7On3jRCq8nKNbjMRIva0HMqTlP2PPUi2W
phAPHiEW2YOOn9F86ZLcwhkuesZ1Cq9LpIE1v8Wrls2FIb+M/gXFNJhS5f1L
mFykzR8vOr41DZ+zLoV9pXPxeO2nkh1WaXCzFkp9P8LFxJaA3Rud09CrYZEX
TeHirL592coHadATe131fIgLHctVFSLJaRBM0xq+38dFvC3f3umiNNj5PuB4
9HAhda2/kt2WhtoTLVPOXVx4eeUYDdLToKauIGzfwQXzcVh18980PBW4LGXd
xsXRMJd9Zf+l41dntvyxFi5K3prXZq5Ox7EkIWXTJi7UUtVMPmqlo0g9NubD
Dy7C8+bWR5qkQyG/ICxujAvBavqBIOt0eO3rDYzlcnG1vbzhjks6+jsn778m
+o243k22UemI/LHxajjR+1vhV6s6Ox1L1r01CiR6jt/v6yn1z4Dks4dTLuS8
/4aUVOxiMsDLtjEybOCiWtfZUzwrA40D28OW1BH9E0IrzCkZCNowppFTycUy
e3XbAa0vkCg5fvVfARdt5Tcz75p+AYe2ubApj4uAlWUia85/QZ2ExPzYHC7+
9h5PuPTkCwIsixP3ZHIxYHqP9/vbF8z9vp72KJmLF4l1+lF/voC5WFDzZCIX
ZqJLQrAgEzW6Az4qH7koKk7U8NXNxCO/kJWN77hwl594sN4iE/Ypl53fxHKx
8ZZ+Z51dJozbDIuc33ARo9F+c+GzTIiu+GO1KIqLE08VajM/ZIJu0J70LZzU
i2svd6IgE1WXPv3JDOOiZl+G40xrJt4/fbTP7zkX997PFrxhZOJh1rlwy2dE
v6Dxf3v+ZcKufwd9w1Muflo/s6EtykLl06umeWlcJOX3pz3ekIUr8Z2UZ6lc
nF+6TlBNPwtLcvXcLqVwIed27UjzkSwUNsbN3Z3ERXtrXrzLpSzYjcx7szSB
5DXQ3Dj3RRayJHqrquO4WMt3K8iIk4Vj1m5L170i+flWL3MuIhsvhFLzR/y5
iN0l4yCcmg29pUss8h4Rfa/P5n4sz8aomtfos4dc1B6ftBoby4bmcRPJ3fcJ
X+2Kt557v6IjgW4d48HFlc/XVV/++orFBxUFT9tzwdUdbq0WzQH7+mbXE3Zc
XK4y9fgjl4PSsN30o7ZcXBxcX3naIAdXB23rzGy4GHUIcwy2zMFeATc9kzNE
74TgohLHHCxf65dqZMWFtcSQ9ZoXOah1SgjdaUnq/fKAyLGEHMSE5ArrHePi
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
L+96dvh8G/Ke8t1QJbzfNxw/rv6kDc58dikLlrDwQYWe+ji0DXsbnm01lWbh
tJq72Gh4G+SjivIeL2ShZtPLnKh3bajdtrRW4D+SV60uOfGcNihdqaeNi5J5
ZXh8eGSkDb39WxR7ppnIWbipkcpoQ9KzndJbp5hYOSyWT+G24baxmVjwJBM/
buW+HPrdBrkvDt8NfjFxwjjUd3CmDWwH929vfjBRvNjRZYC/HXkrfLv/jDER
/Fn+YN+8dlgFxBR/5jDx22tyR++Cdqju+vRlHpuJMyZNyj2L2zEzmffRjslE
hexH2e5l7WhIrnlVQmdCjXZXpGtFO/wb1hl187HwIuPEeMeadgiFyTrr/GNi
5u4WavuGdnifEY+InGGiTu5bQatGO1zGWCwrokeDmZ/Uot0ObnbfosLfTERm
vYho1muH/d36HSuIHgcLI9dGI8In9ekJ5ScTon6JqrWn2mGocW2LHeHd89M5
qsSnHbLuvz2uDjGRVLTvcfGjdjzTZ7xtHmBiYdAq96KgdswX66nb3M8EZV37
oYKX7eCPyJUf72bizmmtuTlJ7WDlepXcbGWCrrxgKvtzOy74XGH1NDNhNsUY
zcpsx5CJ9SLdJibkQyNLvhS1o71/54XZOibyq2dvfm5rR8E/QfH7FUysDuu0
S+1uh1bV+OaRMiYCzqce+TTQjrTg0ZMGpUyc+mezKZnejnjFqmSRIibK6nQU
kjjtUGRmd1wsYEI5YqFE4o92RKZ9/Fedx8S0Rjn9w992BO/2Nw/4ysRZ/uiO
93M6ID7vtgcni4nqRteyeOEO+LRdfmuaycTGV2ZpcXM78C/Kqu5TBhMvHda9
efdfB27amo7/l84En9acoLfSHdgmV69TWsOEnVDPrdilHfirV5u0vpqJhpY0
+xiFDpTYVMsHVzKh+cb/2JvVHXjoUxk8Uc5EarH3zbkbOlBM2X9Kh+hTpl6P
dFXvwB/9prVeJUysUDo1aKLTgSszXQVChUzMTVKxmzLrwBFXJntRNhNDWfWu
Frc6sOqihPGWBCZOdhe/zL/TAauKp4vcPjDRMf0lZ51vB8JWLx7KiWeidkf0
7Gww0Tss77brLROZpU6+ifEd+G65Mc48ign/RskXgi0dKNx/aM7VICaEvwtk
X+nswO+PnXXpAaS+Ur+7e/o6sFn01MvJx0y4Hhla/pnWgfiy8+reD5kYcyW9
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
ne4xiptFDOzZJz5YZVGI2VJ5XVbIQHEBd3t7DgXlHYOyEsMMGp3tP7rcpnCu
Vu/7G8JzKbV2F+cuBcGagOKEQQaWbas+BRRQ2FWUf9aJ8E1QyHUcLKLI3MC2
XdjP4FTUeVfpMgoJE537Hv5mEHDcxFvnOYU1bVvWfCY8OmXFgrJKCjmbL07O
Jjwc8Tz/9a8oyD572elDeNw8/wVZ1VHoyjY8PcJjYLvraVhAM4XIw5rVqgwD
fT39uDKGQquMpJVnJ0PiNMNqGZfkr2mO8aovDBYN9UsX8ClkJhmsGP+ZIfoq
P5/9k4LvXL8Z2e0MpLcaH48fInpf9unbt2YG4+/N15cboeD9u7exsInBGAXJ
nqhRoq/Hcq9CGxn0tdf4nB1H47qJ2W2VBhLffVtcAuRorLS757+rnsHn1zqz
BVNopMx847awjkGrttwnz2k0Rr9Qdr9fk3jGiJNY02nszxg1f1XD4I240dZF
icab/SoG8dUMamxL5b+o0Fimrb/I7RWDygcJ73bNoXFVaD172UsG5UrBUc3z
aFzzPdZSS3gehOzaaKVGI2aSvN71DwyKv62WfKNOIzw3N9GP8OWZKFeaa9I4
scGoz+Q9gwypTsP1OsR/2KGHnDcMohPcluisorH+11uDVYTv/B9T3m0Dcp/L
+1ImEb7Te9RvL1hLQ3vx38FOwnNkHlt1ljGN6R6Lnp6rYuCS76sobUlD2BG5
vqmCgd6rY3/Ze2mkVZqb+t5noKux5/E+VxoJe79moZTkI2pN8Hd3GpFDRySn
lTCYZz0iavOkEayXU/2kiOTjS3h3zWEaW+9IbJLKYzDOaH+6yREaG8xTb3++
w2A0w9zp2VEaBt3LJxbdZvD7wMS2shAaC2e71e+4xeB7z6X67Agaw1debMnK
YECNhmbsjKRhtnPSTKd0oi8Z32NS/9G4pGLXPf0mA4Gyo9WTSzTavt8o/HCD
wU8Ny4U+sTTm3mKOR10n5680HJ6dQMPTe5nZhlQGA8ZaLQ1JNO7pnpQfSWYw
vG1m3plkGgO/X31+eI3oxXHC2RXXaXRHv1r+hfCM8+rbTaXRcAg0aErJYTAx
mFp6NYNG057CAPtsBlOvvOwcvEWjUuvavVbCq/bqlEFVMY2br72XNBL/Go2H
5IPuk3gXfX93mfhf9NWJUX9I+JN2+G5LYbCyf01i5FMaIfuN8t9cZWC2uF9s
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
bd7kvtFRMay3NgWEHGHhfzZoDEI=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
vN83W1qqPGnH0zt3JFXlWUjeQk9/GNqOr5QTspdlWTitfF34W0Q7NHXVlBJl
WKjdGp4XHd8Oyuw3rXXSpF81u9eJ5LVD9abxMaE1ZF8ZWFJHR9vR6L7qMUWU
7FOxrU0jjHbYqX1aoyVC/KjCBcPcdvz7bpn8TIiFH1754ZSpdqhciSwzmM/C
CaNQ/6GZdlRt3nXk1VzSvyuvuA3yd+AMvW/w9xwWgj9KHO5f0IEn59dPp84y
MeU9ubtvaQfkpAvvC8wwcca4WbF3ZQeKB0+vOPuHicrVb1f3rO2AZfS/uM+/
mVCm3RHsluqAKeVks8AyFsKyTvzq3NQBLWEXjYtLWJi5s32kY3MHZLf5x1Ys
YqF+3dfCNrUOzPqmO/oRHzVmQWrrzg4wUivaRoRZiMoNi2zR6UBHR6+WPvG5
ZGbo3mTYgTS5+cL8xEcoIEWp7lQHTtVZJfgQ3r3jLtGlfh34vGzuoOd3JlKL
DzwsedCBhF3i+3p5TIgFbbxeHNSBp7ZKqTu5TAzLdxwtDO+Afc5xzykmE7dP
a4rmpXZg1YnUle6jTNAVl/7+9LEDc31LbnUMM2H6m/EtN6cD3JTOUTUqExKh
UaXZxR2onOHLHB9goqBm9sbH9g64vbYwdeliQuZFl116TwfO1l7Kae5gItA2
3eLDYAeMx33Wq7YzceqfzdY0egc27nvH4jYzUV6vJZnK6cBipyKzQ01MKEaK
LUz50YHpsPbPaQ1MTKtV0JP/dqCVPnvfsZaJc/yxnUlzOlGwdDmvrpqJmib3
8kSBTrzVUjimWMWEaoxpRoJoJ56f1yl4WMFE+CX5V/FLOnEn8KgMs4wJPs05
QW9WdKIkuu3Sxz4m7Ob3esWt6cRtq+cPVvYy0dia4fBashM6K48ne3UzsePV
o+OvZDrxt1W8itLJRHqJzw3RzZ1QOZ62YSPxUxy5FuWu0gmbvj3eF9qYkJI9
NWSs1YmqkUvqTOIjmrrF7rdpJ0J+fnkzTngpuQ3uZl6dkF9pc1sgn4mTPSXh
Bbc7cTLyV5/hZyY6p7Pz5P07ESTxUONRLhN1u2NnZ4M7MS6byV2cxUROmZN/
SmInCjXmW69OY+JR0+Kwea2dsLB6u3PLSyYEvs/9dLWrE/cHdj93iiH1XTbV
09vfiTyb1rH0KCbcLSjrP9I6IXXpT5J6OBNj7u1Yx+nEUe6TudfDmLgcXm1z
/0cn7rnKnMkLZeJsX3qC9UwnWJ4mK/GUib6/8VXV/F2Q+Ed1ufOEiWMSEYzt
Ql047OveUPaYiWY8Fn25sAs+m1dKUOKZOGhzR0lErAvyNhGF8m/I/Nz9z/Q/
8S60vFh3xuU1E7rxDi6U9V3wbHz57zPh30E7kp0j34X6XYm6B6NJ3kIGXdLK
XfjPVYH6LJLkvVnrd+B2cv/b1Dv9hF/qyobd53W64Lwys/TKc5L3+I/yxeZd
EPtetDc4iOQ9+6zd3qcLJxJ7DDtuM7GA3fzIw68LWw13q+zyYUKzZ6G+/4Mu
CDNfrXh9i0ney/c/vnnWhVwl+2FHT8Jn7xU0mETOy57wmufGhKPFp32c1C6w
jp04d8mV9Jfer79/PnahdKrAsNmZ5Lnu6uXVXwiP9r0V0VeYeN1yztC8mfiU
iX3Ybkf6q/Dlv3MdXXhzweN5xAXS3yn9OS69xF+wz+vfeSbM/I9tejJK8joY
Z1h3lgnva8/6Yxhd4OPMV9l6hol3Z5ufpXK70BXksOKFNekXk4UH88e78F61
4c/fk0zw7zrAXzvVhXutqsPnTpD9JH//c/dMF065hVZXWzJxYkW5M42/G/P/
2zp48yoT/vxz5CcEuzFGvfmcTngzeLuH5i3sRt+hamNzRyYG+z3DxJZ1oyJf
bF7xJSZEanNNNqzqRrr8mXxFBzKP8Vu/QLqbnDOhMPciE0FPna4dku2Gy9U9
VCdbJvK8UzZbK3bjZH9geO85JpZZbYrwVO/G1pyNghnEp2zhavdso270OxwZ
PWtF9ocHn6qiaze2taTGFhozcdh2N22nRzfW60xZbD7IxM0jnrGGN7shlKK/
MMyIiXbFnwsu+ndjwK/X64oBE34UGuNVZDceaApZrdNl4qtR05uVZd0Yenle
zHM7Of+R3JOn1d2onpWeU76VCdt6H88Fjd34aE3hLlQl+/GQ6hH+nm74rrWu
fb2FCengAO1bg91w9Fz7ibWZzEMLRW5qpBsWPT0J6gpMvFy2U+waoxvQDH/m
I0fyOvp0lsPthvyLY3dqNjGx/jmDYf+zG0snll8VkyH7r3NPx8jvbliGSK3e
oMVE9KrI4tP/upGWvd/cVZPMl+WPlJ55PZjb4/SkdAcTayIPvDAX6YHV3+e1
y9RJ/fri7jYt7sF7yYL554lPt/VRq4o1PThxUfTmXMK/6mXKXl2pHnx4sC33
qDKZT8pc1fxNPZifZvXjDfFpP5cl8FG1B+njSfZ7CX+L3YqsaIMeCN7Za3Fv
AxO1Ll2L3Fx7kB11S1lwBRPCmSrTXI8eiBTFOxwXY8Lw5/2vDrd6cHa4Lj5p
KRNV7ppfzgT0QFRhzVrDRWSfe0U4HIztwbmcHMEHgkzMLfhuXvmmB596BvR6
5jOhN2uku+dtDxbOzPNWmMdE8e3plRpZPfisf/RnDR95n9w7Wb6htgeLW3gU
kWkG/lZmfohp6sGFnyvXnZxiQFtoQZR4Rw/yV+kcT5lgwMvI1v9Zbw+W7LoQ
8ucnA3kPv7gsovTg4unAhoPjDPyuW2794GsPvtzJFIr+zoDmwiuG81g9WJbQ
q8/mMeBxqGK7z1gPFvGEEkMJX86T9ZLTv3qgolEYyJzLxK/m/0T++9ODIz7X
runyM6G2rPEXj68XrlXyJ8IIb2aod/1X0V5kH38mpzfDQHrE0I0W6V5oXbcv
jSB8jgrrerfJ9cLFf+vlScIn/9lSK3RLL5JCp8UsCN/L7pbpYxq9WP4x8MKS
MQaCVpV79Rv3gsdIF7rPYODK8+RbNI9evDn5+5BbP/n9pq8Dhrd60etQOtnS
y8BolrTOu7u9WHL90SuVHgZOtUfOOj7uxa3Q9T+YHQwYiz32+RHXi+MNe57b
NDEg9KZm6GhyLx73iegUNTBQvk1ANzutF+WMtm/r6hnYZebDd/1TL7YKXNTs
rmZggpp/tqegF/bLVajqVQxkuEwVa5X1InbD1INnFQxsfupyZ6ahF6J42Heo
lIFvUu+pp9t6oWdy1C+1mIG4dOae4u5eXD+5TkmkiIHTunJx0oO9+ODwtcOu
gIE1zef5fUd68Tr16ukbrQx0nnl1bpTei8Y9zqcGmhkI4fWX7uP24m+n84k9
hF948TFfod+9ODbH9Zgw4S2PDRlxmO2FX5ir+ZVaBm4rN+nXze3DR8VrZi2E
f8rEcF7Qoj4sOOZ2KILw0gO17onJ9KH4nbuBAuGJX+fx1U2hD1x47H1MeM6m
Zu7rVO7D2g4Pve/5DHTVbRGI2NkH93/XdT5/YqBSRPK+hGkfFM29dhhlMJAQ
MPeBgmcfns/4yDokMLBsNMBb2acPkhcu19DfEB4sctvu14d39ccc7eMYODEh
fmZ3UB+KopQy7F4ysNhWWf1IXB/oO/t2X4xg4GZR5uZjSX249rqS8vUFA8w1
O6VOpvZhRijD90IY8W3RF72Q04dl3QE1ts8Y2KpUw3cpvw/RcHMcfcpAbMCh
CafiPsglnVlsG8zADVhRr9f2Qdt9h8X5x6Q+kYOdt5r6UDkgPTX8iAHzifP1
d9v7cHjfwqhzDxkoOcIoud/Th4t60z9UCZ9ymlNu4GAfdDQ3V2THMBAl9DP1
6UgfViqfeKEVTfrJ9kZcGL0PvI0PHYoiGRhZ4/f41Y8+vFzMXFhD+A+7C/sm
TPbBY/4aignhL2wJuv7ubx9M/xhltIYyEB4QcT5LoB98tLfH+gm/ycT7ndVr
+mFT6PCSR/jyjqipNEj2Y2dWhIsb4ZNP+yzTKtOPpe9q9H8HMMBvW764X7kf
pc8V6Pz+DOS29Hzl6fVj4xWG6srbDEinzQtZdbkfX9c6lGq7kfkSenh/nXM/
+X6MCC1xJfvl/OJb0v/1I0yw5qKBC+m/NWvsFX36YTAuL3rYiYFHASo6eNaP
pFr60fP2pJ9GsrbvDe/H7WJxWfpFBi5CS8Eoph+WOYZTjhcY0J3Yu/xoUj+E
4pKj3c8xkHakVtgytR/UF91Of86Sfk8z/XfqYz8+Pxbac/sMA7/On2BezO+H
ww37rw9OMeAu9kesu7gfzcLBNdwTZP5Ko3YbVfZDIzI37agVee6qbZdX14/Y
zUNPPx0nz6UHghVb+lHeuPkZ9TJ53nIrL7qzHyNHu9yNLzEweVtidGF/P+b0
+J7I/T//0BmNsW/90Bnpl35MeK8/4bOxYffD2v7B/Knz5LnO64et3/vhxVFn
nCP8v2OGB7L+9uPTZFC6JuGdPnnB78ayAWxbsAejlgx4igq8Z64awJGnnA2m
hOdPXmLXyfUDuLoyUiDPguS7mr5ZR34AqVLjDU/MGJjputTCrzMAOfWEU7uM
GeAzd5YIdBjA2tPCniEg8zJ3qeGM0wC0RrKtZ3YzMCfzo4uT2wAs7c/tsdcm
9V42Xn7YZwDPXfOFdHYyMLf5v8srng9g8f0rLxjbGPDzWfncP3IAygvWeJlv
ZWCeSm7h5MsBGD+tPF2kQv4fNLW0990AHkRJyj7fQv5+d8Sug+kDSJaqF+ZT
ZGA+Z+eFL9kDqEy4zrmkwIB/dG+QUv4Avm7e1NIhx4CAsden2OIBzE1vydKV
Jc//rB1eXDmAmOhGlynCI5DyRfRO3QBk0y9JOGiS5yes1X80D+BDmUBdzw4G
BEVmT5/vHIBmV5zHAXUGAj7HBrT3DaCEqSOTv53MkwMy9lEHcHC2t1mR+AhV
354vzx6A9SaxzQsJf4CHtErE9wF80/zQeUuJ7EO5UkuRSZK38UFfLuEX8Z+b
yp4ziDvXfPub5BkQ3etv9nHVIBJLxoNCNpD3Z9HVpZXrBnHOlfVpvTQDTlpW
zb3Sg5DYODKcLMlAq+qWQ/O2DOK5X+uOonUMRK5vNTquOwi//R8HWSsZqA/P
F3LcNwhMJQt5rGBgViyh6vaBQfxJfrWNfzkDNiLX970zH4SrSLC/+FIyr5Pr
98zYD8KmwUl5nyjZf66CfMucBrHe+6JlszADgZyxQtlrg+hRPn33pBADvJEy
7cO3BnE42KTTZT4DUmfS/tjeHcSCPfv4ZuYyYNYblnfj/iCqv2tvDuBnIKfZ
QfPNU8JzdIt37D866AePTuaGEZ65MskKs3SsqdLOqY8aRE7W2tasv3QY68n+
R31F+C6I/cUfOm4VLFabSBiE8kpR2brfdLzX/P1DJGUQzEr+w8em6KBkDn+U
TCf5eUzfoE7QsUyl3lktm/jI/3jj+IuOve+yVYzyBtH9aSe1nvC7b3rJtS4a
xNY1849ZCzKQ/CogzbV8EA+9mms5xEf0xUnF6MZBaOvYZS0iPq2+c+R4w4N4
VRZ6//AMHWetTSSeiw7BvpGn1P6djptLvi6gnhrC5EiCZ18vHZt7M3T7bYbg
4Ccvd62Hjp43t926Lg6hTyalTaSbjh0a6/obnIdQdCF9i1YHHWPWR1Py/IZw
n5Y3GN5ER6yc9FD2gyH8vr/7kWojHSbfucs+Bg3hsnyxRnU9He/8HnomhQ/B
1KEieLKGDstDlu/jYoZQImy4+0k1HQLissMxcUPY/q6WIVtFRxZ1fEVE0hAS
DpiEFVbQcT6lxCg0dQirWE16x8pJXv89ufXk4xB8NQruaXfRUaxj/fFhzhDK
l8ln9xA+JyHFr/fyhzCfGzLq3k7HutYp8TvFQzComRFb3kZHbVSl8c0Kwh9v
r/+xhY4bF0Jve9QOocqnzfVQMx2dUyr0K+1DMNrxtiWggQ6/0pm1Dj1DeLh0
+RxZ4rM9sM7UdnAItWxv1bJaOoIl7XJP0Idg/Mb8yQzhP2AQ67//L/Fdwmfi
WkrHX8Ed1q/5KAhmXbq5uISOdva6SYm5FDRXdqSkFtFxN4e5eY0QBWa3UkRo
X+gYNPIPWbKMAgvmseqTuXSEOxfYzGyi4GR5mv6+VDquWsT/8ZSnIPql+LXh
d3QYaD16PrWZggFP3zift3T8mmtVM65CwemtVnPyEukwe/FTlbmTApvYeUXK
r+lQuNlXa6dNQdyNq9y6l3Tw2ZTaftWhYMS8d71DLB0fNgeHU/QpsBVNv/km
ig7/xR7bThtQkPBtTapuJB2nf1rX9xlS8K3kXt9AOB3qPXsvWh2kQC5mTMTr
BR0LChX5ukwosLt+Uks8jA6OsVTWw8MU9N9yOfQilI7GvuX2OkcpoOl7YFES
mY9Lwut+WFCw/nf4fyEJdDz5PdOUYEmB+fu8lJXxdDgH/PC1OknBw/P91Mg4
Og6vomksPE1BifjsKknis0y9+aXbeQqUfPf4yRH+8bLyo/IXKTiveT4vJZrk
bfZZsN+egkiO35gK8XnuHHdV34kCQcvqU5qEXzzVDctuUEDZYqpuFELHby2H
8QovClYNO19uCKajt8Y66YY3BSYvQl4feUJHFM1gMdWXgrw5nQtPBNLJnls9
9CGIgtDOU98u+dMhE1ngbRJPwf7bl14EetIxXyFj25wkCm6pBzYsuUHHt9zE
b1lvKchkps197kFHUseTQ+s+UCBl8f1qjBsdAbZ+/M0fKTgmIpYofY0O+/Hr
Ob5ZFDwuUutPcCHzuvScBOszBdMK1w3fO9Eh+upYa+wXClSHIry3XaGDrXzQ
36yIgouh+Vk5l+moL4CWQCkFMUYDTK1LdKQZq3E/l1PQNjsrVWRPR1CffNyV
KgpEsqSO69uR+bm0/ph0LQW6DnqPqy7QYfp7qUhHPQVnMryYeYRXNUCgMKCJ
gmebllbtdadj6ao/LtqtFFSGJ75pJPw/EnibxtoJn6j2bUvCn1nW/fh4LwXn
flzc6ehM9sm/d9ayXwlv0ZeUZ4Rnt7vpTNk0BY2W9sHDp+mYuET3MpqhoEj2
yuV71nSkn7kz3fiPgg8/XQzkT9GxwShzsmceFU+Dvf5esaJDaN2qH7xFVByt
DrL/fZSO0iXpzv8tpUI/7Jl+tBkdXvONeNNiVKjZhkvgCB1crid7/moqVvDF
tfsdIv1RMvht7UYqujWydZcYkTxyPC683kRF9fy8tZn76difsmRUVp6Kz22F
ExYGdOSF6lG3KlERebU6NUqfDrcHfWdyVah4uLvhvo4eHUreboPa26jwEm09
R9Wl45VdYt9+DSpOJfWJy+nQceIUTjTspMLkP8p4jTYdYke6u820qdDR/9ro
uIvUa5/L8W4dKpSXMt8u1iLzpyXSab2HCskhrl+GJh26Km/MR/SpWJw2fsZC
g/TrRu02ewMq+LymtKbU6cgQ7zjCNaRCfdR15WvC77jQqfnaQSpeVQkIGRF+
WX5B098mVIimRP4e20vH0MTLBu/DVHgEKbPCiY8ZpaX2gQXhszjWSCf8mpnq
FS/PUDE9nBAaQPjmWc18rrtGhcXsXulqVToKTcI0j7hTUUztXuasQoeHnkpu
53UqFCsc54kr08FUtMmi3qKCPzCUZqdIR/Ns+fvJ+1R8WD2aJihLR3R84JuN
0VQIq/tq7V9Lxxn97dpDsVSo2nVbtK4m9R7uaY98TcWxCCUXa3E6kiXlBJYl
UfFmpivp2go6Lhc2xDa8paJWRalsVowOZWs3jQepVIzZ3B18sIy8TyJL7Pky
qNhduWXFq8WEb6f9nC9ZVJyfuqOquIgOre5FkR65pH6buw7mLKBjxj172/Y8
KtJPbbHbI0reLytO1XG/UNEVdOduvTAdvln8tu+KqJgp7ow5LkT279G3fy+U
UrFxXPHzsAAdwj9Mn0tXUNGrf9R0CeGtD55QGqiiwj1JIuPVSrLfVGIqw2up
WCbKXL6V8Js16p8xb6DivVO2Rwnh7xZ9GlzXSgVN3Xj38BI6Rv0Vxz8PUGFZ
fqN6I+GZuXn2U9g4FVrU9sHEfzQUrxU8YjZB+Pa+2qMxS4NfXhpj4W8qXJMv
x1f9pUFkanrNvVkqUq7yX6L/pmHltee3rgkPY92syi+FnzT0LNVeqbJgGJ9t
/hzP+0FDdPrwe+aiYVhUVOYd+E7DBq4KxWb5MIICrW9f5tKg7FCrd1hyGP/W
PBJNo9PwXdClT3TDMKK8jzntptGQlbjKrUpmGBrD0i0NX2nQGrVN0Nk8DOe3
n8K4wzTM3BXVmd4yjAUL/X57Uwm/dEZntsow3jqbnlpMocHgzD9BJfVhUDW+
SasO0CA8m/CKrjEM76iPfsV9NNRHG++M1xrGmn83aYd7aXiya7zlzO5h5Jwz
PEDtppHvuYhLa3WHUZ2cNPaSQcOKG7pzu/SG8dFXtU6d8HavokWF7BtG5OnP
CXXfaDhtodYgfHAYjsvrTkyO0HB2rcmrTybDeGDX3PKM8NpQL1yzOzyMpLwO
Q1XCa3vlxeoKC8J3lrLDYZAGh3vTF26fHcbxtF/L+sj9btnFsxP/DWOPgVRd
YQMN7l49LQnXh3E6YpPeyXoaPPb8iDf3GsZN9ubPk7U0eDZsPJhxm/CHqCep
VtPg89X/xZVHw9gydMA3rpSGhytMVEdfDWPV9f92+efSENh3Ye6zN8NQq/PM
2JBDw+PX3p17EodxROK2QlEWDcFK6TdfpgwjsPzhqqmPNDwdrzY99J7kuyo4
KDSdhpDP1A0z6cOouvR8/tYPNIT6TP9KyRzGaEHkzYY0Gp7vE6s5kTOMOUtf
jTuk0hAmuiVa+PMw3m3/sabtCw3hLXuvfsofhpb9zAu3fBoiXljr2RUOoy5a
aMXKPBoird1XrCwZxqkWsZDcT6SfNj6hl5cNgz1fcrEV4Y9hJOVfqxzGLa3N
gdPZNLz6r8empW4YL9/o+u/OpOH1rh9qtxuHodp9cO4Q4Y+bIyqk0jKMkgXH
b98m/AmPtd8Hdg5j+L8rnmWE913Cy+n91GFsMox0MkqmIbvjwrPCiWGksMeP
WcSQPOZs3Irfw+iP+WG/KJqGS0qUxqI/w1ho+t2zKpIGiXsnREr4RnD1Izd2
ZzgN/mqmd8pERqDmzvi2/hnph7MLJPcuHMEFOfpU51PSz4E1X8oXjyCs+5tI
cDAN3BH9qYrlI+S7YVSZP4iGY880r1ZLjKDg36D7twAaec/9WmAkPQJe+kDA
y/tkHlkZ72o2jkDqXH+kpT8NhXpK32rlR3C3vKew1pfk68T0Pag4gsz/upt9
79LgGpkkXa80gq+yXcPad2gwrrQtMlYdwcrujp+/fGiQ/SFt3bBtBPsftAt8
8KaBT2Jo2kSd/L2o5bwqwtNrFB3eqDECufjVv/wek/n8z2qHqdYILmn3fdUL
pCHo9cr2Ju0RpLVHd/I9osG+oc3lMEYw5ni6qvABDXq/gxe37BnBtvlSn24S
n8nDogdbDUaQq/4mYuoeDa03q+lmRiOYbrB9mONHQ2ryPf+2gyPQvijr5UZ8
zvLxlbYfHkFp2NtTY7dpqP7wU7PrxAgaJj9I0r2I76JB2X6nEYx8/pLQ5UJ8
taLKT7mMQNbMO+y5M/G9aHlu4NoIHJi4f/Qq8StsjRm8PgLumjL7JkfCe6Vq
OfUuyd+rRrHKjoad9en838JGsFin82OONQ3r4rzyoiNGcGx75lWrU+T31w1c
j0aPIEY+WOnvCcKzsZ9a/HoEimIH3u6xJPy/EyM84kfgKiRnN3qM7JcmlyPK
SSP4PDN3030LwpegLfz17Qj4xinDCuak3l6CJVGpJH96wat6M9IfR1qvm30Y
wRLtO1vcztGwXi5GVThjBDdv3Gpfa0Pun7GjF2WNgJFz42bZGRpGW7e9cs8d
gcXP/2QunyY8yTPHlfJGULLVtX4Z4U/xrl48+mUEyled3PJOkvs3n/Y5UjoC
AebFcmErcj+fgoZQBeGVO+/48Tjx7xznFlaNYMj2zHIrws9398HpLQ0j+DR0
3Db5KPHpydot2E3y7DCct/8Q8Q0Q/fuFM4K64s17/fTJvJzuzLw2NgKNWVm2
oh4N19ReX948PoL4XRtD23SJH2VH34sp4pOzdnSDDg01GufyXOeOQil1gV+J
JjlvoZKrgsAoIhlCWxw0yHkjkwoUoVEIyM1vX7KDBssnjyNMFo1i8PXMxrPb
afj27dN1+dWjePKCWzarREPtF1/VobWj+NvOvJy4hYa0kEP05xKjsF9GEzuk
SM6zX/3KWHoUHaYj+b8UyL7VGT0+V2YUex4PnY+RJ+cv/7A4T3YUabV9ovvk
aNBm3qhyVhiFQr6E2U1yv1TxXh+5LaPo3Oa6V0GdhrlhizUGlUdx913Fjs7/
81zu5YZuHYXKhtUKvtsIz56ExINqo+iPcFyrupXsT47Wys87R6H2QIzvoTI5
b9/FX8/2joJmZ1Ozm/D03+7wWLd/FMb7JwznEJ7wL3un441GkSH7qLpcloal
ahv/ZR8axa2vWVUHZWjg30gR6rYchdh5oUorSRq+8p1Yt+7KKHRPfyj9bwXZ
f9o1sfFXR5Gwe6/ezuXkfXVdU1rJdRQi63tK/i6joZO3UlbHg/j08Zf4LiH9
M9imcvbOKBytjhU9FSXfA2v0M+i+o2jRZOlYiNCgeyxDzcV/FBritwvFhWn4
3BC88+6jUfB3vS14KUD26RcT/fjnowg3n8lPm/O/is47Guv3jeNClGQlq6SE
kKxUWi6EpIwWhWTvlaJCJRFJZYRIElFmNpFVZiVSVtaX5/P5PPt5SNnyu39/
OffhPO/Xfd3va+l0kMF1/kOryjMM/u1NOHyFgww7tVSMK9MwcNq0q05rlYD/
/J5/PvoCg47fdYfmVwhIL+AzbXuJgWqvRW3dMgEXyDe7zbIweFqKH7yzRIDo
Turpgdfo56OtPBIQT4/dhZ+X32AQ7yUobI14HqW1W1LyMLA2a6/ZsY4MJv37
h/wLMZDVuGNPRXw8Irk2C8UY0DcdWFe6lgy3H0TY81VgcHso10qXiwz+N/Q8
VRoweOV8f9buHwEqFSWMiiYMPI/rZCggPgpbxu/oJwz2Ks8ashCPg9u/q2Yd
GLSyXZJuLRBwxrLuln8vBtRgQ630PwTs09oXX0FgoB7PHTBEI0A9RcxMnYpB
TO113TdUApQX5/gK6RhgJJpAIIVA/qqNyJ5C8dv/vUCIIIDvlO6NhEUMOEZe
4McnCFj7bsc+gRUMLq4Vrtj8HwEcIly/H6xiUK4aEU4aI+DvQKvXXW4c3O56
ytwZQfF1OnnZXwCHboUDF6sGCPjVprKVIYSDkkX+roh+AvqUBIbcNuFw76b0
7Ok+Anpi2UmkzTiMZsW1yPwk4DO758xlCRwOfOVKZPYS0HqmTHBYCof4v0EO
dd8JaKpM/GopjQNtG03tQQ8BtRKBD3plcDh73iP+wDgBlSGWRmayOLwblR9f
j/hKxg5wfZbDgd91UmUE8eXrSTYZ7sLBg5URXDxMQCbvyMGjKjjsXBUXOztE
QEyiwx6V/TikbOczTUc8EbP6tDfaOPx525bm+4OAOxfl3uw8jMNpjXsUXcR3
TYa8fYsuDhv0l+/h3QRcLvAW5TPB4bYTq1b1CwFan64vkS/h4Jrbq9jcTICa
wsUaJ3scPqo+CUpsQu/x4FDguCMOMtUnW1waCZAxX2H1u+Ew1N5yma8evcdw
+GTrFRxMqVXJZ2sI4NZxfql3DYf8K1cx+WoCVjMNbeuDcOBdVNOcryTgj+u6
/ooQHJr48rrSywkY//2oMzsSBy2V59xEMQHYamjm+WgcjKg5ORlFyF/83td5
H+JwMbfEyKqQAIakjdn7Rzh4O9WRBQsImFIwkfeKw+HO9rbojjz0+XsPLm9N
xCFhtEfp7lsC5nUVf3xLwiEnbfjzwTcELJuK54c9w6HGivD6nYP8YsNzV/M5
DlPH1+xUqUD87n+tsBc4rHH4nE8tI2BdIKaanImDSHCi5ptSAoSffBxZyMFh
b6G8vuw7AmQ/3dZuLsEhSMjEQSKfAIUeH8Gr5ThEKW2i9iF95VFbQq4Kh2f6
I/6JSH/v3KGn0XU4vL/mGyaA9A12z7HN23BYHkx4yZ1JgGui35uxYRzCXw2P
TiUR4JlpdztuDIfE2tcuxU8J8C0yPa8/gcPrHz5Mr0QCrrfv5solcGhdy7FC
xBEQvUS285nGYZ2n3NbRhwTErhvYJ/MHB8l7zOy0GALiNrfxf5/FQTm9aveF
BwQ8U3tdq7WMw6lvxod/3Ccgz8lebJmHgCeaPtaddwko9jdnFq0n4OXJ/ZP3
wwgou6XTcpkf+dZ51cPgDgFVMXueCwsS0HyrY3rNbeT3lK0Bn4QJ6E2Ov9kY
SkDD6w0nAkUJIL2zXnMrhICPpYsyu8RRHZE+muqM9NsaqLODkugrbYisEI3y
68tgV8xWAuxrgvZTEc+3wfbXR2QIWIzcFFkQiT4Xrwph7SDg6dmSHz4RBAyv
PlU6s4uAdhbV/zfiZew9HSmpiXwsf6lgCel35mIKL7QIsJlu0fuB9HMlb3Rs
P0BAVL3KYH4w0lnN2KB4BPnw/DK39Q0CfnxmxO83Qve//9yu5iq6j0N0xllr
AtjkIeFATwJSfm7RHbAlYEuF3ttTHii/jr+bsL5MwPGwPB05dwJU9/TLOTqj
eEnc9PrhQkDW/M4Cf18CzE9ItGo4oPz0qj71x5+AkM1hNuvtCbAdM2FdRzpv
JsjT/9kRINZyReMO4li9Wb0tDuk8eNJY/SicgHf5ljdYVsgfnGcvCqM4DAc1
CLRZEqAfSCw+jSKA95hCzovzKD8pN9Ml0DvvFXx8OPAc8rv1Rp30WJT3w3+/
nzpLwFBX5rjMEwIevrnkLncGvZ+u1t3seKS7zailH90jsbxddhfymaD3hgdl
iMdfwaYlPxnlQW2P6eNLBJimslxUUwlYsy5ZxBPxKfOH85Y9R+9z3mbA0Abl
7/Rbk/fIx/Rp3H7lAupX9bM97SgvupWWrnojnn3qMQEnUV53XG/SNkY8ItnS
ot0oj5pbI1d2Ip6v0QZW/SgPyxyEoobNCYBzCaNYAwHJqfJpJidRftH30Nag
Ome33qJJUZ8A/nXdOXWoTnfyFvyh6xIwI+fvEDiI6hoPj9I7QPXYrmyQMorq
FNeH+H1HCbDu3d/ejfpK1fIuJ31tAnTZA+EP6ATsWApPWYt8sYv/ps4xFsqb
hdEvHftQPTGsq6yaIcBxNlHLfC8Bj9/D6xeoDwpOra61VUXv3//fZSvU14NZ
1odk9iCfzdzdIsyN5g5Gpe/kbvQ+QjsHPqM+a0EXys5RJkBxT0tCBOrLdVSv
AXclAgRMXMx0+NHcGSpbUrwf9StXHr55ATLslqr2D0L6I/fetJYKo7mz5qSG
DvLxx0zju15obuk//9/0WsTztp56RF4czYkz18q6NJBvf8XMj0mS4W78+qtJ
6shfol1+Z9AcpNKl+UcO8f6NOm13UJkM4QaRs8eQ/sjr35IzaC60mpSs3qCI
Pr85sa9QjQx7woqv/1BA913qO7UdzXWDdQPzjnKI38/6MC+aW1X3Ki/dRXlp
a+kk0Yfm+KEd3auNm9F9r3L/fIzm/neNTk1RKO+V4nKeGKM5O+LSfJj5JgJm
O8k8H+zJoJa6g3NcCNWjo95/s7zQ94Wucf/bQECQ9cZSW18yWBeva23lI+DS
9WJvMbTHqJ16EfkI1SHl0inSgyC0h0W18UjzEiD0Lf7lsZtkKJG3acfWEjBH
07RZQXtQ5Cd2VCE3AWO8P8Wq0R5n7RBhfI2LgBa5wF5/tPepr0qsP8JJwL03
tReW0V51leP+dYk1iF+ZYzwK7ZED3xYddwoQwFlk6LIJ7W2YbCQH90bkU7WH
9Ay0100HCWZgiDesrOeKMtoL/31OPfx/Xt19YvOVaI/dICM3lIN4Gw694u5K
IoN8u7aoG+K9VU/EXEB7seaWT6XHUZ09oqsijKG9WdfP1FwR8dcaVksvvUS8
4o4xVMRXbdG1Xykf7ZVuDzm8/6E+80OkvqKQDM/rNmecWsFhv+WFY7rvyPBW
MPPwHlTHK2xI5lYVZPhYXRHEWsChxHXBPbIB7Zm8Ywz/v6gvh8o/n+hFe+Rb
9aFABpozVj13+PSRwWe5NsiSjoNieMmb+QHkZwtD0QM0HHKjDlcIjpLh6fxF
83kyDtkJp7v+/3upTuN7rcEkHBw3p5ztpCI/pm90spnEQfbZyNA5Bhkmp1I4
jqA+lfnCjfCaJsPKs8LDK6iPXd5e5D03g/Z25v6h0VEctmX//h0+SwZxveag
hhE0Z8lr3xRYIINc0knRl6gPpr+9tZq6RAYNal/pnV842Oz+FCn/jwxw1N7c
fggHqeJ1/KUcFHi8v6JICvXBX+pmCUe4KPCowS1oFcMhtTxRomMt+r7RFjRT
4nBh/1DG2XXo/O0bbyfilXi/TX6cD50tw3uKEG9yQ57GrCA6u1Idro/jcF6P
XX1XBJ1Z6cq2iF+0RUtn42YKPAmymNFF/AmdjSZyUuh8vzqCD/E++dnndEaO
AnG5kW9e9OMQe/uR3HcFCuy9dmslqg+HGEVD3FyJAn16gWcDfuIQGVrhaqpK
gS2jzqtGvTiEyCV6GGtTIHeTgdVUF5pbr1n46ZyiQH0YJ++xVhyct61Trzej
gL3Zou2eFhT/jsapw6cpwLX1d5n4JxwubVULOGhJAePqCTtGE5o7WzYGatlT
4CezqSrpAw4Wvq37yh0pcL2uhj8MzSFmErdmNVwoIPmgxNGzFocT3ozrap4U
uCyXKQA1aA4Te61d7E0Bzt8pzkrVOBg02Syo+FEgp/FJ7SY014Dol2DlaxSg
W99xpaC550hD+OG8IBQvxesfestwOOR+aHnXTQqoz/qK1JfioC3y+0NuCAUY
D32M1Bpw2Pch75b8bQrIN0kVSdfjoOnqoPM67P//Lta+iR/xqgtJrsreo0Cy
YmDwIuLb7Rwdtj2aAjzx3ccHEJ+igK7eyxgKQGtocSviU6iZW7PtEbrfgtLm
CsS3g9/t3pYEClAcIibjKnAQrzC8L5ZOgU7Ng7dM0NwmardilJSB7udGkLTf
oTlvXSWv6CsKHHqeaLKrGIeNtnIPhHMpUMDFEucuxIGLmyuWv4QCsT+zyurf
4MA+2xTP2UIB8yB+ivpLHGbfRHpXt1Fgm46J7LoMHP4tmRz37kT3XRttO56O
5vzXfct93yjwIInr+6M0xP+H5pY3RIFPFYvvaWhOVTMu0bcboUB8qPaf5qco
v9MDpTeNo/c2CFJNRXOtgQHHj1CMAis/prOOx+Nw8llrkQaZAl+fq41uQ3Pw
GUZMNEGlQJqTj/jsYxzsn27WsWBT4MAM5eHrWOQnyi+Jtb9R/OoU2kLQXO17
JHPm/R/kj3BnjrMxOATGuXzznaOAzMS/Jt9kHEIx5bydixS4ZrIsaYL47mlP
3RtcRvErXwiQR3wxsZV2j1bRfaXnvnAgvmdauqJz3FToYE/fqkY8L6PXsgt4
qSB9kd2f8ATVk5HPnfZ8VAj4yFDzRXwVEefvfBakwtYk8oQc4uv56Ul7IUUF
v0OjhglROAwoqreekaZCS/avDJ/7OIyF/n3Ju50KkhsH54zR3sCQCzt/RZ4K
n8Z781bD0dwbmNRkoE4F8ciOjT63cRDstH6+oEkFb1arq/EtHMSktwcV76NC
s9Wnxp2hOMi15u+WOEwFL+WGK79u4qC3uSmZbkiFhu7yvuOBOBh7RF7JNKbC
poOlqjvRXmNRb3Lq/EkquGcVR/0LwMHOpW9NowUVhAPzDlb64+DyPm3k6lkq
uI7lJsT5oT1lo321oiUV6o6/pnv54hBcSfNOsKGCi9TLF7LeONxdX3L8uB0V
au+lz6544hB9KVB22Z4KgsxU8yEPVE9KD62UOFHB2TLlbYU7qk9rOQZdXKnw
vvHpmji0h7242Fom5UEFAaUEay9XtBcUxTzq9qKCU8KTciMXHArWWLhH+FKh
ZimWX9YZh7Lzm48dvEIFzrIaUQriSxC8Q2m8SgW7U/u5hxFfQCflkVEQ4iXK
Z7p8cNA4+mHwbAgVAre86y33Qv1EzsnXN5IK1IicuDtIv3imJDU7lQo9Vgn8
4pdxeFwkhXYLKuz5Lbi83g75yy0CK8mgIp88oi/b4rBn2EqtIZsKBs3Rnyet
cSj8+K9lsIgK1cp3oostUX+KPzW18SMVMla8uI3MkL9OViU9baHCUgp1RtsU
B8+12w9vaafCBU030u5TaG+/OROp+JUKIm6OH4XRXvvWPm3LsX4qRPZcCBs1
RPGU4m7uHKTCpGe/X48BDu4/fVwthqkAa89d/nQMh13GeqWX/qPCwkFznTw9
HHg4CyyxSSpY/vy6Jx3tzUSd6LInToVyXxPpJ4BDW+DtV9NkKgit7+AP10F+
VqMY3aBRwSfbcPnaURzuU08z/jGoUPXuueeWE2ivzq6Lj2RTwXp9xoywMaqn
l+QP8P+mwopjZui64zjIiz8ZSfhDhcwPWWtXES/39/m7knMoPmI5j/8iXizG
cVfmAhXIfm/EGYj39b99AUX/qKC6s1BpCPFG1LwU11pDg++hxWXdiNc5YH19
LRcNzaUlh9sQrxwxwtuxjgZ1DypNyxFfdte9F5MiNDCearjy6CDqTxpLti83
0yCV/0+LjzaaL5ICttpK0ICmqCRhdgD5/5LD8z5pGjx0SGwQ2IcDi6GT2qH4
//+H4bYhTh3lp0XVhcjdNJBhp9v5q6G9vmKPhL4qDfw39JZaqKK9NXRrSt1e
GogYHLkgrILqP//i02IdGpyvFMpJ2IXqs/+Vc156NMj9bjgfoIAD30/KJkUD
Gswxg0+elUfzwPOBhFcnaPBMAZ/etBPFf9XsjN0pGlD1pQz/7EB+dGoT3mJO
g0OXzZ/93I725t2VcU/P0WAk5b1O0jaUf09ULE5b0UClghUfKI36+Uy2oIA1
DW717MTPb8VBx2pL92dbdB/GBe39W1A9rkt4HHUZ3Wf944diUjgIy/CZGTii
+8h/GpuVwGEx/O7GNS40aNab1xgQR+9DzH+td6OBs1+gsjDi6zLxjw32pIGJ
uG3HX8RXVUw+ecCHBhqN+q6/EF+myOUNf/xoIOamxN0og/Ltl2mMTyANSFWz
EI34JDx3R9uH0SDEMr5aShL19wfEPaNkGhQlteWCEKr3zEvHuFJpkHi0yEBO
EAet032cTc9pEIwnTq4TwIFXsuXuwVc0MNrnsK13A8qvt6/uqBTSYPznUpIz
Lw5z7bYhIh9pICSqEfngHwbbzhoFfmyhwWqHqenVFQyMxtT8AtppwLrlufnS
MgbJfzider/S4Cs5O0d9EYOGOwzb8G7kp/QmH6kFDHC+fkvNXhrknx7dxz2P
gdaOPJOEARpE14m1DfzFwLYwwUD/Fw2u++993PwHg4gDoTq/R2jgKm9hWTCD
ofx30c4aR3745b0t6TcGP0zNNc9M0kB/ZLdQKuJZHNRW4cRpoHXxa+t9xCPr
LKtQRqaBQr93yLUlDAKC/0qKMGmwvqeIMEc8aWvHN31k02DplFn6UcTTHNex
MeA3DZidrNO75zAQevN8Te8cDXo+qdXzIL53P/So8Zx0SKkuTayfwoCh8rhG
WIIO8i8rdXdTMBCtuV7WLEUH8a2WsxJkDA4fcyi8Ik2H9amzBTwEBjEXtTK/
y9KBkXBAfJKEgdL9X1Hxe+hQfv8989k4BhbCLXf11OmQw2WdfX8MgxvpRSHT
mkgvbPHCtVEMOsrC/E5r0yE4+HCL+TAGruMKVsLH6KDnW5/GM4DBY0+h082G
dNhLv2Txpw+Dyr8LJleMEZ/7v7WTPzHg5u/S+W5Kh3WOcKW+FwOVlCrtuxZ0
WBwbVyj4jsE52UxNjbOIzyZs5FkPBqFFD1QmztNhdHB7wv1uDLK1ryrEX6BD
9/nm49e+YfD5k+12PRs6NPc6rDh0YfDbzEhq+hIdAsSM+3cOYiD1S030lT0d
Dk8fCtqM+PRdJAVOO9GB++seMd5+DDynONetcaVDV+72qnnEFx/CWFPqTofk
u5ssaT8w+C++8a+QLx2UDiwkdSG+/8JNaxP86RBxd8zuO+KbuDp8W/QqHf77
8mlXH+KbPD/HK3EDxcv+8fsRxEOSVJOSCacDT8zOUXonBsSrDJ09yXQgjZjK
8X1E5wQVrnfP6AC79jI3NqPzvdp29ed0eH5Fokq4CQOyS7+FViYdzvCQjks2
YEBREnA6nI/uq3bDS7EWA3rpragTDXTICM8qMypDfsjacOpLE4rn16gQk1J0
TkwVMv1Eh/PiPgZmJegcWJlq0UGHjYUH+s8Xo7PrMbvez3TwmN368mIRBkyr
77LnuujQosvpfqkQA5bxZXJfNx22PySrOxSg80FmgVUvHUL6vi4456Ozcoj/
0E86DMiUfXTPQ+ct6/fZDKCf91S98q8cnflTFkaG6PDMr69hLTqzV+Qa7Ebo
IBQYyr8R8U6xysL/G6NDdPBOa1HEOzWue9xxgg4cYZ/fbEG8U822PS4EHaZi
JI4pI96pMtpTMgXxxjXGaSDe6ewbFz3oKP5JrmPaiPd35NNJ7yk69GRW3DyO
+GZOfP1zdZEOpVUWJc65GMx+PywZLsCAK5PR0i8zMODwGZg7KMyA50f5rsW/
wIBv3dX+6U0MaH328PO9dFRvdPITHSQZIGH++Lp7GgaG+RICenIMaKpL/K6R
jIGZYQVjXoEBdLHNinJJGFz4z/xLiRIDNgck3xZ7ioG3WFT0djUGuCum7l6K
x+Bp+F9OjkMMEErKiGx5hEGGdPxE9REGHJqSGamKxeBtjUqTHzDA+eQrzbyH
GHxgOd0aN2BAzZrX448eYND2YNUm5TgDJm3l94dFY9Aj9/yQuQkDNtTkxgZE
YfCrcb8krykD9m1SJDnfxwCz7p1rMGfAZd+8g1aR6D3++vQHnWFAQ55MRvIT
DObj1leqnmfAYvfRL7GPMeBUyUkkrBhwYNZmPhzx8bfrBmRYM+Dq1mD5m4hP
zHHEwvISA0r0n53xQ3zbV66rCdgzgOFedcclBoO9e98xbrkwwLXy99BpxHfk
m8mXfe4MyB4W4jVGfEYeRB7TkwHja9S0dBCf9Utpt0v+DLhg5vVYOQKD8A2x
E0dCGHCSTNLnCsOgl+TevxTHADXJvoKK6xiM3OauLE9kgBfMDOYHoXyRzEz0
SmbAWxdhnleBqP6aD1gMP2fAjjJT+0dXMdjxwfBLbS4DRE+2ibr6YaBsNZEX
kMeA01cwPVtfVP9/h0YrFzLgUQqn3xkfDIwVKwzTShnAg+l06nhh4P9Utunm
BwbMh1bfEnfD4EySowdXIwOSJItOy7hisC85S+RRMwM0qrLkd7lgIJEyWSfW
woCuM88WVJ0RT4qsS2YbAzzYj7r2O2Ew+sxRQLmTAWtj773SccSgKTWruvwL
A14p3gw0csAgK23S/ug3Bryokn5ih/Qjn8vytfegeC5zDXt4YuCe7lhu8YMB
6vo0hUAPDExeZNn+6mPAQlRPQJg76hcvZd8xfzEgdtMLvhTEl5Yle04UZ0C5
8v5DLUgvNNtx5QWZAaH+W+93I73Lr7Nyd9EYYFTF2fvLHgO5XNmFQ2wGDOl1
e0zboX6TJ5vhsMCA1QvuqdtsMGgpkaUUb2TCyai0+RtnMcgtdYzXFmLC5q4w
g4gzGDwoyzr0UYQJ4yJucU9Oo/yokH3UJ86EgIy9irnmGAxVy2ou72DCs8qv
Vj9OIn/XOA5HyjHBYakse8wE5cP7rAjBXUzYrZfKpp7AwLlOdkBWhQkNX12i
OIyRfxtkQ0/sZwJG+le1xwD5v9FR/oc2E4qVcM6DxzAob8r6ZnuYCdf9vpgZ
6KN5oHnyOnGUCXqVpWnmeqiffZTd4a/LhA1LKYS1LvLfJ8fPC/pM+Kl7W9MV
MDjaknX1niETMu47376ig/zdOrl1ozETDnJJ7zFF+pxtsm3JJkzQXPdkwuY4
yq82R7/tpkxQ2bgm2dMIg/b2LIl8cybIi1w1uWmIQWynrFf9OSbqx1blyYhP
vEtWCLNjwrKaTOR3pKf99+eMvQMT4izZcxjSuyAdNTDqxAS5W42e80fR+/nQ
MwbcmWD6+bKFzBFUjwQq9nwJQHzOmVt8tDFQMDc8WXafCZC6o2ydBgbHr8+p
qj1gwo/Gabmt6sgvL/NECh8ywZ1oTlFTwyCfvfFXThzS2+t4y3IPBqpx/e6p
aUyY6Moyfq2E/Pzd7X5YMRPuccqNgywGlguSnisliF/pz+mzOzAI2vHVNLic
CYXmLS2u2zGouaK++VoNil+6c/6jbeh9Uyfnp2qR3ict6VfSyP/NT0d86tF9
qdxxFVsx2EIzaqI1MiFeqI+zYwuqDyIL2W4fUbwO5AQOS2Fw6VBBFNbChHyO
Q2K35TC47XjJy6GdCXbzjX+f7sTgZYyg+VgnE0SmDPsKEF9TWbOmzVcmtJO/
VHxEfBO/rooNfmNCyPjpp0OIj5NLYfHcdyaoDQxcnZLBwOBsTLNZP/JfG0lz
G+J1CTmS82WQCacaPET2Id772axo42EmcFSxp08i3o6ZMxb6/zHBI2ep5Cbi
O/V0y/g+GhMORWxS6xPD4Gxf4fLWf0wY1Tu2O1YQ8b7xXuzmYMFwhvTRJwKo
nt9UmQ/nYsHQ0pxZwkYMlqULZyjrWNBXWRjwbAPKH9cCWsUmFnQpidW+5kV+
1vaiuImx4Mv9qS9veDBY4ttNSEmyoJP0eTR/LZrP3uVPhG1jQeuLO2tKuVB8
5/IGTymxoF6Yaly/SgK5zx79q7tZUOf7ybrpHwnM05V+lqmyoObLC+9PKyQI
9qV+d9FgQZXijdttyyR4rZvXLaHFgorIM3GdSyT4JuLR9WU/C8omVbK+LpJg
AVP8cvsgC0qAt6J7AX1+NaVD4wgLitMnWnvnSWD24G0bpsOCu2lxC6qcKL9s
3FtS9FiwHDIbvm8Nmtf2KH40MWBB0CVb/iMcqN98f1NfcoIF3tsVZU4gviyp
NxWh51hgmdto4IT0vjJcy9SsWNATJf/NA+nNNSiUTF5kwUmPh1b+SO+UU26B
8WUW6KpYed6aJcFsQU6WqCcLlMtYT1J+k8Dk6Ou4wjss+FcvPfyFRoJrgs6P
L4ez4ObLe869VBK8nNgZKxLJgpkwKnOQQoI/kdlRN2JYQDlWyUEQJMj4lnXb
IIkFvZ2nFDhIJOjIdAydS2GBaUHZO55JEswEyAbnp7GgPVbi4MYJEhiLZwUK
ZbLggzl2UmqcBL8vv/IeyWfBm76QK1rDJPibsnafQxELLno+zDv5iwTz3R4r
+DsWbFhNm3AcIsEy77dWzzL0fon5ksGDJFgFzcfsChb4Kdaejh8gAeeNZMtr
1SzYUd/54G0/CXhKFrctvGeB0cOvLSNIbz3FjnzrAwu4M2O058ZIwL/90zvO
RhZ8qjAuFEZnwQu7bkQ1o/fp5NmuMkoCkbiHuvwtKH5jLYlGIySQ4Dj3fXMn
0ufVCwlBfPL/Yb8Vf7Cg2vqgCY70FCVO1BX1sSDQb65+tY8EKhZF9zQHWbA3
olJDCp01mwJFj4wifxRpSJr/IIFOJs9+czIL5a8ypaabBBfsUWNbYkFGrtT9
2A4S2DyL1VtcYYFt3eBCbjsJ7Hqm1t/hYMOWnmSf5jYSuOi+T4tey4aUBZHz
sy0kCNhu8uG5IBviT22Qs28mQeCF4ojtIv//OxmdKcFNJLgRJ2KaI8oGgaCo
DUmNJLjDMTxaLMmGmJdcM531JIj9z2u1eScbIn4vNe+tJcETiZ52IwU2HOOt
3Wf2ngQJFlpxXxTZsGbrjTz3GhIkRz+7YLGbDY3q+6XvVZMgtWl5e98eNtw2
/BP3oooE6fP21IvqbDhiXcZdU0mCTPXW0jFNNiz6+t/orSBBtrtSsNM+NlS+
8+joRvq5mY/0KQeQ/pb9V5kfSJA3OM3nc4gNZ6M4t21A50Ihyx/TR9ggO/Ot
Q7GOBGVh25yX9NjQ9NltmzPia7R/Fylwig3LN1M7fyG92m7vk2NmbBj+VLlj
DOlV6SgLF59mQ93G3psT5ejztuakm1qxIfgVnzKllARpg2nlsY5smO8Iiflb
hOJncX+C7yYb/ojbnRTKJYF/47E3v0LY8NMhOHtTDgm8Vdf45N9mQ3lB8pLY
axI48ofOn4hgw1XoLpDOIoFFxxXBB0/YMO2qy787A+XjAbW+Cwls6CmxdVZ9
QYLjuYw0xSQ2lCze+KCRjvwQ4abQkcYGv8el3tppJDg4I8dIecEGs8GulsOp
JNBynCx1y2SDqixtKzwjwW7dS0d5c9nArJTtMkwmgcI7Ka6Bt2zoWtWRP5FE
Atltgx25BWwoPGFz69RTEkg/SnocVMwGjeBM5SWkJ7F85pxRKRs2Va1bWIPO
ol5CUmIV6L7T/u3rnqN8+NU1jlexYWDPUJIg4uGpMfaK/MCGtJw8TWmkz7mL
R+N8IxtCJ4TXyKWQYCXp06zcRzbYSQd3KyOeP1d1wlva0XslmXhrI/0JNa1U
rh9syI+g55yNI8FIxrTdjz42xDadvWb9hASDG9/JZQ+ywXe5Tt/hMaqvdKUS
/TE2aF6LHfeNJcGHNzLtd6lsqHXaIxkTTYIasdHY0ww2pL9MIsdFkaA8Mu3M
Djby3/BKZcp9EuQ7bR5r+sMG/bPfzuREkCCntzc7bo4Nck/27yi8h/yoF+dh
v8gGni8Z7LJw5NcSUzX1FTaQeXgb3t8lQYrMhr+rq2z4rO8X2xRGgv8BvoUb
Kg==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.4}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"f(z)\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(8\\)]\\)(z)\"", 
         TraditionalForm], None}, {
        FormBox["\"z\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0.40664393215688527`, 1.0091763266372158`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.657719636093142*^9, 3.667234254539816*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", "20", ",", "10"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "4"}], ",", "0"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "4"}], ",", "10"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<z\>\"", ",", 
      "\"\<f(z)\!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\)(z)\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.654384520546056*^9, 3.654384525952312*^9}, {
  3.6672245647985907`*^9, 3.667224565307633*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
rxKiIOVYLLs8lo5+fb9nS5ZSkN+c4qwdSUfY9YJL/9ZT0Nle/WjPUzqumbz9
e3sjBefVjyZ3P6FDTyPgxcRmCigvG7+5BdHxe86Z6jEVCkZMO5Z9DiD5fvlL
lbmbgl/dw9FqfnRsutNTY61Jgeueq8UtvnTwXSqx/K5FwfQr1pDjPTo+bQ4O
oxygQMDs58Y0Lzr8Frtsu6BHgV/BrSPHPOm48MusrucQBQukJ+15HnTs6NK5
cuYIBY/v3gkOukPHwsItfB1HKRAbmE1XcqeDY7A289ExCnLbHgynuNHR0LPs
qtYJCvi9bx3kEr6U/xZI/TShQG7T4nynR3Q8mfz3Ld6UAu2mBNW//nRc9/95
78w5Ci67acd7P6DjmCRNXfQCBb6yvSuFiJ6lOxpjnC5TUH5j8RwJwj9WWnZi
4xUKvq/84PLKm/ht/EWw9yoF80u02bJEz4vrcdcOOFBwcKlzmzLhX5HkhKVu
FNSk974/5ELHpIbNWLk7BcyzzlLfbtHRXW323u0uBSJzljw1caLjFU1vMfUe
BQYnDty2uEGHtPzKgU9BFHwb+2Bwx5aOdREFd4++paBVzeXHp4t0zNuUvo3/
PQW/e5dc2XmBjpGcdyOZHyiQuJ/YnX+ejvdtTwylPlFwuq2vtPoMHf6WvgKN
aRS4eLjsOmZKx9Ux1+x7mRSErRdLbj9F5lXMQpr1hYKuWzqhQyfI/L8+1Ryd
T8HUmn7h/4zpYCsf8TP+SsGqChfP0WNkvxZAY34JBXscxH45G9GRbKDG/VJG
8rP849V/R+kI6tkYZ19JwZ1Cnb57BmR+/ltzSraGgqgr/ceFj9BhNCkm3FZH
wVd5jVs5hFfVf36h/zcKbFLx78A5OsQk/97QbKZg6V7d+42E/2c8b/1oK8lv
9WFRM8KfUdr5+HQ3BUuGTNY4m5B9MptopvCdgs8SdnsTCM9eZ6N/pVOkP+5h
Hgt16Bj/j+6u/4/cd9GqPU2bjtSL3lMNsxQ462xTOb2fDjn9jD9dc6mgidZR
YrXoEJKS/MlbREXV69kD6rvpKFmSev2WGBWe9+sie9XpcJ+nz5sSp2LXf+G/
vXfSweXeZs9bSUXC9u3v67aTfBT3j6yWp8K/4oqwhTLxI9vFKnY9Ffs+br8s
qETHwY9LhhU2UjH5hC8/aQsduSHa1K1KVNicibD/s5EOp4c9F3NUqJDVsq6I
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
WDi40+B/6PYCyA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUl3dcze8bxlNokFCR8W3ZTSMi6UoKadAio8yGESJNlZFkJe20aNFOWtp7
773rdPZJoSga/J7fX716nXOe531d931f9+cjdemWoQU3FxfX8CIurv//PWbB
ailmm6hp/Bl953J2FMyUk5eG1igh6ECTVMPpUaxa0uH9eY0mxh6mR4mbjkJh
n0hs+BpjBAk4xZQYj0KleVea75orGFu3+COv/iiKQ8t2v1pjh2A1yVQ/9VEo
tTp+2nT2HsYf8Wynq40ink9BvjDMHoeqGGl7DozC917wxm8SThg/npzes28U
l4/bCBtsdsOhiypZErtG8fjhC8fnazzw7bFxQeKmURSut8w6mesBzWpltfkN
o/idrf5T+uwThCxdV6QvPYob479u5YV5QjOAUvxDfBTGZy9YfZV4hrdxN8uV
xUbhPaUSm1P8DN84BlrPVo2i+o0o1ePic2gp7q7sFRnFgepa8/+iX+Bb9myV
64pROF6ODWMfegmtucGjTUKjSP/r3ptJe4m36qU1kstG8TXkjNijJ6/w3SP2
2J2lo9i8e/dJ/c3e0KrxqisTGMWFZiH/tVXeuD4UGddEeEOvc1oYVq/x86zJ
uk2E9/rjkaenF/rAtVvAx1lyFHwtTXFFxj5YbFK8sJnwx4oXVGyK9YF3yz2n
Tf+NQuNGAu3FLx+s1pcdd143ivu8T6RNA99g25HArk1E3xqTOwcLGW/wqUxH
14Xoy4o6f2Gjsi9U1BeUNBN93w+oRHzv8oXuvhsJLkTfFbtva56t8cdNWQ3X
FsK7i8fXOf22P3q6lq7g4R8Ft69SX1+VPzQ9umKUeEcRmeoUpmAfgDUDN+qD
eEbRy+GRaG8NRJl30DrzOQ4+OsW5z28LgsL+S6mvZzhw4NMe3vwwCMFMuUMl
vzkQ2ez93kkxGDfVS69t/MXB8YtiGyVehkBs4usXzhgH4t9zPY5SQ/A4Iltv
/VcOvrqZ0W1V3mLs2COKHoeD52FRceWstyiNXs3/icGBqawW7zhCIX9iJGyE
xsGWXKbV6qBQBM8lbRehclDeJbftmlYYbEw0TB2GOPCzbHrmFxaGrgWCXz8O
cHDply0nfzIMGild7r19HGz3ENFhHAtH8pko4aW9HPxbmZ0oFBWO1bw2Hw50
c9D4/vTSfX/C8eiz8v5bnRyEbZ+7celEBL6e5256187B9aKIhhcfInBqacOl
1lYOVPQPKmT+jcDPPR98do1ywDdA9R40icRFrSHea2wOuq57fuNNjkST0Wr3
d0wOcsstTJPl3yH+9lMbQaLHdCRhDVf/O5gnWB1j9nPg+9/usNi9Uaj+b+vC
0EYOZq546qpcicIeuQsuLfUcXEzqmmt8HYVoleAJ3jqiZ7+z2W9GFFxP8VHs
qjhoMC0S1wmIxq43rAL9YsLjr/3++48YhC+Md+BO52B2L2X2/dpYHFvXqH4q
jYPxAceTRodi8XvHJH9SCgdtWz4uyfKPhfH5A2EmiRxU1sPSqiAWC+wvWSTE
c5Bj21UsxohF6sunCv8+cBCRt9jeRTkOArktxR9jOHhzIaJZ7kIccpqnns1H
ceCxaI/soFccLJnrjAzfc2Cf0PDk9ac4iPxVX/8hkoOrxy2G1XvjUCJiSZ8N
5+DczzmVCe4PuCX7IuVEGAf6If4B0bIfIHA8ysMqg4ODanLfjY0/YNzikV8x
0aNELTu22PUDWu9filrzifSH19nY7NgPyPLT+HQnlYO18pP/rBs/4G2CdHFd
Mqm3vXRmncRHXOoeGXBN4KBW4KHEm9KPmNh1ec1INAcXdqr9XMeXAOHRyz4J
gRwYdXXoN2xPwPQCzUieAA4O37eJdzudgD6xjSnn/DiQrQwzpyQkIPowrW6Z
DwdTp2er4/QSsSvqCu/dZxyw//puMLVPxOovmqvqn3LQHy3jxh+ZiNmmjZs2
eXJQMnZ6143viSibp2l0PeLg5cOc8B1+STA+beG2/z4H7ptP/B7JS8Le21qv
/J05uFPHNPSnJWH9001hY44cnBJdzTe9Oxm0DPqXyHscHMtNufTRPBnVdRXV
v+9yoHr+cMHpp8lIGontMrjDgXT8vTv53cmwW275i+cWmVd9wQabBSkw3XJ4
oZkNB7yTMVskZFKgqrZZOOs66b8g1UfNhimQNFksLXSNzKtqe/9DlxQsusHY
bm3NwRDluvKumBSwH1WixJKDVk8eX1p9Ct76SjCM3Mh8yoZ+DfiVAlu18uBP
RE92884jR8RTcYRjrSPkwoE3++tRucOpkH0as/OeEweW3B+OrbiZimUbh9f0
OXCwSmmdfl9BKjrNTrHi7DjIq3uYkK2QBosWrSdqNzlYp3jtk05jGjxypIts
LnLguf/ITrWRNFibmMe1nedg4sjGz9un0qAzEfJqnzmp94XBDFHxTxCWW3Fu
0VkOnH0Nc4ZsPiEq8t/vMGMOen+pFN0VTEeJZ//O+iOk3txi6pZS6YjdILZ2
52EO0pf9KjbdnQ6vYqMFwZokr7aklh4wS8eJmdqmywdJ/Xe9PLTdNh1KQYuz
a0DyR/1qufSTdIgpaUQoqpG8OL2hkjc5HUM2X27MqnAQZ8F1ZKY4HWUCv4wu
7uNg5Z2Bqq/t6fjwYfv+KmUO3Nxyjw6x0vFC84a0/B4OOM+Dalrm0nGL8oHf
T4mDk0F2x8qXf4ahG/X7750ckpsGdVkbP2PPOolu8x0cKKQp6MbvJZ/vWsId
cJSDkPwlDaG6n6F5WnL1P6JnYQ1Lz/vCZyi775a7qsXB7Y6Kxgd2nyETe+xg
2yEOjo67N1uEfYbQD7vrH9Q5+C3xs03x62f0etUUHSf8po/7e8teZOB2zh3r
d/IcLB/eLGf1PgO9rdOiLFkOalRtXQWyM6A1dr9MUYbon1okaTCSgTXST8WL
NpP6XVW0GNybidIXoe0DEhy0VzhlPdTPhHyc5KNN4mQepMt5N13JRFBxrKLN
eg7m+kwTrr/OxI1fqc/nxDgY1H/07Tc9E6Lny9XXreQgMLFePWw2E+5O2uOX
lpP9w7faFyuywPZrDE1YxkFxSaKSp2oWCqu7p/Yt4cBRfOrJNsMsbKWaxTzk
J3nqot5Vb5UF3/kRgxpeDt4rdTgJ+2XBaudYkulCDs68kajL+piFFt07Z95x
k3qNX11/pjAL+62meVlcpL+OZdjMt2Uh7uH9TMV/bDz68LfwHTsLy8MWXHaY
Z0NlofZyzX9ZcM7yXF40y8bkBb+LTJFsSFamfz5G+JMKBtKfy2RDNG/MNYjw
X1m7daGCejYE0rYepRH+9Q53TFpMsvEv5vLKHYIcdLTlx9ldz8bPkIh+V6Ln
8CsD7bzAbAw9FrFdzUfykMvF++hYNjJOcb09toD0D71B7PLbHJj96xpNm2Qj
SkPs2uK0HBj+XJk1/4ONM5GX8uIrcnCErffg2Hc26kynzb5/z8HOtjIR2lc2
kuoko12PfAHvh9QDqxls3Pp0Vz745xek6T997drNxrgqpa2GLxcJjjNXmJ1s
3KjWd55dn4voKBsVgw42rIe2VZlr5SJoyoi+sZUNxrUgG5/TufCRrMr1bmbj
ytRCkVKbXDw/puLzu5GNC4LDFzYF5sI1QnJ/fR0bg8F6vKcScuFQ7bd8Ty0b
5zbmJXsV5uL2xGJGZDUbvalbjXNbc3FtvXMefxUbpvsDZ0YZuWi+dHvaYICN
zkqe9//N5sLZL2RdcR8bxoa2R44L5WFjeSkUetk4cVXXP105Dw6bRL0Eutho
/PlFhaaTB6mTakmOhF/3wRaK6IU81HlaNTPa2DgaxK3g5JUHCdYXsTLCr16R
U4WePFQlmMe7EL7tUptm653zsWr7x9qvBWykJPm+/+udj+ILLeNn8tmQ28t1
dHt0Pq69mVlZk8vG1uN9/n51+Sic0CWLjA1J1zcKZ9YXwCLzx6jZJzYi+P61
v9heACHG2uX1qWys97/hUqBZgC+rNJVUUtgQSzxSLWlTAEHHwPurEtlY0TN/
kVlQgEyV/YJNMWz4XLnOt6a1AObXr+w4EM3Gsu/dKccYBeALe2WS+J4NAd6M
2eRlhTg3PxT+NIINL1+pqCHpQixW4C/9FcbGYvHXR1coFyLNfCfjcigb3Luv
BdidL8TCYg8F9WA2HhR37Y+7W4iU78mGKYFs/NXRGul6WghTqS779QFs3O9K
9+IPKwS3IVfocz82Zi5JKu5PK0TSo21Fv9+w4Tj+quNGeSEKErSqSz6wMeU0
6xLRTc5/sCVcKY4Nu0VXpZu/FkLXhP/OB6JnwqezesGCIvjJjB5eS/Tk3/gE
2qoiJMWe6rtO9Dw9+jKrUq4IFZLltwoiiV9cGjEvTIswvSo8+ALRo3Ur2V00
rQhneY5z4ghf/WaNUH/FYmzsT3+1y4uNT/6pnU9UinHglIT0E082Arn/W+mg
VYyTrS+yOj3YuDg47XX6bDG8qq8MOT0kvAHJ9uJPi/E1Y9WOYmdSv0VrDD8O
FiPzlXO7rg0bi+56vgphF6ORj2kdcZ0NzvBk9fOfxWA+Npr/dpWNzPxG2AiU
YI2z3GY/Szbeyqi6mIuWYOev4FzaFeJvcHzWcckS6NxedHzPZTYsFq+eUJct
wZVRW+rTi2wcs/OQ37mnBK6Wgw4959lQHPlhveFgCQIpx5bKmrMhcuJ8jIhu
Cer6P647eZf4X1A/tOhUCYRUv80k2bIxJKuybvpiCYxCd/fy3GajPOTDSdaN
EgTNuHw5c5ONBF5R3x6HEvSeLg3+dIPUg/qNL/9VCS6JHT91nvCfNjDTTA4u
QZxDwJ4sKzbUimrdI6JLwOnsExUkevhDY6cefCnBnQDr9txLpJ8Nz9K06CV4
uPKRwapzbFSXVBY1qZbi3dJMnQZ9NuLq52ivjpTiT33tqKweG0+6dgroGpbC
6NXwi+c6bGiMRRhXW5Vi0bKl9UeOkvqLObCLfUtxXeiybulB4t+G5GXu4aUo
b3L8KqnOhpMCddeBj6UQ9/F+6a7Gxh7N425fCkrRvDy3XnU/G2m3tgins0qx
Z+UKvWwlNrydzfbenizF69bNY6K72LB54mem8LcUbF/VV3Y7SB741Dz6ylcG
DSND+TZFNmRC/31IEC5DqLB1ww4FNvjidjdYi5fhV5urjY8cG8y06xObt5VB
399P8JsMG5V571fTd5WhpqlOuQFsxFR2qUarlcEx/bzBdsL3qEXw0kXtMmwJ
mLzmp0r6rf/QUwnjMnQ6PPWYUmFDfCK1JfRqGXYdSM3OV2Yj+D8vS3//Mnyr
+vufNuGz31r4wjCyDBEJvspJhM9k18+05Qll0H212UCI8K3UvjD7sqgMCYb6
Hh2E56XdXp8nnDJYDoRzLm4k/VbH+mKvXo7+CdVs59VsmHeKDynplONFR3Pz
gCgbByjGCydNyqGSc4WjLkL6aapY/9b1cgS7vvyPdwXpD+kQqlVgOYz4+h/7
CbBhKN/Et/l9ObhHb4VP8bGxY+8iBVpiOT418GSf5iX7Q8/W8UJJOYT8ZDkS
C9m46qQtePprOWr/czmRNM9CwroVZuZT5Tj1UkFGdo6FrwXdSZe5KkCfofAk
zLAgf+HdnLVABe5cDRjY+oeFm9zWujdFKsDVfTT7wzQLaTGKYXfFK/Dq8JzP
5ikWfhyeHnXcWoHITQuXvSB8O9mF+912VmBwzZywED/hf+H54rFqBf5b9nON
H+HLktfv8zpcgbPcXyVWL2ZjuklU1vtEBd5OUTeFEl5nkdja4CsVEBtq2xG9
gA338DL+lJcVEE77rP15loVivDj9ObAChjGJx5UJL/eIYXzOuwq8CY42yfvN
gsfmkaNlGRVY9tDvYtkvFp6ncnl191dAwPCuU9s3FgJKDizmka8E18+d8ZNU
FjovLzrJp1wJsGRSHUZYEFvcECt4sBJu/dKZs8MsvD12TkvMpBJz5StLeAZZ
eNfm7CHvWonpgIlu4W4WRu5ptO98WondzzmDQZ0sbBAT2Lj3TSXs3EZo6zpY
iDsXUqYRW4kJy9bvG1pZSKRnc5s2VGJMOZ1PqZ74/9Td0KyrEnJyCctyallQ
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
B/mpzKYHhLf9UsbiT9t7sEO7I7GD8LVYiWaEHe7B2vtpl903M1Br27XM7k4P
ximWba3rGOD/rDgz7tCD+BSzg65rGTj68yn9qmsPLrsYp25Zw0CV/d788149
6BbReHF/Fclzl5CrOhE9KD3y36HNKxjgKfhhXBndg/siIp+ahRjQ+KutfjC+
B8oUAQmXZQwUP5hZpZzRgyTn3zNNS8g+eXK2XLq2B4HJbelOixmYq/ycGt7U
gxPOtZIbFzGgyrc0VKyjBwJHSrwbeRhw0b7i6dfbgwrhnDlHbtJvz/Ntlw33
wH045dqGBQz8qRMxe0bvgUpybHfDPzr2CtocXTjag59OYYcd/9LhoF+xy/17
D8ISkzpeLyX5+vo/iZlfPaixE9sJwvOr+Z7AvdkeTB3w8B7nJ/t6ZeOvb1y9
2MD7nRPOx8Bnf7d6+pJeuIZURc8RvrSQIacWqV7sLLQXzeUiebFtfe/OLb1Y
UT7re4vcv/WLqYq/XC++1zxYvoncH9ndMnNSuRepHc+X+MzS4b263KVftxdy
YxELLKfosAn46Mp06MXm9VVjK76S32+iDxx17cViad3rVRw6aBlSagmPekHf
0sK6z6bjXPvbvzde9SJ6Vx+VyaBDV/iV+0RULyR1vvUUUOjgi64ZMvrYi38n
7E7dHaajfOdi9czkXgyd/NO+dYiO/YbuXI45vQi/xNPs10/HFCXvQk8B0Wft
pafdR0e67e9ilbJenLspWPe3hw6ZN7YP5xt6sdZ5deXVLjoYkikU87ZezLiH
HZLopCMqjXOwuLsXPU+kStrb6TBX3xIlNdiLnBdxas/b6FjbfJn7MbUXWxMM
OHqEr/P8u0s0Vi/2F8bt4CN8vt/6S7XGe6HfOutYOkgHv9DJx3x/enFvJpZX
mfCVR/hSr/7txbNls/o/eul4oNB0qI6nD2HSJwITCd9vvaMLvZf1oezYzEZJ
wsd6qfJEeGMflofqa/C30hGz3oFut60PG1Ojn5U103Eh6bNWp0IflMt+N7s2
0dFVJ7c4ZF8fzEejzk/U01EpIPFU/HgfEvdP3++roiPWi+fZNuc+HO6PzE4u
oGMlzctNwb0PH0dKe1zzCQ+W2e3y6AM/mz6rl0fHmSmx8we8+1D/S1Z9PIcO
oSsKuw2i+mAolFOtkEHH/aLPMic/9OGzaB/nbzodnLX7JM8m9UF0/d+lTZ+I
3pZDSyyy+tC9VdPgViodO+RruK7l9WGfotVdpNAR4aU/dbO4D6G7nwcIJdPh
hNMUx9o+mGk096QmkPq8Hex0bepD0dHJWfd4OoynLtc/au+D5PFV4ic+0lFi
wC552tOH57bv+b5n0qGQfDP75WAfoiViFpQTvlC+n0lvqH3Ib4ibCfpM+umK
U1Qgqw+dLvGT1wkvda3Hq3cTfeDrTqELp9Fxwp7/cex0H6Q9Pw0yCV9hi7dj
wlwf9itldOURvmCvkMsZi/tx0+dLzeVEOvSmUvZVr+1H29Hy5M9xdOQaKCk2
SPRjbKoy7mks6f/kLxtbN/ZjcWxN5NkYOrivlAv1K/Rj34KmNzxRdGS39NC/
afQj4kvPPaNwOqSSF/quvt6PqzLfDkz6kfnie/50/e1+PO7+safKl465y0Ku
Uvf6Eeb5UzH0Dem/tWutZd370TTyR+rQazpeeCmqwa8fSqELF/s9J/1Ezdil
GdwPPW3ef5bP6LCEyjbt8H5YTfP/VvGiQ31KU8ToQz9CjIQ4I0/oSDao5TdN
6sfnBSupWR6k35OP/zv3qR/1qSL9zx/T8evyGY5lXj/+LVnbuPMhHfbCs8Ld
xf1g95k9HnMn81caekC7kviR+H7vRzfy+R1Vq9y6fhS40McuuZLPpQZ8ZFv6
YXYr4IUj4bNvcc0N6+wHl//anXsJ3/QDcZpgfz+icyK7p58S/qHzyt8Z5PwF
CZscCJ/ja66LF7/24+Vmxfo9hO+32vvnrT/6oaiTcWfqER1/wkcGMub6Yedf
WHTvAR0zZy08nFYOgGtL22k7FzqclyxO4aweQLSOKZeSMx2zuXFdZ/8bwOHb
A3GTjsTfNSwZta0DePGFOXnHno75rmst3GoDWK0798rWlg4u49viL68OQMF2
U+lNKzIvPCuOzt8cQEtAgrWCJR0LPn+yvWk3ALtcRaHxK6TeKyfLT7gPIJdH
5ZzNJTp4mu9dFw0YgFag/tR1Mzo83FcFeL4dACu3LUz2HB0LFbMLpyPJ/UOm
h0bPkP+9f6/oTSDnb73sc82UfP9AyH6dNHK+HmuPzCk6Fo3ts8jPJHx3bAbY
JnR4hvV6y+cN4EvgxON4YzoW67rkRBQP4Fyeg8xVI/L57LoRocoB5LV5HD90
gXyemL/kYd0AeusFNXnPk8/PmO2eaB7ATEXg3jrCxyvw1/xy5wDWFEnIvyZ8
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
NMhsAw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUl3dcjt8bx9MWhaJJREY7FEl8MqISkRBfkaQyUhkVSSKJNFRSqTQJSdp7
7733eBo8+3mSrCi/8/urV6+7+5z3+3Ou6zp3CtaOZhd4eXh4AgV5eP7/0/gC
ra2UfmznEwueM4yNk6CmHrcekdGCcYnj4W7NSUgu6ArIkNmLBetGdpdrTEJ9
29KkaBlz+H0rWh+pNgnd1s1pwTI28A9w/2qkNInSlxXa/jI3EFT5w/vtqklo
tbt9WvvfTRxRsXV9vnISb4XV1YqjXLAkuOuil/wkgm+GK3JX3kLw2cxDJ5dP
4rypg8SRdXcRMuMsPV96Eg+8/NyeyHjjhSb7vf2iSRQvt80+nu+NEy9Ox5iL
TeJXjv706v8eQmquIUhfdBJXON8dC6J8EN7w7qb0gkmY/2dlx1r5GJG29qgV
nETAD92k3NLHONXUszFTYBK1z5aNe597Ajmt/Yqx/JPYUVt/ZkWCH17OWzff
jXcSbueTouh7nuK0/fM/5+dNIn3Osz9r4imWt/BzTHkmwYo4JX3/oT/yLtNK
Xee4WKetffzQugDobqtJMv3LhVXrolDZmgCYidgO9SyexMvLjLYvdoH4Sklo
qCY+lx+MPTrJH4SgnNG8LOIj3NbyusQ8CBoBK5MTiU+SfFHV2qQgNNlYhoUs
nMTuK+8m/L4H4cr2l973id8doYerLcKe4S1N8pzV/EnIHLu2q/jLMxiWmJua
Ck8iO/6sleLWYFCfB+/YKTSJyR26MZM9wVDcIya7nPjb3ODKPJYJxatogY4e
4rOZL/h2ulMo6hKOB5/9xwVvsNbAQE0oji6Mv7tolotXH29Fqbs8h92QzgnH
X1z0M/hWdraHIdDTVliDy0Xyrdees0ovIEP7ND3M4sJV2IiyzusFEg7PUgIY
XCxdFxB3SyMcuQqheZzPXJiek1Zc+TQClIqyS6mDXMhP5nsbjkfgkqroiTP9
XLDuWn521o3EdKjFHrFeLp5Exb+upEVC2JYrd7WDCwsVAyEOXiK4WVdYvo2L
9flUO6kXL7F8q890UzMXlT2qSpcMoqApvKJJrZ6LENuWxyFRUch3ss8bquHC
+rszo/BbFPb2ZST5V3Gh6b30wBfjaDTv+vdsRwUX/8Rz3i+Kj4bFO+O77FIu
muNOLtz2Oxrj4mGXoou5iNL8e8X6cAwc3EePHyzk4nJJTJPfmxj8HFfdM5vH
he6hXepZczFQerDlaOwwF8JD4wHDx17BPZ+lepz49lz24Qp9eIWmr/GCC4lv
fuUFiw9qsXCyWpTv2kX8xt7J8AzGImcHbZVpIxfBK7SjknTise9XBOf/68/Y
+Jjo2sTjhcbh2owcLs6l9PxtDowH3VYw/mIW8dl+2/LXl3j4d1071pXGRZNF
ifyB5wnoTD9QmPKG8IQaxU1+TYS1w+zj/55z8Udn9E+cbBLYIX7bdUK44Ay5
HT+6Jwmu+TLspc+46FifvCA7NAn+QlsONz/loroRtnZFSZBSr5z3/gkXuc49
pdJfkhBvbpbxyJeLmAJBF/etr5ETd1VylzcXz6xiWlWtXmN37d+aFfe58BbY
ojLs+xpNnCe3Zjy5cHnX9DDw02ucWCaj0uPBxUXTCxT9/tcY2/5mMMOdi9PT
f3WneN/AwVo7IOgWF4ciQp8nqLxBb99qxZxoLnbtVJ00N38DUV7eixEvudAa
rzAW9HiD3cqjH9wjSH34/peUk/QGrmalU5YvuJBV+/bPvvkNUm6/2qpP/P+5
rM5qWJkMyQbLMn7iWy/itfJZeTIYl/s7/YmP1aad03LC7xD8oePPK1cujvZ0
HWrSfIearnT9+ze52HfH4e3dk+/wd/bZQ5vrXKhUR50ZffcOtocOL1Jy5OLH
yT+1rw++hy63cXW6LRf0ueA1Fi7v4SiVYhdqw8VggvLd+a/eIxF+KS7WXJSx
T26+MvkeYkFGW7af4eKpV270xpAUjGlWG1Ue48Jz3eFfYwUpkDqZFPD6KBfX
GqhmoRMpMPHy7vA9wiU5Sgn/1P6A7LbdlgcPcmGcn2qdfOYDmL8V4jUOcKF3
dl/RyUcfsGr1POoSIy5Wv715rbD3A55cK3Hq3kv69ZBok8O8VJRExmTl7uZC
6Fvi+pXKqZgu95iJ1Cf190LvfqtZKpSYp+Gxk/SrXuegl3sqzkjoeZ/V42Jk
9PLWzYmpCNkuV7dLl4t2H77gicZUJNws3/HWkvSnykvW8++pyOYmfnj2Hxc5
rZv275f/iPqLj1bcPslFAJ1lqLrvI7TW9os5nODClveN8ZKrH/GKospjRfwl
teQODRR9xI0T7WMGxLegwetdjnoa5A1WJP/fR07j0qcDzWm4tipj01sdLny2
79+0cywNQwMCilFbuJjar5ih+SMNhi8slgVqkfO2Gs5cJv8JK8Tmft7Q5OJ2
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
2mHHQ8Tp7tVHdMk870+fKmvPQyWnNdFch4aJ3aym14489Nu9G9BZTPrx8+iI
q3t50KirspHWpiE3T8pigyuP7A2lD/maNIaDg2TGuvNw/V6B3JtFJD/M4NsX
HjzkKkR4LCJ878x8wgIOE3/5lTVS+jQe32dv+8+bh+Mb+heKCF+q/N4pP4/y
YNuhHtysR+rtq3motx8P86Svm9wkfEqHF19zucBDoafNE3UtMt9DmIub4nlo
1uZlm84n/V7otH5cIg+PqmZLqs2jYbCjRaLyFg+J9pbuknNpSCpXB628y8O+
0JIFjbNIfWXfPa+Tz0Mf91ySw0waA3WOZ+SreJieMz3MX5bsXzs3+VVV8xA+
bKmyV4bo85ve0eN1PEzcHpa9WZr0m58Sbh/ekvyIxtcoSdEoPy9wDG4i32O6
dufYyTRoqc+2+h944N8428WVJDwLcsyiW3n4ZvD777MJNBzzozes+0rid0U/
LH080et/gSZ9HeR7Wo+ohI37f/27G6V958FMKy/7hASNj+aW+tbdPNTPnjgl
gvAMtxnpSNA8XHnyOz6A8KjuV9UoZvOw3pqt6jGFxC/gl7K8kIcXV+tXmRKe
pAnfp1eJeQhQfVqrM4nGy6h6meN9PBi9yLFWJnzTsm6N/TDAQ3Ff6OG+//9e
8ONa7g0JPrKczJMyxpB5ohNRKqfER/TyD0OTBikolJ4sfqnCh2Vj1eVfvyms
Xr8v/9gcPqQPPZTr/kUhdI9BarMqH1eTY7We91PQuvL16g1dPgIn2+3xFlOw
kqsOWruUj5UZm+k9Igqnbhec6dXnY8DE6NgmIYX64gtHdxjxceyEcsg8PoUD
3zXs5Nbzyc/20maGQsThaTtebuRjYcDbDeU0hUe/hsyObeGjS+HF+1yKwnjp
dybN5nw4miVzLnZT0El4bBRkxYcyHXHCp4vCLtVU/WU7+fh8/vwYpx8UAgtC
dLps+IhR8Qnb+p1CupGvxo3dfFg9clFa8Y3C61eO89c68CFrtSNDtZNCn8Um
lV4nwq+s3j3MpqDyVU/hrgsfScFVTnzCt85dWXaHGx9/+Hu/tBO+wz0Sk8Ye
4MPB5u+ut4TvxhnB2AcH+SgrT3pfxqLw40bFr2lH+Dh3o6XuDuH7EWz+LNqH
j/NCyQuphK/Lt/2cgi8fF7auMkonfN02A5JKp/gIGpuSnU14WMp6KvOC+bh0
7GDIwy8UmLvJJrrxfITs+GPW0EzsaJ1xhTf5CC3QHff2PbEvPqtbeouP65Nd
njc2UWC7f7YySOUj7GX14k/vKHC0ZN1W5/IRuSxC+nsDBf6Ds1e3lvMRK7eg
8edLCoK0KdvfVPIR573zykAlsWMSp5m/4iO+4bLJcAWx/R4lWtXzkRDEuz/6
gtgH1jt/eM3Hzc7ZHhLEFto1q+56x0fiSst5E8ooiLbsZbc0ETsuqFXyObFX
CvPsPpB49j6MlHpGbO0zPl8+8XHLnNks85TYsyYbOrTyYZ61dULJK2JLJwx1
fOGDntbt8qyKgvivWrlzB9FbQEBZJeHtERUH//jGx3RKXqmO8PZ8N93s2sVH
nnme7zvC2/PS8b07w8fX+R3aXwlfTzEvls0h+gs9ceUH4etNP7XnEJ+PyT+l
uxnC13c5tturh4//6tYk9hOe/q1vf/oO/z8eKZIyjyn8bl6tHCwrwI5nrhTu
Uxjj3TqwUk4A7WRvg2UFFKQm+X7unS7AuOBTl1TzKcw1yY3ZpyzAo60RahNy
KWzMVZJdqyaA8pen+1/fo2CxsUQwqCFAX1l1yfMMCrt/WL4p0hLgTWrT+IJ0
Cl6KV6/N1xPg7EE6I/IuhdjgXxJjVgnQNTCN3nWHQvKcG11PjAV41j7LcNNt
CtmlOpVHIUBMhcbl/25RKBO5nf2+QYCNV43VVRIp1IaMOiRsFmCu52a/KTcp
vFe7tcrSTIABC+uakXgKXytWKEuaC/Be32mGKI4CZf9hoNxSgBzFg+7fY0k+
fnl/9rcWgPu7+rpRCoXBqMmPltiQ95sCb+omU5DQuRfD2AmQmmVwT5XwSdeZ
Hk+2F+DPecGDmYRP0bXDytZJALvdGeXShG/+35N6si4CFC91fDM2icLy5YWC
s+4CHOp6Q/ETKBg3mr0xPChAzdOLvT8I36ZDTI7wsADzo1f/ayF89ilzPJx8
BGhdlzezMoZC8JSwLuMzAmzICDWLjaTwgXXw858o8r0eW4uMr1LoODf+0cMY
AU5j7ItlV0i9KKfGeMYL0DLzaYPGZQrDlq1W7bcEuF6vyZp2kcKCso1vnmUK
MKQ1SZE+R0HbrivneI4ANhKVql/PUjDoC7ymnS9A0deTek2BFLZolmxMeiDA
gevsLU8DKPjEqlaeLhPgk6D2TLg/Bes410PjKgTI+xK4LtaPgmF8mnz4SwGC
avUn3zpBQSmh+7litQC7H3Ka7voSngRV99RaAZakJsdnH6fQedNVVrtBgAnh
u5wKj1GoTEx78vCNAB2npdQe+1BIS+p2WdNI3l9yQ/CD+L98S1Wq7r0A1WN3
ruGfpnDwtutDq48CdH5SiPh1ioLZnTTHry0k/1mfv42epDAtRbVQ+JXo2cL+
ggLhTUpT3aVACxCVtO/VGuI/MN317x020YP3QoUtxP/ejLTMRTwBXpnS+62J
f7VM1aFVYgF+MwcnehyhUJijmrxvSACH5T5bow5TqC5S5dyXEWLR23NN3aSE
Mh+43jCaJoRpiul84T4KIcVpq6rkhbA/LnFswIXUR4lqeMtMIcKVrshL76Xw
5Ymq/sgCIfr2h9sYOhB9l7q2X1YTQtrIMhP2pB6epl2aukgI9SlyA1v3UNj/
XLVVVUeI3Q9ibzrbEf2WqwZuXSFE+d9b7Vd3Ev1XuKp/NBKi7b2TTrQ1hYeV
aY2Oq4WkL8w7e3sHhfiX3SeZNUJInex6l2lF5lmV6gIfUyHUzNLnPrAk+nvl
+nponRAmc9yPPregsKY6zffiRiHsejQqa8yJvmu6Z8tsEWLS0E6XEuJfola1
Nt5MiH3Tc9WqbEl91boenW8uxFPdMdwmGwp1dWlKuZZCyG+xLejcRSGsQdXz
xS4hqgIlVgwRvpnvVKdRzkIsZOw3LyX+jX596nfZJ4TytbrGdcT/7jlXWzvd
hJiqbWBrQ/wnefOTWw8KMewt4x6wjfQj2RLdN8eF+PCrIrh6MwUNy43biq8I
cWGCevluUwqbTw4s0QsRwi/rxkZPEL2k5MjnXxfCc+u/t2dNKOSKZb7eiyLf
F97anmZMYUnU54OJSUIsmRE6JDAiem72uHLhvhAdamKDoGUUbIeUD/8tIv5q
HcpillLwX/DWPOChEPUH69dn6lEoPbZ0xolSIUry71q/0SX5Tewe7HkmRK6F
7NdOHaL/l7Ed3i+ESOkJ2NezmMIs3qZKXoUQcdFsjgSxjeWH0j2qhLhusMtn
hjYFp1V5V6lqIbwCc/rfL6dwztXJc1+dEGNFhU2MPoWU0KmW3xqESNj7OG+E
8FUWv9R3eCuETnPZVXlid331VWxrFOLluldumoRXYpzG8K5mIWxLGmBCeDfs
DH1p8VmIoITPA4cIr/sZ43tv2oRQnNz58TzhvZIuuralXYi8AFZhHOGr77e2
WvdDiM9OPR4vtShsj5313ZAnxGI1qTYlDQo7W/JHZv8ToqVoTWndXMKb5TXc
NEaEufvCixrmkH5+WmcweJwIB+Q6s9/MpjAyJ7+fM0mEwWOBiU0qpH4O5PFK
pougsvx5QKsi0bORJ8dDUQQ3lpTvlxkU/kgtZlSURciLsfdsVyD7WWFu14W5
Ihj/HHL4Lk/iO5DTtl1LBOdHRmvYsqR+Xx/6PLpYhCz3a4ZcGQqWt7U+FS8R
QTyjTZcvTSHgCLfZfZkI/9Uu0hBOoZBhmtOkZCDCBf+Tc8VSFBrlD717s0KE
Bo06xd7JFIYozTfnVoog16o4tX8Sef8Jp36ZsQj2Vw9I/pIk9R2SXUv9/9+h
/emm6CpH6svhYHXCWhEC30xI9phG9jVdzSqzDeT9tCx176lk3jRnvSjaKkKI
Fd/gFOFLU8kqCdwlwq384zsjiL+3ggPFenYipFxUaI8h/gbKNYq694iQYf/Y
NZH42+6Wmbdlrwj5k4aPZUwg8zzvXprCYRHK9wdFPRtL+uGajKj88yJ0zY56
xwyxcGLq/oi9wSIw/ctsBIMspHQtDJO/LALv9ceO3gEWfl5Ov3oqVIT+UzMF
I79YSG5MO7chToTxLclS0/tYqE91DRxIEGFyvmm0Ui8L/cdVA3KTRJC52K08
t4eFLTPT/KaliqC4TENLS8RC3967Xh25IiwKL9gMHgu/EiYY7isQwZZlGGnD
ZWGw6dBfulCESyvLP3tyWBiRbKw5XCxCceSmucFsFkahHyEuIfx0o/tNhgWJ
U/G2J56IMNXYruA+zcLEouG5Q09F+Kyl/HaA+JvMcWafLRORP6dqJkds6fmv
CiUqRNCtXVyvLWRh6u5Fp66+FGGPguGmDQIW5KOum0pXE/+uJtVOfBaUxuxq
ntEgQvs/q8oowqf+g+rT/Ejy859/6W/iT1Np6/OCFhEeXT6/YhqxdawKLuq3
ifDj47USLYoF/Uo/BeNOoiefW0WO3SyYpE5cYckWgc6uzK76xsJuF83Tfn9E
WKsyJTGilQWHm2Frh/+K4HVQYWb2Zxac3/dMPj9GjJuP58S9bGHB3fRp0rUJ
Yoisl974+ZGF4/PNym5NFeP2dZsQ+/cs+O2+f2m+vBj1X5wlTzSxcCpK3vye
ghj9iw5eDm9k4fyY9s77ymKYVQcEVb5lIeyH5+jLhWIMjqSc1mhgIVLpfd0m
DTEWbssZQD0L0VYGUW80xbBMLPbbU8dC/LWbu60WixHAft5/vJaFxMqR+S26
YtwzrDkWVsPC7UEX7p6lYjRfbBTfq2YhdWnNg2/6Yow0t3pXvGIh/aBWgJuh
GCe4a6obif/M1PB1nP/E2LZo10X+GxZy2nqlvFeJoep+eN0kYudPs/3YayzG
cNqFseqvWSi+MHf/n7ViZM8tOO9M+CpcCi/LbhdjvOLEwGbi71mT17ZvFiQe
GyTefST+Hptoy93fIcZy339zPleR92bfu21uJ4bb+98VXytZSGpLehj2//83
IZQ97v9/j8zP6kqX1Gkxzo3WX/9dwoJPxfqsr2fEUFxS0zH4kAWvJWO9c8+J
cd/xpe6fYhZcpQMHt14So/Pp06bRIhas6o9NDYkUY/WJ3OmTC1jY/p9ey+5o
MT6mZe6fks/C5kxBkmacGJ7NaY9k8ogeLnlo1CeJkbTklp18Dgsr+9UECXfE
0HdKyFbIZsHAtfuBR6oYDddjhhSzWFhs6rRGMlOMIc71W7PusaBRqDKuNVuM
qJnXBHMyWFCd21afmSeG5qZLa+anszAnPC7C/74YY4Jzd3UTf0oj1rs2PRAj
4to2FU4uCwqe01QUS8SYEyn4LiT+p359951+LEZeXPi9fuJ/YukWz8tlRE9p
TUtHM0m9LZq4zKZCDNscn9/jif037tVvtSox6EK5MinC89PXJLi6TgyJFzs3
KxL/XXoGieM+imHc2uqkm8JCR3Kv88cWMV53nlq4PJmFNplCtfQ2MXZTylyj
Oyw08rWK1n0Tw7/X4cSGWyyUZc2rC+KKUTjlR6hDAgulip1hOwRirJEPstoX
z8LDy0nWC8RivFVSVfSIYyHXbca3yp9icNX33z0ew8K9Dx/SowbEOKkzweNU
NNHj2qhDLsNiTFyeqXPuBtFrkbne0r9ixK7c3HcxioWEeVN+jY4S/ZtynoRE
svA/HMIOnw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mRD4H78Ev2A=
         "]], 
        LineBox[CompressedData["
1:eJwVkH9Q03UcxncKBOPwB3oqUYCJhAFZXHnEgqdScAFxDo4jOSLHHKPEH1AG
GCoJ6HIio3EEJIiCFlHGnYYyfiUMnOGpn88XxlrdgfxotfcUKMFCTlp/PPfc
88/zvO5Zn74/QblEJBKFOfS/Z0oym3u3M3w91Oy8xN2OEzP50dFvMxSkP4wt
ENtxaYd4Lj6eQTum1XS52jH4Q82F5ESGC+khA6Kn7JhfFpS0612GtrGb4q3O
dvjta3f64D2G2+kZMSVL7dgb/JvikIphLv3sTTeRHRWarFVFWQzu4xK3uCcE
vW2hR5PN4KswS08vEFyann2u9lMGqWKl0fNfQv3G90e7yxhqFEX93n8R+oun
yowVDJfGfV3Spgn3x4+CVTP0Kjqi6h8Qws/X1401MJBi1uBPBMFnLNX5GkPE
blVvyISjf53yl5hRhtHdsT/BRAjOnVUnTjLMTlgXPxskJJpKwlJtDG7KYhi4
Y7/i4pd7HzKEKju7pHcIr638I0nrylGs3NwpMxJ2HchzrvbgqJocWND1E47f
cf3xnCfH98rM100GAi/dtPryMxwm5bn2lOuEf+xtve3rOWyTEY/PdBN842I+
MgRwPFFawkc6CVniPXzoJY7nM1bpFXrCxc41rTFbONoSEk8VXiOMHOip7pZw
xEGXVttKWOe/7/Arb3K45KcUae8SEoa95E3RHJVJ5e9cuU04dbJvm08cR0Co
ca35FqEvIjtQJ+NoXbZ47/HPhLBG41RBqoPvRtYnW28QcpI/FmbkHBmNDW+o
+gjNYr+rGSqOR4UWsaaX4JOde2RHDsfacOlZ7uB3igzw8FdzJH+3wSh38EXO
sOmqUg6rOuWLEgdfbuPhQQ8dR56yPLXpCsEmHvrqUa3jL5/F6ekWwt3hohcG
LnOYtRavwibCmex723NGOHYeLN9TV0Mw+ZcGWSc4/pQZX+2pIiw3hy1PtXHk
v7i4OFlJOBapNUXNclRbsypCdISOGYleP8+xydCQJisnzDZaazeLBOjrLYEH
ywiZ7lB6uQuw7JR2dmgI57ts0tMrBHy45eiJ0c8Jv2ZXBi9dI2Des1XmpCas
3vjWijxvASen7N6Bxwnx5vt/2/0EPH1rw++xxQS1pnpYHiDg229SWvYfI1yP
jGo3BQmQlJQf0hUS5mem62JfFjAgN267eoQwZxG3PAgVEDhsVgU68n+6INkt

         "]], 
        LineBox[CompressedData["
1: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
VkhWzDBTpvka93inG62Ztx5h2rT+B6XCFx0=
         "]], 
        LineBox[CompressedData["
1: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
pTTshqbda9Ij80Xd81VnGY1NHTeMN+nyiCseuuXaY5rU76vzn3VI/12d/9uv
kvhRyqtFavNQ6HZO139Oo+Gn86Q300k8j/00Fb2gMTG+rdTThPQ3s3NVZ2po
/D0mYPVnI+L3m0U+a2ppPMj+8TmG8DcpHT/2qp6GS7nKhNNTeEgTTHpKRDT2
9trsrSM8g7s2PjjVQ0MSkLto6VjCpy23yvUnDZO+v9oa1Mi8Kr0uKPfT2JlQ
HrFZlYdi34BW/B8aKpc/5u5T4TEuPH13uAID6zYF+YfyZN6rWo0zG8kgOfDU
RXs5Eo9bzI0OFYbMwUnzm4YT/zvNKN+xDILUrQJ/DCX+BtTYuegxOLcy6LXZ
IIfvcqGtSpMYCG0DW8p/cSi+ohHxYjKD2dsPDToOcLCUbsm1NmZQe+jijMBe
DoMHlKwHpjPQHGf6ou8Hhwr9osa7Zgz8ckp8Dv3LYanPf3KmsxkMVtQfy/nO
QeFP7kV+LgN7Zx8jiy4Or7Mc5+dYMkgXfX7ypJPD0QU9dT4LGdDboz1cvnLk
fS4jUNuGQdqvkqsL/nBQj7GR/WjHYNLsxFNvf3No0uAy05YwuB3kdnAz4fVe
O6tWwYHBW7rb53Afh43aThcfODF442bVM4Xw+tJ+4dtcCP+r+IQKwrtlx2nN
52sZvLo7/vqPbg4B8QN++zYyeJlkPeBD7o+4W/HnZySDir+ST85iOOyMba7L
jWbw+Mr7qW8pDlG23TlrYhmUa094GCDh8E+tgUPRPgZlw2/R59s47G1POL3j
MIOS5g8zFD5ySFZ3MpdeZFC0X79a9IpDSquf7InLDG79DPSMruFwJHtPo+0V
st5e/E2tmsMx01u7LhQwuLF22bjlVRyO97x0XnmDwfWaY/nMMw5pJfSkwVsM
CtFitfsph5N7B34U3GFQUGzwTqOSQ/qSMdUe9xhcM9qxuaiCwyml6VkKJQz+
to2aYlHH4Uzd4uAHD4n/cVVa799yyDjtZbetnOh5rj46/A2Hs1471cc9YcDL
+Q0fU8shy+Ao/+wpA9UVxQNFhP+ckPcwvIqBZYpslyvhvxjZ7Fv3isGR0Zda
0l5wyF7QPWvfGwb3XL+/nUn4Lw1RkjerY0CdtHleT/hzj1jdSGlkYEHGrhrh
vZZ7YWAZzaBJXyc+rYzD3Q9+J8p/MjCwOGWWdpv4McTgL/QzcGIsGuxvcQg0
pd48/sUg6nhd9JCbHHTjPRSfyLB49W1kZUghh4RZzvufKrKIKIxb45xH8mHj
SL3FyiwubNDvH3GF5HNKddmzUSyqFR+fK8/h0Mku6ns+lsWEgIFPppc4uJ2Y
F/xSl0XVlNCYkec4mD/+MdJen0VXg4rus0wOip+LrlUbsNA+WFgZe5ZDuZ3p
p5ppLIIZTunzaeJvUEecgwmLjOPxty6d4hB2Nk//tSmLZzYGaz3SOThWbXns
aM6i81tFv+pJDobd+l61M1mMv+B9vjqNg4yuZMBpNouE4JwVIy9zaLHPOvNm
LguJ6pgrL7NJfUaun+NsyWJu8f4h8Rc5pGaPa3hrxeKYW5en7QUO/rXvQ13A
gu/zfjBI+O36j42qs2Vhk1k7pjSLQ6+LkkP9UhbfJddqZhL++l0veVd7FvYH
NA2/neFQeDU+4b0Di+zJifsLiJ6NMjKVDS4sXAP85k0m/C9v/jvvoweLO916
V9SPEb0qYsO2IBZRw9P398UTvZaZzzxDWbzNkxUVHyR6t7pvEoWzmLYibF5o
HNFXXn9OHM2iKdX5m7CP8O54MZY+wMJyvKJXayyH+a9vDf10isWg8d555aEc
dC7FlmZlsDDTemPtE0L+H700bHUWS96vJiyRCSY8Bm10RTaL51zpKru/CX//
lYyoHBa9jQrubCDpL29DV83IY2FU5e59MIDw5VoptOez8Lybt2WKP4l3rNyT
zEIWR3J+BlZtJfmxqj7a9SaLw+Wha1N2cpgw9Zy5QhGLUWk/AmZGkvsHt/GP
i1mc8IvZ0xTOQVo/8+LO+yw05g+m7QkjPFcH15mWssgcuT9vMuEv2PNylLSM
hR41rKyG8IYZe+9dVUn8ODSyfdwOcr+M0VzypYICj2P9ZduJ/saezvIXLMxn
jFXZTPhlDiR5T69lMe+D9tyb24ie5uKFck0slhuYJC3bRPQmKv0u+8oi4LG9
afQ6Ui/ejXfCu1h8Sau11XXjED4re7txD4vQravcnq0h+qg5raf7WMQor987
2pVD9dxNpWGyUiRt8K+76kjOUzYNMxohhbLZl/aVDuQ8tteIkpfi+NCQgX/t
ObgfPZLhpCJFRn6Uge0yDp8+PYiepilFfm9CZLMth5qyOHOJthSmrxST99pw
uJ62kk/XlaLofOr5KSDn+WtedNSXYk6Y2p1XC0m/tZauk50sRemSUy9Crcj5
Y2+OKjWUwlpTq01jAYer3R0f2qdJEVF5T0/WksP/ADKlykY=
         "]], 
        LineBox[CompressedData["
1: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
n6MCORRbDLv/Zrox/vmpFKsDHHQ/9DwsU6QY+DLHZSiIQ8rhT8rHmc60iTco
FB7mMFGlIXClAkWFpuDVrhAO4fcrX8nKU4RlFjsPhnGonqH3vUuW8WuLvD9+
jMPBOaKP5ZnOjMy29pSNYrzWZSo/mA6V65/4evkEh/p1h/Y3MN6jd+oDtE9y
CN5h8jqP8ZrPU/hZEM9hxqEB3QTG+9DkiljdWQ6H0wI+r1amOFRCo52TWD0L
9MwMGf9C89kT2i9waKj6mjSe8RdbF6r8SeGg0+lp94LxFdrXzZ91g0PzPxuK
VvxfV19PLMn/l/HbTpKbPZ5i/lpnK/PbHPQ3NfiNYTqc7/J51bp8DhGhdpo1
TKdzvH5ti3jIYW6dZdxSCeYvgrUufnzFIdZdx9NymGD78A71nY0cFgj4UvW/
7F4Izcn8+YZD+/FryiOGCDKOm+bLvONgmq1WX/qb4Orp1XWLOA78gKzpInaP
uMufc6wWckiQenl2yg8CjaTWt2s6OJipnOz500eQmuxNfb5xOGspkVHM7qXN
U7N9B/pYPzhVilzoIVC92tsb2s+hwzvU5UA3wTst4wPjfnE4dxB3nbsILl0/
NHz+Dwer2MHxxp0ELjqPI7T+cuhKKfKZ1EGgfEtCOleER0+pY+L3nwT/Gdid
XijKY9MhjaE3AwTn8xIUn47iUWvyzeM+43We//ayowSPBT9Lay4zXsUiVa33
UjwyC04ahrJ7MvFhlmG/DI8wg9nDNr0EThbdhSETeXzr/O05m/HLVRiZjZXn
mY+qfibD+E9Xl9pqKvMwne59oYnxxTU0ejho8uibnDZvq5Ag5nCs5svpPJQn
XjNYyTNfNdOarJrFM/9wXWc+RxARnO+1Uo9H3PdsdQlCEKSZsN3GmIdOXdHY
fz8QeO+19zdbwcPj8EvS94Zgq6qEQYkdjxN7Gz60NrH8Py3tMV3NI3fHm5bK
RoJNU/R3L1jLY3jtu5fnXhM4VowVGLnxuKQvLDF9QWDvVzkvz53HY62Oe5rP
mS9VPNRv6Mnjy+TuvLF1BMt8O/bp7+BhLPEj630NwRKFdONbvizevwPpT6sJ
Fpe5/Jrtz+PY998puU8JIFd7UHsvj4YPIolhzMcsfBhqmhXI40+T6CnfSgKT
bSaDMw7w0KgbHeNUQWA8sfdBRhCPuzmSk4X1BPMeZB3SOsxjd36tfBPjm+O1
xSz9KA+9e7HjHzM+g/FKwxphjO/+qjE5jE9na+TRqZEsH49fi0TXsn4dZ26R
Es1Drersn0DGO/3ewAjVWB4tNev6PRivurR32OTTPBxftXxdVEUwKd/6mMIl
Hos/fm769ojV03VoydnLPETItZdt5QQTJQrE5a7weMB7P6stIxi7UTNqQgaP
eT1fy689JBAVE42RzuGhNdz37/pi5hsdy06NrOAhriIWVp5L0J8Z4Vv4hGf3
eticc8wX/v1ju9S3mtUnRfST720C6fTGwcbnbF1D1EIxm/F//+Kd9ZbHnRkj
h/2uM59qk2Pp2spDQhhya3Em88GXBCqy71k/3xjhqpzB8r9Y5HVwO1vXHVFS
eZX56KTKbEOOh2vXUd+LaQQOHdGRVMgj77bIlIArBG5n5M3su9n6HJGgKSms
n/j/FEf18sjvO6Ldy3yu38LUvqLvPCQLht9WXSIQxHs+9xtg9XZe6fCb8QS3
a2dN+83479xc0cB4wox7wpoHeYiOlVp6i/FExxS4xg7zcPLeZhHJfHGSkbnc
gJgQvyZrzV/I+FIiR3XfFBdieWCYgQLjy2itqXaTEiK5/qN2D/PV+eFOR2pk
hLCIuKyWfpmgvmHHl2RlIaK6JklKXyB4M9Og0kFFiBabQFHKfHtb8I8U8alC
6F5tGCo9x941mkedArSETI9P9e5hPl9CcLZssYEQiuVSrS3sXSBTveHirzlC
7Ji8vakgjkBBZWrgrXlCPBBU1cedJNCsvKGjaCqEm3Z4pVUM8/XyZYlfrYW4
njB06+ZxApvtEQGpNkL87nTJijjG5qfEdoXTciFW2BRf3czeLa6ejSNK7YXo
GQxMkg0j8Cy60LrHUQjLdY2nO0MIfMe6Fc5cK8SZ3LmxVUcJDhZ88T3tIoSx
V09I0GGCEMmcpUtdhYguswt2OkQQuUmgMejG4lXODtQPZnqSazKU48HiFYwJ
kGTvpsRRIs2eXkIcebHd5/MBguT1lXeUtwvxctZTz5L9BOnZ0bEvfISYFj7d
7dw+gpsj7LeF+wkhaAvfEMDeYbkiW6VjdgkxN2150xkBwf8ACTuPWQ==
         "]], 
        LineBox[CompressedData["
1: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
ihHBQh/9yFjGGtf2zJNj/A8uEfaD
         "]], 
        LineBox[CompressedData["
1:eJwVkHss1QEUx29ptyZ5tFjzjMwjFtY10+QbtTxSQ6i2SCgMU/TQO6JUlEfC
HXXbnUsKpTJ5pCHMe2RdJqqjtzpMomT69cfZ2Xfffc5nO8Yhsb4HF4tEImth
/m9ZX0wkNjDUIo+OXe4hyCMsT4XaM7TsMqUt3QSFLN31swPDgW9KqItwTzmp
GrORsa8sr3uhk/BAM6B/0omRGFUQoS/kyguGYXMujI5P8gL/dkJDcEWKuhdj
/9vKJW0thJqe6O0jOxmbO7ys218SqpzXaZX7MIyrPu7qbBbu6RcV7NjNoGu6
8t5GglQpfZwWwgh3SHIZfE445n3pnepJRux1n3NfqwiHG7YUD51meJ/8VjT+
lBC9flFM6TmGXVhK148nhBC1M7MeyYwpx2f6U5UE77YjGlduME58WFM7V07w
crAZ2JPF2NNb836+jOCmGJda5DAca/1URUJ2Tg43a5My5jJS9y65T3CcMh3P
LWQMnzZJFJcSJCHvH4XLGPWH6kqW3SNYbQ7ctFTBOO80MaNWTDCr0FV5XcII
Nr9qpKEgmBgq2xT3GS4rTd20iggG6TnXj5czGgPNZvsF3+q/vn7bHjEsh/Tu
Dj4grIrS1NV5wrgRoOU5Kvg1hrpGP1QxfvWJp8YEv7jaPSqljtHUMbl1ooSw
2Fxs598g8O6fvk8L/vmcpl+mjYyM5uFbc4L/Z7xzUnMrI7C+9bNY8L+zkeSr
9DNmygvTDO4Shm9PBvUPMIKssu3XygjKFRWmciWjuTh1xOIOofub5UPXEUaW
LN5WUkioKzZqTfzCsM7yeOWZT6jWeZPmMy706jjrnUd4nCL1NWbG76sSs4Bc
Qmmo9siLn4yWi0YJB3IIRX198owZgRdpG4ffJMhcMiKD/zCyz6i2R2cTCh7u
sLGdF/jZhbi4LEKu0fLphQXhn8em9RIyCf8AU1x76g==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.52}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"f(z)\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(8\\)]\\)(z)\"", 
         TraditionalForm], None}, {
        FormBox["\"z\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0.516735933695249, 1.012580720667033}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.667235103227281*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", "20", ",", "10"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "2"}], ",", "0"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "2"}], ",", "4"}], "]"}], ",", 
     RowBox[{"fsigma8", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "2"}], ",", "10"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<z\>\"", ",", 
      "\"\<f(z)\!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\)(z)\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.654384544240693*^9, 3.6543845516007547`*^9}, {
  3.667224568602112*^9, 3.667224568898932*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
rxKiIOVYLLs8lo5+fb9nS5ZSkN+c4qwdSUfY9YJL/9ZT0Nle/WjPUzqumbz9
e3sjBefVjyZ3P6FDTyPgxcRmCigvG7+5BdHxe86Z6jEVCkZMO5Z9DiD5fvlL
lbmbgl/dw9FqfnRsutNTY61Jgeueq8UtvnTwXSqx/K5FwfQr1pDjPTo+bQ4O
oxygQMDs58Y0Lzr8Frtsu6BHgV/BrSPHPOm48MusrucQBQukJ+15HnTs6NK5
cuYIBY/v3gkOukPHwsItfB1HKRAbmE1XcqeDY7A289ExCnLbHgynuNHR0LPs
qtYJCvi9bx3kEr6U/xZI/TShQG7T4nynR3Q8mfz3Ld6UAu2mBNW//nRc9/95
78w5Ci67acd7P6DjmCRNXfQCBb6yvSuFiJ6lOxpjnC5TUH5j8RwJwj9WWnZi
4xUKvq/84PLKm/ht/EWw9yoF80u02bJEz4vrcdcOOFBwcKlzmzLhX5HkhKVu
FNSk974/5ELHpIbNWLk7BcyzzlLfbtHRXW323u0uBSJzljw1caLjFU1vMfUe
BQYnDty2uEGHtPzKgU9BFHwb+2Bwx5aOdREFd4++paBVzeXHp4t0zNuUvo3/
PQW/e5dc2XmBjpGcdyOZHyiQuJ/YnX+ejvdtTwylPlFwuq2vtPoMHf6WvgKN
aRS4eLjsOmZKx9Ux1+x7mRSErRdLbj9F5lXMQpr1hYKuWzqhQyfI/L8+1Ryd
T8HUmn7h/4zpYCsf8TP+SsGqChfP0WNkvxZAY34JBXscxH45G9GRbKDG/VJG
8rP849V/R+kI6tkYZ19JwZ1Cnb57BmR+/ltzSraGgqgr/ceFj9BhNCkm3FZH
wVd5jVs5hFfVf36h/zcKbFLx78A5OsQk/97QbKZg6V7d+42E/2c8b/1oK8lv
9WFRM8KfUdr5+HQ3BUuGTNY4m5B9MptopvCdgs8SdnsTCM9eZ6N/pVOkP+5h
Hgt16Bj/j+6u/4/cd9GqPU2bjtSL3lMNsxQ462xTOb2fDjn9jD9dc6mgidZR
YrXoEJKS/MlbREXV69kD6rvpKFmSev2WGBWe9+sie9XpcJ+nz5sSp2LXf+G/
vXfSweXeZs9bSUXC9u3v67aTfBT3j6yWp8K/4oqwhTLxI9vFKnY9Ffs+br8s
qETHwY9LhhU2UjH5hC8/aQsduSHa1K1KVNicibD/s5EOp4c9F3NUqJDVsq6I
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
WDi40+B/6PYCyA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUl3c81e8bxkVDKoWSFlFpmJUG4UIlQiGV+maE9jSyyoiSFkJlZ6clKzKz
997bOcbZ57Stot/z+6tXr8957ud9Xfd1358PaZsbpuf4+fj4Aufz8f3/38Pn
GC3FzOOaDSVfLgh08EBPPWEztEoFEj/0bfjbeBBf1BGQueoAbGTaz8xp4UFR
dXlS9CozjPswTP7V86DWvDMteJUdpA6IqP8p56E4smzX01VOsK+0WfYziweV
Vtf0Tf/dQsE4R+hHBg9vBBUViqKcMX+zy7zvaTwE3wrb+FXKDREPHk/z3vNg
e/SamImsJ8r0skZZiTz43n3s+mjVPayom5c7HMpD0drz2Sfy7sH6T2AmNZiH
yRytXzL/3cdbudWplCAervJ+38iP8gOeKCYMPuHB7D/rCxyph7hodPJp7z0e
AsbVkj4XP0SGB/VBjw8P1c9WjNw7+wh/P1zx6fbmQaO61nJdwmM8E/Z26bzD
g6ttUhRz/xP0aQo5dLjzkDHr1ftp9Ak23Qi92u7KAyf8tITP/ae48UryQpsz
D7K7dp04IhuAvKaUs61OPFg3Lw1dXRUAg5uuIZtf8BB5hdVCuxCIibgb6XJE
zxXf4Qen5gYhse18kxLRI9jSlPzFLAjG8yy5O4meJMnCik1JQfi7+/iivQE8
6Fx9O/r4dxBSLhpuVSf67iy4L2P+4hnm1KudO+DPw6rjDtpFtGf4MLPdV8+P
h+x4K+uNe4JxSmlrnCHR/01DLeZbVzAyglcOmBG9dk5fVz1cFQrbU7/MzhE9
OwWC3TNuhoIWfTdPk+jhD1bp66sKxcVh4fUSRM+rj25Ris7Pcf3KVnbtDR56
WQJS7a0v4O5heVf5Ag8pbsleM1tf4m8Jm7bwHA8ugvoU2bsv4TXfzXDEhofl
sgFxbkphuB8YsvKFJQ9Hz0pslHoSjmdx1R/+HOdB8lvePb2RcIjRjot1HCP+
elqM2atF4MW2EddUEx4eRcUnlzMiEJU5s/+sEQ/mcgcXEFchNfnojZoBD5vz
6BdWvoxEvLrE0uX6PJR3yW+9fDAKryt29FYe4CHkfNPDkKgobBMqRqwODza/
7VkFP6Pw4YhRkpsWD8r3lhvQDkdDOaRX6JgmD/9Ec94tjY9GZteFm/LqPDTG
nVqsOhWN3Wt/d8xT4yFK+e9VG+MY5Fr77BvaQ/r5Jabh8esYqCctjfu8i8zH
EW3FT7MxeJSec9z0BOnvwEjA4PFXOLGy8Mh2Mx66rvh9XfDhFaQ9Sg8tM+Uh
r/yc+QeFWOTqNag2/l/f8NtVfP2xoA8Nrzt8kMzLul1RSXvjcUBYmKatwsO0
nZ+hml08ljmJDa3fwcPZ911/GwPj0dcj0f1PiejZ524xSYuHQ9KG2kI5HhrM
v0gaPE9AnLpqquoGwhOqH/fteyJmL9s5bxfl4c9e6p+41UlgIu6pyjIeeAOu
J47tT0L78sHEPcI8tG1OWZQdmoS3RSfbNIR4qKzH+QuFSXgeEsrSEuThs31X
sQQtCd4XW+YcmM9DTP5859t7knFC1ED5MD8Pz6xjmuWtk6FNf3DIiI+He/N2
yw36J0O+oNzSeJYL57cN9wPTk7Hy2RznY3+5uHT0HEWrNxn85zWfnpjm4syv
v2o/+F+Dq3Y78dQkF0fCQ58nyL3G7Fu3TbckeNDWlP9mZvYa476PSj3Eyf4Z
KTs834P8/kykld9ykg///5Jykl5jdNf7vwFE72qFn/8uNr5Gn3Bh+Eui95+z
zKc6qRTUFg+2pSzmoVbortSz0hS83iijVzeXzPMOzV9rBN/ChpOivOw3F8e6
Oo40KL/FqYrcBomfXOjeufbG89RbGMfUXpb+zoVcZZQl9e1bwJiTuIPLxfip
P9XJRu+wNktp1fExLpizwRvMnd9B7KlWtsUIF/0J2zwXvnqHRedNjp2nclHC
PbXz6rd3mFrp+NRlgIsndz9Hbw95j67b2XMiOrjwkjWeHM5/j0azqpj4Ni4c
6uimoaPvUaHQve9dCxcnV6wUnNj1AVlDU7cKGrg4nJdqk2L5Ae8+C4lV1HGh
bqVbeOrBB8Q/W5PWUMOFzJtbDgXdH/BsvwZrsIKL5UeWNFybkwr/tUce0Mu4
WPAzcbPUtlR4/7bc+K2Ei+mX6j7NpqlwabxRMvmFC456e//d26m4/trbck4R
F0PUK3t2JqbivPezPwsLuGj1EwgerU+F3d/S6sg+LsrlIjnPf5PfM4+Evenh
Iqd5x6FDkh/h0tl7IaeLiwAmR09e9yMWC2+daSR6z/O/Pixy/SNiD7oE04he
cZU1R/oKP6ImS6xwRTMX+XV33+YopmFtiKGoUzUXa5Qupxs0pqH4aFGBci4X
fvsO7dAcToPZg8Wmejlc/Di0MVN5PA3MotN0q09c1FoPZq2QTIeo4oRIYDoX
7sGmn4eupcNusfIF7hsuen+rfXFckgHBmjiRtxGk3/wSWuelMxDN9y25JIyL
DOHfxea7MrB9r6Z6zwsuHm3+WKphkYHTr3vPC4aQ/u98sl/ZPgNfB7f8lXrG
hY3WpXKZ+xnwFXd5tieQC7VTGyoXfMjA+/tiBecfc5F8ju/QdHEGtAvPmng+
5ELUYaCK056Bjl8fac8fcOHpmac3xMjAZfnZ2x/uc8F69LKm5W8GZm0NRSp8
uTjx0ulw+bJMhERGJPff5aI0waQue2MmtrQx9v3y4kIxTdHwzd5M8Nud8abG
cBFesKgh0jATT6vkSmajuJhbwzAKsM6EhNyfOWsjubjZUdHo7ZSJhIBaHdVw
LvR4Xs3nojKRe/xSueNzLialfrUpcTIxNpJcxXjKhblvf2/Z4yyo88k0tnpy
sYwiK38hLgv2C05trLrDRY26vYdQThaShYPc892J/vF5602Gs7Bs3axsojPp
3yWlc4N7P2FMtdfr1nUu2ivcsu8e+YTV2iKdl66SeZApX7DJ7hOO6unJW17m
4m+f+dsrgZ+QeyK7W/c8F4NHfL5Ojn1CgGPwdglLLl68q9eK+vMJZe41Dxaf
4eKo4MpgiGRj8i7fIN9pLopL3qn4qWfDJuj6I+ZxLlwlx+9vNc3Gy5dJlIFj
XCjf1uqqv5CN+pj+3a0mXMSpdLiJhWRj94fDI3lGXJx+JlWXnZKNK1l3VT8a
kH7xLq09XZSN2PzPgQn6JF+Hs67NtGWjs/Tr2MtDXPi8ni2KZWZjUa2s+pOD
RP9c/WUH/mVDq8Ui2Hs/Fz+tQ87Sl+eAK/hgNPcsF+8LBzIebctBmnfOyiwr
LuxWb5mrqJUDp0n64VQLLta6OBxvOZ6DPTclPFP+46KjrSDZ6UoOpul66fGn
SF6fmujnv8jB3a43K18SfZv5bgfocXMQmH1l1Ivws8YaJGwjPuOt01cPEw0u
4nUkLs9P+4zrHKl0g31E3yub/DcVn7Hdznj0oCoXdeYTFt++fcbnY+mH1XYR
vrr1CR6HclGxw3HlBgUubqQ7KoT9ygX123jar7Vc8NSpbTWCeVhS9p+DyBou
rlYfcf+zNg9qz4t3Kq7i4uLQ1irLg3kIUX2UfWEFF7TLL68FncpD8aKvLvfE
iN7xuctLr+WBO3BMNU6EC+slFOtNL/Kg67OuoHcJ6XeY0YKTb/PgaObjMbGI
vC825n/wL8pDrCxdc7kQmd+PW8zyWvNQP2nAt12Q5HPfi2k2LQ9jUx6lfLJc
dFYKxK37k4edWwWbZTZyYWZqf+jo0nx4mwcPHJDhwviSYWjGnnysyUme9Jfk
ovFXrtqoQT4u0pTnvyP6DL03U1dY5+PTinyxhtVkPl7yK7r558PYqUlRZCUX
WhWfq9CTj/vbJ+3Cl5I8SW/6U+9egK/v9Fve8HGR+j44bjagAOp9bYN1sxzI
7+XTU04owCMhSw73LwdbjvaFhtQVYOMlhwU7pjhY7/FM8fTaQpySjdTI+85B
jOC/9sfKhUg+vsmg/ysHa0Ov3i48UIhf9z6az3I5kHh3qHr9tUIEjJQ56rA4
EOmZOUsvLERZLOdN7TAHQXZXBFe1FkKk2TmHQ+FA+Ft36mFaISz/8VUID3Eg
tCDrzwfhIkxarKCY9nHgHywdPyRTRHL1iuvUw8F8yUA9kT1FCCnY+udFFwf8
uy4/d7IqgsIaTfG+Ng68i7v2JTsW4fbh6g0zLRzMGhwc7npQhGo30+1SzRzc
6crwXxhVhBVv+jW1GzmYtlmvtC+tCLbd5w1t6zlw5T3tuFpehGNKyZRIJgfj
bn9ux3QXYavZ5atldA6c5l2SaeYU4Z+r4iRrjIMfQZ3Vc+Z8QUf0D1/RUQ4K
rqZjVPwLtPe/uytK9D7Qe5JdKf8FHxi2XqJE71o+ncTH5l9wf2eHu2g/Bwdv
fPBakfYFu2py7EXbOaiX1YkMVSpG6K87VqLlHKSHfuy8r1YMvohdFqKlHLzg
XyfqcrAYV8E7LVrMwdnBCf9T/xXjwCOrE6IFhPf5B2fJB8X4JaVjJJpF+jdv
lWnKYDGOGSzYJ5rIwTxHv6fhzGJ8+fZlr2g8ByzKz+pHv4oh98J1t2gsB58K
GnFNqAQCVOZ20SgOIrap37ZcUYIbfvFKohHE37A32UfXl6BP7j8F0TAOzs1f
+UNLrgSHWsTkRF9wcNjpnsKO3SXIdK7fIhrKgdLw94sbtEsgtfa+rGgwB8uN
rRKXG5YgVrN7281U4n9h/dC8kyXY5lvV7fyegyE5tTUTZ8n5qmw/j7cclIe/
PsG4WgKNxckq91I4eLtgRXCPSwmqjJ8PP0om/Rj5KljwtAS9PY6aYUTPKROL
Ax/CSmAnacuJIXo0v9R6xSSUgGtjGpEUw8HCyKRx79wS8HGUxzOInhjT/0YP
jpVg8yz3QwPhqy6p/NKkXgonmYvrBHw5SK7/O/r0UCkSh57wi93l4H7XDiFD
01K0R6XTZbw40OHGmFVfKMWulX/SdW6T/ku4MIuDSzGxKEDXx5H4t+GDsFd0
KTbXZMgF23PgpjiyUyOlFOZ+Xcvib3Cw+8BRz9zCUnzmk+4rucJB2o3NYhmM
Urj/zrwxx46DAHeLvTd/luJdRreZiA0H1+6HWCjOlqLvxoyqtDUHhkE1PhzB
MixSkJHabsnBtsh/r9+KlUGdpTtX+wwHgsm7Gi5KluHq6ytM49Mc0NOu/JDd
WoZou6BGa3MOKvPjVo7tLIOMjrnaf04cJFZ2qSdolqGT8TDxpgMHPi1LbM7q
l+FhYL6w302St/79D6TMyqCxm+saeZ0DyR8fWyIvlSHR19io8jIHYev8z4eG
lsFBcuX4GlsOnLcUPTZ9VYZNFXrW289ycHznr7Rlb8vQc8W9VteKA1F96z9P
vpRBK3cgxv4/Dp447Q26zyqDsFnioapjJG91jFxnrXK8ebg93OEAB5adkkMq
BuWwULYV8NfhQINqNvfn8XIs6wq9Fq1F8jRefOTGlXK4bJzUrlYn+ZAJH7nw
ohwHvxSx1u3iwFShSVA2rhxT576Z7dzJId9R8xRH35Xj/WKZL3rbOeAZ2bta
l5RD7PT9EEcFDi656S85xSkH9ZeBes0mkr81IhaW4+UIX7/31b8NHHAKu9/b
8lXAxHAj/24ZDhSsY/9eFKrAQtdl566u5+A6/0XD68srUJLwtypekvQ3USnK
UbICrk2MbT1rOfiuO8F23VKB9raCd0f3crCDWbTPc0cFbmqMDz3eTfgf+z32
Va/A4tdKy6tVOMhWONLnr1uBlGWX9OYS/ommFXIBxhU46B5/R4vwuy9Pqg2z
q4CH0Yqxz4TfK7psYeqTCnB/Tn96I8tBMR6fynxRgYcWKqyxjWR/Dpu++Rxb
gU1V1yRliJ57ssN6ZVkVsIyg+EVIcfDoI59/d38FGrUqTz6W4OB5icZ8AYVK
pD59NnVViINO23knBPdUwmCiVuGNINn/8xuSlmhXgm4912ZsPsn/4TMHJY5X
QkrFpdZCgIPYNvd7Ch6VCOw9E3nkLxvDt3TadzyohNyBF02PptnYICG0ce+z
SlR9aBKommQj+Ux4mU5SJf5561zFbzbejeXwmzdU4ubmLRrKPDY4D7xMLboq
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
+X018K3idtHT2RjrKTqedaUGI4fjMoIS2SgoOL6t51YN9JROJxTGkzxEDkjM
cavBe1GhD8zPJH8X+boPB9TgZK2N/94Ykl8WbPpyapBpIHeNHcHGmz8FrvMX
1OLu8RBZHX82LnYbnlNcXosWtUOSN/3YUM3v0z4mWwvlJeNib3yJ/w9m5oaq
16Kv8eRfnhcbHEFtv83mtdh/clFb2EM2vjK+25+4XIs32wpqK9zZeFRjftLJ
oRZj4nalP+8Tf1/clyp6UovolurkQ3fYGLAX+zv0ohbT6a6xji5sxBu97RV+
UwvT4I0Rb52In8vzo04m1ULI1NNnzJGNecESNw9+rUW4s3HeBgc2KsVv7N5Z
UostoWs5Z2+y4RtQIbipthYVOSOr/e3YOLZkTcuKtlp8DnR1j3rGxlJ/58gF
A7WQ5c6p7XnKRtvChuszjFq80vOWkvRkw2LBw/nU6Vp4TL9J8XlE8uTT2dgs
+B1Tp+Rnyh+wMSy8NaJ8yXc4pMYf5iP6rgsO7vi87jssLucN3r7Lxl3+g7b2
Bt+h0dgrYXGbDe2Hb9WtTn3HF6VLViGEn59vnM/4wnes9+QmNdmz4T0dE7rz
v+8Q3z176BDhDZkUqpkJ/w7uR9k7apfYyOTWKj9nf8cHF+s+fjM27titm3Ib
/w7pZpbiHlNSn32/wp6vDv7Kt52djdkoZ6hYGi+rw33q48Xs42y0DPn7r9Sq
g9nRmP2t+qS+NeOcmG4d6mJUXizSY+Mcdd+m2WN1ODgnq1tfl43B/tFiqnUd
tmZ+u12wn43RLuOxzz51EJNlxMTuJjynEwvDguvgccdhjKJJeDrm+z5/V4ep
lj9YpUF4TlmYuX+ug73qI1/THWzMactUcEirA+2ZSKe/OsmP8aKfVvl18DZc
YrKK8Hk1X843/laHfaZWR84Zknk0Knqm21iHP+Zp+8KPsrG4UcpUo7sOyTbz
NHoOEz3HHNYqDtfB1s5EZRXR87quiruSV4c1/8UonDvEhkztnaez/PXwe6y3
pOcA2Wffer5WKNbj+gdfZrcWyR/3Gsd/ez2kh1nVv3exwSfxV+7s3nqUrz8S
v4joabGS9uGZ1GN1nPD1A9vZuDdjYi71sB51yZ6cOGWy77bXz7naXo8tBQ9G
XGWIH+csdqhT69E7298QuIrMtwfn6gy7Hs/2ISVxBdnf9PlX9ec0gFo27UBZ
TvbVDoXm3uUNCKy5M6a3iI251dc4+1c1AGJdzVZibLiYpwl+kmsAy1Az/Z4o
m7zX9ms5bm6ATtPE7WRBNtolvU3btzRgRPyUSfV84ld8o73WzgaEm2RuH5pL
9kfT+WiB/Q343XF7XJKPjTibT4XXDjXg/YqWti0zLMj84XU2HG2A4bltWUf+
sRDou/PXdqMGBLEzdRZLsiEk674w7FQDbr6eClCTYON+WsVGPvMGHN6vTTku
TvKgu/CAjVUD1nEeqjosYaPH7q2zql0DevYL16YQ/hNzhl8GOTYgi3N0RRPh
rwjanPDHuQEBIf62o8JsJOfmDpQ+aoAeV3L+NgE2Hgt36ZuFNCAjdL12OuH7
Ey53Mf9tA/x1rvq2EL4balfc1n5owDVeYtevKRbMTk2mshMbIHdwu/P2CRY2
Ry9f9bC0AX4jB5IzeSy07D3J/cxtwOVDF9ZmD7Aw9W7wbepYA0Q//3r2p48F
udlbBrmTDfgi4vVTs5fUzw9KqOVvxOT3pKKcThYEd7Vd5S1vxDPjfxZ5TSyo
hF5aMbmyEcqZLyr+NbBgPDlexSfXiEZJeZU99SxEZkpuWqrUiBXd+tP5NSxU
SHzqWKHWiAKt3oszVSxwbmt4yW9vhFWEfa12JQvLWip3bt7VCAG+eeruFSzs
2naapo5GxF94HVZYxsL5AMarPTqNOFaqOJevlIWnP111dfUbobkpY/wY4U06
LjJuaNiILBfV66+6id4vb6JPnWzEjsrPlB7CP7VQyeS8WSPSJRVOyXewIHsj
d94V80ZsuxxRe6WNBbvNPdZ3LjdCTSAwa5zoC/K5Lu5xvRFJJmLKexpZyGH+
K/FxIHqjn0Z5EH0Cn1evfXu3EYo6954vriV611kOFL5ohMIjG2vFcqL3Me9F
ZVAjohr7O+wJL2fQHY2hjZCVO2OYVUz0RUVGUD80YnWRoaZOAQvNMtRz8782
Qmpm5yKLLFJfyqbz8EAjRO+I5L78TPrp/Nvr5HAjvKseq3XEsnCy7YnGOWYj
hKRno2ViyP1BMa/tfjVi/tcx//goFjSX0E38hZow+7vnUnkY8c/eZX6oWBPc
Dp7qEX3Dgme9UMb7pU34F9R4wiiEhabnm5alrWrCn20VWv1BLEyys0tz5Zrg
4rE3dV0gC2uOHr5Vtr4J4005G66/ZOG6yLWmVrUmjDl8WfrnOQsx+cszD+9o
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
zo6j63gMFOdyt7ZnUhjrWRSvR3iaXJ0+7s6m4Ffnn/WD8MQk1jpwcih8XWD0
qPwnA8u2ZZ/87lPYcuXHq0jCN0Ehy3m4gMLzgcfNtt8ZhFwId5MuoZBYtrKv
t5+BX5CZj145BfuNWDCR8OmVFApKKilU545Z1UR4OOLZh41fUVgi+9LiFuHZ
4z0SYF1HQb51ndcCDgM7h2en/ZopvHO3vGPDYrDUaOm1EoaCeYj9tIRPDAzi
la0NuOQ+x1eu9+5goPt7SPo+n0L/Rd2jy9oZoq+n4Rl9pB9ujTZ9/MhA2so0
6PpvCr9LcqLlmxiMfzBnqew/Ch9WK5Z9a2QwRkFy4MIo0fPLEPaDBgY/2l/7
nhtHw75p2zrrelJfj827/WRpFPH//YuuYdBZozdDMJVGlP8+vZ2vGbTqyH7y
/o/G7uHmnTrVpJ6XxLEsJRrLzhpf+PWSwVtxk91uFRpTJt4rra1i8NquWO6z
Gg0qRoGJq2RQ+ejGO4eZNJ4qnlb0qmDwVCXwQvNsGuta3hUMEJ5Hpxw2WGvQ
MFKP8ql5x6Cwe7nkW00acw+aayUSvlwz1cr182n893Sk5+BbBmkTu1Ya69EY
2Ba4Q6mOQfSNPQv1ltEojHS32PuK6PHnWl72ChppH2eOW0H4zuzQzJ67msaV
OZ8qJhO+o7PZ6tNNaRx+ZrP8YTmD3XkHFKUtaeiJ12hJPGVg9Or4H/YuGjkO
08alFTLQ19rxxMONRkJGc0XAA3IfF1YFfnUn9emLObWxgMFsm3+iNm8a3tHj
BkV55D4+h/a+PkJjXnl/j3E2g3Eme1PNjtJQmpx/Wz6LwWjaepcXx2iMc9q3
g85k8N1Lqq3kFA1Wf3fTpXQGXwdi3mRE0Lgz713F59sMqNHgNPsoGmu0/ghj
k4m+ZA4cn3iRRruW7gzbJAYCVWfrshga/vN3WEonMujTspzne5WGjHZUUHUC
+f6SlX9n3KCRrV2aFRLP4JepdktjLI21OszHFXEM/m6Zlns2gcYXHSXJwZtE
L84Tzhkm0ZhcH+s6LYPw7/vhSN2mseLmwKq2OwykAqlFcWk09u6ymRabxkD+
ysuu4bs0noulmhRSGGi8CllRVUjjgGKwmewtBlpNB+UCHpL6femY2UDy635x
YTQf06jOWvr7Ism/ZGjVzahnNGasFBdPIvnXLRgS29TQaNjlrjn+CpkPNw5n
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
FveZ/iz8D7n4Jf0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
FtAeMOEYUmXzeLwdmUe6bircZ8K6JzXecrYdUpPhZzM8mOj5G1dZxduBar3Z
9unbTJjIhjK2CXbgdoyV3p5bTDTCT+TNwg58vbH9LF4woWdzX0lYvAMfNcfi
nzwn8/PgxrEbUh14w/eB0eLHxN44h2uDKzsQWG2nJPuM+E07npm1sQPupj0Z
aYQ3VVCnQ065A46rgqf/ehO/N2v8fratA1YjhpqHHhG/ndbsOafVgYMuFaU9
hFdkYrxssXEHRAM+N88nfINzL1sveHYgqfLxmIkTE/+xGp+6eXVAfVDNqsCR
iV1dCw94P+lA1TSlZv1Fsg/SH39++7IDI5s03/08T/gu3Pbvf9eBtc/GLAOt
mbh08stB9scOpMVF1vy2Ivna/+vvn88d2Jd/RN3Gkvgpc8VROq8D1pw4CdXT
TMQ0ndU1buxAhKFZTd0Jkq+CN//OtnVAwYFffbsRyfeH3qxr3R3IuZ+eEGHI
hJG3yfrnwx3oTFv4wNGAibvXX/ZGMjpwoSaH26zHRJJ148uPnA5MUe0tNY6Q
vBgs1Mud6ID3X4maGF0meHcf4a2e7oCkZMkuoUNkP218/LVztgNxSlcSrh4k
+1Cy7CqNtxNDr5qy/5oz4c07b+OkQCeqVmhOOhDeNO6egfkLO5ESk6DWYcpE
f++tYHGxTgRtEL2ufYoJ4epsgzXLOnEr+fbnzyfJPMZtyYNcJw59NVR+RvT4
v7h8/ah8J5SQe+k30ZNz98NmS4VOiJev/3D+GBNiZutDb23vxEDjzIZ9+kyU
LpR2zTzcCTd6nNwk4VvnxqOq4NyJxGW/JazVmTC03UNTd+uEf+S5E3U7mbhz
/FaU7p1OuKytf6Gxg4lWhZ//nffuxF6Vt4sktzHhNUhjRId1okvHQLBakYnv
hxveLi3thJBrzJ9tq0n9pxuev6jqxPIB5ReeskzY1nre+q++Ewq6efI1MmQ/
HlU9ztvVCYPlHcfPSjMhF+Cj6dHfCauHtrTkZWQemgY3TFM7cYX1485vSSbe
iKmLX2d04t5JT7GDEsSvEy/m2JxOvCj4LzFAjImVrxiMCz87EbshbE/vErL/
2ve1UX93YnL8761ieSYiloUVWf3rRIzpRgfx9WS+TMc/dM3vgn7BiVN2a5lY
HnbktbFwF6bWeh7MliP964l90LC4C7FPkrYJET2dlifMypd3Ydp43pJkwr/s
zQftvau78DZHcW5uOZnPQT7V3PVdOLralGVI9LSezeD/rNqF+NGUqp+Ev8le
MiNCpwvHH1jc11zMRPW1jkUuzl14/yl7vGYeE0LpKjMcty4YS1IHV/Iwofvz
8XcHjy78u7Wo4cocA5Wuu/LO+HThpI7dB/E/DJTdDnXQi+rCvD4xW/OfDPDl
/zCueNuFj/u1jJLHGdg/d3jvvvddOJXosPffGANF92aW7szoQsr1Ipm3bAby
H5mXranuwmnhy23MEQb+VqR/imzowoKroaWa3xnQFPwvXKqtC6ltZZ/9qQzc
Pmzr/bK7C+a7x94MUhjI8c27tmiwC/wxK/y3DjLwu0bC8sn3LnzmP3THq5+B
XQuddOePdsHikvPF9l4G3I6Wb/Mc68Li0LVRBwlf1vOVq2Z+Eb8dxiMjCd+v
xhvCN/50YVCjOPIXhwE1sfpfXJ5uVIkERBoQ3vSgu7XfRboRkqwUOctgIDV0
4GaTXDfUf1yIsCR8lzbJdG/d0A1dMS/jfMK38aupRpBiN0y3vflvJeF709k0
Y7KzG6432u70Eh7/ZWW3e/W7kf57n6V5OwNOrxI9aG7dUOJdIWv2jXx+/fc+
XY9uaK7d0f6lkoHhDDmtpAfd0NM+7i9VwYBFa9jcJb9uXPR+PNdRwoC+uJ/n
eGw3EoR/9pvkMSD49tvAicRuZCosfp2VQ/q1lX9vZnI3yvU3H1v6lYHdRp48
7l+6QfW3LmzLZGCSkmvdld+NiU+33bZnMJB2bbpIo7QbvE3BKq/SGNj84tr9
2bpurBave2P8iYGR1SkUq5ZuqKjRT2UkMxCbytxX1NkNrZN8SyQ+MmC1d0Os
XH83jrrKVl1PYmB54zneh9RuSG4fFncoZKD9TPTZYXo3zmYXlNXnMxDI7S05
yOlGinroDTXCL7TY5KHg727oaB3t+PeF8EcFUh3muvGyaKOPXTYD95QbDtTw
9WBgP596DeGfNtCd77+oB26HvoQFE176M41H4ut6kGi4xkqJ8MTJuH132dSD
n81/F70kPNYf0w+2K/dg78mOwulEBjpqFPlD1XvQZfZMriyegQrhVY9lj/VA
+Nzk8Ok3DMT78D3ZdKsHjjeqHX0CGRAb9rmr7NkDW8+zcUIvCA8WuWzz6oHF
k5le3+cMnJ6UOrPHvwf6kZuP+j1jYLGt8vbjsT1QKvdVDfRm4E5h+maTdz1Y
37DGQfwRA8zl6qvNP/ZgZVdOTNBDorfpgIhdVg8WsZlir+8xsEXpG8/F3B7w
Tz3Qk/JkIMrn6OTloh7M8azwCvVg4CbMKO7VPeBK6P0Kv0X6E9bf7tHQA5os
VWnlTQaMJ8/VPmglfm28fT7KjYHi44zix109CMjIaTxM+JSTL2c/6+9BtpG5
XKMvA+GCPz++oPagb+zPNZMnJE+2N2OD6T2Y/zyipPcxA9TlXn7R4z04XtN3
juHFgKGr0MP4qR64O9zNuEL4C5r83ZP+9iBKYNWCyfsMhPiEnsvg7wXrgHUC
L+E3mExRr1reC++8IfoKwpdzXE2lblUvkk8/VI8lfBuTv65rXteLlum1vhtd
GeC1LVvcq9wLue12CtuvM5Dd1PWdu78Xuck0p6NODMglzw9c5tiLsSjW+D0b
Ml+Cvo9lrvZi2R6/AwLWZL+cW+whd6MXe3qUgvysSP6WL7+g4NmLp8uubA8z
Z+Cpj4oWXvZifcAPt/STJE/UjG3aIb3QVw6sUjdm4Dw0Nh2O7IVz7VbpIiMG
9k5qS5x414siQZec2mMMJB+vFjL92AtagoTIiaMk78nH/ll87sXCg5nmXfpk
v5w7zTyf24vT9yf/fj/MgKv4H/HOol5YLi711Ncl81cSvudwRS9sIp/zpuuQ
c2dN+5yaXtgqWDySPkjO5foCFJp6MXMq/ISkGTlv8siJaO9FjIsr74NTDEzd
kx1e2NsL3RfHP3P+zz9wZufYSC9eVQssriK87s95bGxYvdCkDeWrHSfnWjG+
zT96QeUruBRD+H9HDvVl/O3Flj0u1bcI74y5nddNsT7UfRp8pER4bonwpzCX
9cGlNlctTJuBPzkJHeYr+7CCEUzlP0D8laZv1trYhwtrDPYNgoHZjotNvFp9
mP/q699AdQZ4jK/KPnPow+5bgdenFcm88Inqzl7uw1Cw0xo7BQbmpX++dtml
D0/SdZuaNpF+i02UGXr2oYM1p/xBnrxfGm84Sr7qg/MZR6blaga8PJe+8g7r
g/QdndBqWQbmq2QXTL3pQ1GInO7OleR3/2nR7qQ+LGruiF+ynDy/J3S3Xmof
Mjlpxh5SDCxgq9vlZfbBQsSfj7mUAe+Ibn+l3D7wbXRIM5FkgF//9peooj4k
aWvblIqT8z8rhhZX9MEkVXC9+QZy/iFP5H5NH5ascHGuW0/OT1tuH2/sw7dH
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
13E+EUGF1bSqbdVhwrO2l1IUQ4X0FukFoocI/++EULc4KtwM/E5mHiT7peHa
ceV3VLQ5zEsw0yZ88ZpC399ToeZ9Y3J2P+n3bYHi8I9UvIhl6MTuI/k43uxu
9IkKa1fqkMpxGlZuiFQVSiP6U8ymOo+R+2ft6YUZVDwaaRB5cJTs9+at0a7Z
VATL6qxWMCA8ibOnlHKoSDTJU2slvB/uVi0ezqMix3/rYY8j5P7NVp7HS6gY
mJN1biC8JjybdgqWUzG245W3uw7R3z7BKaikgu+KSLgc4ed58MRKsY6KDQNT
pdcJ7/OujD0CnVRcLmyUlNpD9PqI/M1jUzHn+eCr9VYyL1bt6dfHqFjyZbpO
aAsN19ViHDdPULFm7PJQmgrRN7ij5/U0FTrW5iILlGj4tvNsjjPfMPz3qlm+
30DqLVRy3sQ/jGj3pGtG8qQedWrToOAw0lJXe/9ZR4Ppc79Qg0XDaFu98JPB
GhpGRr64b5Qexsp5IzzjMjRU5z1UHVgxDBV1C8nwFTQkBx6lv5Idxr5rzZu0
l5N6F6Sj9eWGYfxeV4stRfat1vApvnXDsKMUGAUvI/UlPi3OkR+Gm/R2eyyl
QZN5s/LqpmH88m1Ksl1Pw+oibc8NisOYOL+gVIzw8AUv3tmvPIzx/eo9Rf/n
cezmBG0Zxg9Zp4nLcoRnX3yCntowuDPRIitXk/3J1lj6VX0YrDRBzZsrSb2D
53+91B7GyJrOiC2Ep/dem5vMoWF02xUrT5L7Q/K0Z+IOD6M+MakoR5IGUbW1
/zKPDiNL2WP4gDgNvGsHBTtNh/FYY42iySIavvOclpFxGsYGo0u5t+aT/af5
LSruyjBWvDppAD7yvnLfJafkPIzFnVoDfLw0tHOXymu5DWPKUpTP798Iqvpb
VKzvD6PSIevIm5kReC0/kEZ/OIzcj296z/0ewV6TNLVr3sNI5fpc3jg9gq91
AeoPng7j9Q3zwM+/RpCUZ3Ag7tUwLtzn6S4dG8H56bxyxZBhWJQxHH24I1ir
pqibGTYMQ4GWWX3OCAavhFfviRyG9pG856LsEUR8EDb4X8VmGg/l28VxpVUk
ktAmyZaiolV+lpQkW5KykySSlFSUiEK0aEFahChJtpZ/ZUmyJFQKlVLmvu/Z
Z4SQyHM9L89nZq7zvc71O9uLqblFYVXSnfmtfAbO7KPNNpkUdN+dK7nGY6Cw
gGvflk3BM3PLnUjC887d+aNHLolHl2ONJeFJulbrxLlHYcoCV7bcAAOr1hWf
g/PJ9318Jn0lfBPkc1z+FJDvZ+3Vzu5jcCI+xlOqlIK3+tGAFT0Mgo+Y7tUt
p/B04VXxTsKjW1ooKK2kMHX3jWnqAgYc8bz9615R2JWTvVRIeLz8/h20qSPx
1Cw5GMlh4OD0/HjwBwq7td4NZLEYGBoYXixlKCgskpIQfmagn6Joo8+lUBLk
bvKinYHO0IBUPp+CQ3HxybNtDNHXs5isbgoXVruM0fnEQMra5EjyEAUZy/yx
fu8YjH8433DqCIX8sxLmK5oZSMhL9sSPUtjc7HhqfBOD322vA6LG0UhwGpHM
biDx9dnsETyVxgRfm/E/axh8qdGdLZhGI+dupkXhawaftKd+9ptOw0LQHxtZ
TeKZKL7CmkGD0ttcY/OKwRvxOwcPJRqnDt6aMLeKwWuHYtmvKjTUnvRuEFYy
qHx06a3THBovhzaeeVHB4JlSaPyHeTRaPge02RCeR+FOG2zUaMjNZZ1Sa2RQ
+H2l5Bt1GrbeO/X7CV+eqXKlhSaNcznvO+rfMMiY2LF6nS4NKb1KwwN1DBIu
eS3WXUFD0uQGu4LwxPSb8XJX0TCNUbh8ifBE7lDPXbCWRmTdWRO/lwwOzWOr
zjKhMWx3LG0q4fG4H6ggZUXjt9f2zW7PGBi8CvvLdqPBPiX3cKiQgZ7Gjqc+
njQW1sW5ND0k7xG/JrTTm4aPtMSkzAIG82xHRK1+NH5cFnluyifv8TW66/UB
Gu13GuRTcxmMM951y/QQjZk8s4qAHAajGRauZYdpbFvyLAB3GPTtntRaGk7j
/eO71Uwmg86epPqsWBpvamMPG95kQI1GZGyLozFdV/2y+DrRl3Rg2MSzNNwu
VBXdS2cgUHax+S+JRm6fZ7PPNQbdGlYLAy7Q+OU8KpiTRs5fvnp49iUaa8pu
SLWnMBg00WppukIjZr6RVvJVBsNbZuadTKXRFPvFwvoK0YvLhKhl6eR+V0fG
HMwi/Ht+b6du0JhzdnbNUsI3KZRacjWDRlvk2oTuDAZy56s6/tyhYeV/VD6I
8Kq9OrHqZSGNZUa/1fyJf413+2QPltAQ6CuwNVNJ/L65MuqPib4WLr/PEP/L
B9ZcjntOQ0X2wPJdlxmsXzQgtq2hMbZLYO5xntSHS/tzv38l8TlD7doWy2Bv
hvuJC99pnI2Q1FaIYRD0YMs2s59EnwfUhB+iGYTVLpLMYWj8t9Mz1O4kg7i/
bPd9v2jcXtwRuzmcQeKkNsN5fTRc1P5ukjrG4MKMGun3/TRmzFSZWn+EQape
9jODYRrxEs5XNxxmcM/HU3F4AoMDLS05pgcYFATbCh9MJveo69krEcyg+Lhx
tYc0eacXcnoVQQweJyxOl5NlcLNIv/f4PqL3lNkhr+RIncqxfWIUyKA8e8qm
UAUG8ulB4X/3MqgqGpqnOZPBkZVHWO+I/5pybn+7MoMXVb/XXg4j+dXQ3pgw
m8EYm4OXtxOepvbabKN5DCw+dwtUQhl8oB+Hi+aTPNgVZPH9IIOvo5e1HTTJ
+eH+/bsIr2C5fazyMgbqdz2cQ4j/+hxK44YBA6GgnbEKYJCjfKROdSXhXuoQ
uoDweI7enKJlxGDj8/XJH/0YtLwRXFyxgUFAk/bbFT7kPl5xN7fuJPfu68Xf
HQxSPs4yaXNlcGz1vqYWZ5JfGx/+3OnBwPwE45q/ncGSxa3q3rtIHZn4+ajb
NgaZgwvuB5M4DaqUl1TYkfwMeGLdR+L40mOlWaotA9fvVqIwco+E7MJ3wTYM
FKsPLI0kcZm1JEs435pB/PmKJ0nknWEapxmzkehj7NYdckQXk06PeexKOM1C
maHLZxi8f3NsvaEFyU/O0etKCQyuyfZ9kFlP9L5Txvh6IgMfx31ejBmDz40Z
nfOIzhalMeJyUxIHE4OorIukLs47fsuS8FwqqVXTJLr8mM0qXkh4gjVcqvOI
buu0rWrGbmGwJU3ku4To/EVB4efOzUQX0tETi0leFi6fKXxhRXTx667VfyRP
UtdR08MsiQ7K+t/V5jHwtz/hxTcn9V8/IWTzAwZurdShOsIjnzVHoZnUGXuX
zXF3CM/buPXbW0sZrPZVeugBcm/H5G9UOakzR4uHW9aQ/OIv5o1pYXA/g0l5
sZSB9KTmO89JX9BMl1wZpc+gVz3YK5T0kawrqq0WeqQeuxe3c74xSE/YqdCs
y2DnhxW1zaQvJR5quvCT6MZE3BYdT/rqpP18vRwNco70UWNz0odj/Cc1711I
6onF80ePexlEuJvJ9KkxOPcfsm/8YxBo+Th+wlzy/q0/PLaPYYNj1qLVQHTr
0hs1S47MGbvWddeen0XeZ9qCtjcT2PixUsbPUYWB1uLq5JjJbLgu05mgTHQ/
1crXxliajaHyiyobif/fuydIDZK5pU9FQnca8d9xKvd1kRwbwsNB6z4vIPmT
YRkVoMAG+0OHTSbhuVvGNVpI5rSfSzZ7BpC8OP8lYfC7MhtfE/47YKBK9KXQ
uN9hHhtNZlcv18wh55+xd1+tw8bjYtsvPCVyfnaPcq8uG4VTy/klJC+rXl76
lE/m0ry9uiMRiuS+fz9ZqxqycVNtsqosyWOt/TvXTjRhIza5ync5yXtXJx+l
T9vYcAwx/BU+ntz34LiP55zZsGnKGmsxjoH2hTvnLclesVFHXmGqJIP+evaE
F2QvWdslWpEhQerRusDfmQFsqDncjaj+S+PwTpkiV7KHzS5QPJc0ROp+WEGg
ItnbFKVibzn9oaFT1M2KJ3vf5CqvKg6pY9OaLt4yJ3uW5Nx3LUW/aQzwlrmM
hLMxctSYPkbq3veJHxWfnCB71qf8fvNeGtXqoR+CyR76a+msSTI9pI/nPnMe
PsXGur/yRbxuGmY6Ep1nyN5q9fJ6+LcRUpcfWPhOJ3utd8lYiwpSJ1/qneXf
JHvwsTt7pt4mvCeL3x3QOcfGpZSmtmjCa2KoOPjoAolfvMHtXYS3fM3tcY1X
yHvskzDQGqBxvIxJcE5lo9dj98hkwm9koitHXWNjisPbGj7hfWbxZM5fspev
XZG64yHhe2LXuEI7j+z9//QiV4hIfFrky0rzyd7ZfcVSSUhjhZOzuclDNt52
/ZUb4tModWHZbi9lY7imNruMS6Nw9589seVsuJ33eLOeppEXsTD95weyp6ue
n7G1g4b/6N75+z6xsUL+93cD0ne0ogtzB9vI+41zuav4hfStM2tLZb+xcYKj
sfZLG42sZPvGdWw2OgvLPb1aaHjPSNlazyXxzVTXMf9A5qDUjs+OAjZkryT0
qr+nkXHDjwn4xQaOOp3mNNHwUH0QONDLxvaAF7ZvGmnMzerpie5nY7+bmnL+
WxrfFq46OvUPG2ds47qSGmhcv3t8NO0vGxmmovv735A+tuhV7MJ/bDxd7hhq
X0/6aMEk6SIJDjRl3XL7PtH4om+TbCTJQdeT1KQvH2mklVxSqhvPwQ3Pjwcr
Ca/zis83t07iwHnytJ05hFfpv7kLO6U4kC/ebJJIeK+W31vaL8tBnOQraedm
MreYip9EyXNgnv+vZx3hV6g2MJaZwcE/xzWfFxD+5PoKK3UVDg7lFN0RE77z
Hz/5OKhz4Lkpw/gM6euJJ5LU32twEOZ4Jj/kNZlDtSxoW20OznkEqbhX04iN
KN29ZQkHZaFG/QZVNMLVL/lbruJAJbP9QVcZDb9DdvuNrTn4ODRtjvEjGrvm
TtIvs+FAMH4wQbuUxL+uonutPQeScp2DCmTucJutF7LaiYNlmg8+8slcsrVa
JtTAk4PzWzclpuXTsAt6bVjizUGuu/5QzH0aNkrH+5f6clDuP3NPcB6NTYGC
ML295PxI2nzjXRobFLNXFQRyMO7s26JluTTWV7r80d3PwayrJfPm5tCAQsMx
nUMcbMqP+tuXRfRcHr323mEOvJ7s8f+RSeawPWuGNY9ycKTKtq3hNo1V8j0v
csI50FnDNC0soGH44t7xhSc4eO0zsmnGAzJH7fYyzj5J4pek8Hoc4dWfpjyq
doqDoceLTPoI36JdcSdV4zjQk9q5ooXwaU01Mb2VwMGb5QeKqgifxtOBMXOT
ONjlFqdbTPjmS/udmpXMQVrhY7WL2WQuLbU4rXidxGv7dFlbMtcpuI9suHKT
g5sndRKMb9GQn/RoosJtDlblmY5fcpOGjKt6vFwOB/tG9v+Vvk7m7nGSidKF
HLRlvWW/SaEh3lp5cWw1B/e7Yys3nKfRnxsb+KSGg3qNFI1552j8+2u1MbCe
A7br3cSBRBrS2Z+GPzVxsKD+jfPdBMLfx/O795mD67dlf00+TUPPstDMvYOD
Z22q27tiSH5fD50zvZODzzLLyp6dIvFfL9ESQXEw45hjfEAUjc2prx8sZXOw
vNBXbH6ShoMgIY7hcmDPHN42O5KG5+UZxnZiojeHtPmNEURPnC9K43s4yI/L
O3OHzOFBRhm9//WR+JU/Fx4/RiP0gm9T0AA5f9/6J9GEJ4LSubdgiIP1X+Yb
eJA5/dSq7lPtwxyEbBwtXEv4EhIfuSeNcpBR2rFYifClGpgoDIzjYvhciuZ7
wnMrbrz4/kQudIYPZT8gPDkdb+o9pbhw9neYn3CC1KuYbZFvZLkoNZeZZU74
3n3cy7uhwsW+weipj8LI3K2l/9phDhfpvp5nL5I94nvE71sTVbmo/7BuUlAo
mbPVT247sJCLhQ8Gx2gepMm8fqVyvT4X37yCfqcG0ZCt35n+ZxkXU5o3h4Tu
o6E4R/VwgSEXq420xfaBNNRf5y1SWsvFVUWKI7WX7FEzKq/yLbjY0rCjI8KX
hqV/7IEMSy7CV63csWMXyZ8yK+ttm7m4d0eh1dCHhrvvpzEVdlyMP9ncLCJ7
k+9/1zoObuViuTDfusGDRqCM5xMtJy68dibU57rTOPaIF5jswkW5gcUrT1ca
UZMLN25050JwW81knQuNOLdQtWFPLtkPJMqUd5J6UrRmpNCHC8uIb6v7nUl9
Gi/R7rubi8PcZ48/bKdxY8frYhV/LrKdUpc/dKKR/SAhqTmAiw+vQgvPbqNx
f4zdnpggLiSWbl28x5FG8bYZ5qsPcGG0TUpnFuFNlo3kVBzk4m7mQjlZwhtS
z0nacJiLGd0mg2MJ79J1L9q3hnMhTgir4RG+QnWfoKBYLrIqKe9nxH9Bb2Fa
VhoXUroV6Ttsyd76QAU617kIO/oleosN0ZdfDFV4kwtWzW9/0y00Fn/drlee
xUWZl+4q7c008qv+Vbc/4OJAStrHwQ2kP1207pap4qJ97CGZVGOir82Pr1yu
5sLC7nzf2XU09o5XXTurlouiG3lfI41oaB/tjdV6y8XZVT/v+a2hcdfz2izz
Vi4QZLNhJdmT41TGvaxv5yL/uf/iRYY09nzct9vuKxdKk2MV5hnQ0LQ0LXL7
wUVP1vOuCctoTBh734nq4sLzV2v9kD4N5rnC8F6ai7fGPYUiPRo1oSdu/2IT
/STKpHYtIXrW42w4wuMi57NWZOtiGqe59oJ/Ai4eO/9S2rGaxu6s5xdjxVy0
PNT4aUf29A1uC1dK93DRPcH1nuVKsmfPPN+R3MfFVPeLB0wI77j3g1HKA1ws
elSzehXhpRK8NTP+kPeXHh6jT3iz/xmGPPjHxalnu5PnEd6Yp7dmGozhIUPu
+s6ZS0l/CJlc9kySh7I979VkCb860zGxbhIPA4pGJf8IX1bjqRtd8jwEHpT7
+E2b9Kelf11vzeBhj8mSqAotMl9cCZntqsSDr8zmJbc1if7dvNI/zeHBPTcm
btdCGiKBcVqdFg92XweM+KokP+0eO8cu4mHLXQXe23k0KksXK5kt4cEqdGlK
wVwalyJmpzxfzoO5bMCvA7NJ/ZceulxgzIOh+fc7gzNJfQ4+4BhgysOyaX8d
vijSkPrIma61nocl32ZKvJhB5oH0tuTbm3jQDLPfGTmdxH/UxsHdmgf19UET
veSJHn1q5GbZ8jBf7mypmRyN6EWPLlx25EHlfvXUCbIk/87r2tlv50HxyM/n
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
glJK13PFagEehkwrWLqN8KSo+WbUCGB5RuHYGkcK31K9p+rUE72lK20w30qh
Mi3zSUmDAEcLZ8tbO1DIvNblua5JgGOCCWq2xH9suppU7TsBwn7v8HNxobDn
uneJXYsAof/y8/12UrC6ken65RPR40SJnoM7SL+4pfZQ+EWAfco5EYmE71qm
mqMCTfS2rudiGfEXkeU9coMtgOcGi7Z64s8jOzNHkyeAm23q7FZ7Cuo5an/W
iAVw9jLOFdmSfnNP7abXHwFsYhNezLOmUF2oximQEWJ1oxo7aj2FnCLvi6um
CbGiNVT3nDmF+OLMNVXyQizvrDtwzYzkR6la0qeZQiz5FTRcbELh8xO1ZcPz
haT+PpejjIi+n3p/jVUXYv7cqdu715J8+C8zRlZTiLmaXteH11DY9VytTU1X
COXVEzVnrCb6LVeL2LRCCFm3rUYbDIn+K7wXtqwSQnp3TpSDAYWSyswm17VC
TN7/p8Z9OZkHXnaFMeuEmHjEWjpgGelnVWrzg02EGBd1yz5sKdHfK+83f8yE
GJvQc/WUPoV11ZkHT1kIMZps0XFej+j7dddsGUshGuumyG8j/sfWqNVctRJC
q/1H/a5VJL9qvPerbhHiFPtR1KGVFGprM5XybIX41p+wOmYFhcR6tYAyRyGS
ZxjeyyJ8MxvVplHuQgw7xMd1EX+rfn/s9fQSgq2U9aef+HOec6btm48QH76/
2DuF2Nf28W+27RHi7t5ua4PFpB5NLV3cECKEQ/R2udPaFDRsLTYXnyafFy28
pq1GYWPYwBK9eOIvDFOM5xO93Lonn39WiOPrdkQ4qFLIE8t8uXOB/L4+0T18
LoUlF1r3pF0TYuRHr1qjCtHze7/TJwuE2Dqt6n7wdApOf5T3jhQKYdz6dXas
PIXD899uOVYihPb130lpchSeHtCfceipEP80tYOrZMn7pnUNdj8Tgis0+9k6
lej/5eWOfWVCtJS4OvBlKMzibajkVQhRfvTwq1FpUh/k/2T5VQlxDxcMFIjt
tub+GapaiDoJP/XcGRROeLsFeNUK8V3Xgl2uQOFWgqzt93oh+pwX5LUSvsri
l8tc3gohFTtmn4jw/fxyULG9SQjVok69CcQeK6kx5Pie6PNbWc8cwrt+a8JL
m1YhvA2PHdlCeH3Dje40tAtxxMt5rS/hPZ0lirP8KsT5pBX/IghvXa+DndkP
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
f6Wl7e4=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.58}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"f(z)\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(8\\)]\\)(z)\"", 
         TraditionalForm], None}, {
        FormBox["\"z\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0.5820238806997359, 1.0062565670404926`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.667235824555853*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Save", "[", 
  RowBox[{"\"\<DefinicionesMathematica\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", 
     StyleBox["\[Sigma]c",
      FontSize->12]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.638656744075824*^9, 3.638656769643532*^9}, 
   3.6386582925735693`*^9, {3.63865832465186*^9, 3.638658349417965*^9}, {
   3.638814472630465*^9, 3.63881450140047*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", "\"\<DefinicionesMathematica\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.638814120836586*^9, 3.638814129638775*^9}, 
   3.638825770877771*^9}],

Cell[BoxData[
 StyleBox[
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"10", ",", "0", ",", "0", ",", "201"}], "]"}],
  FontSize->16]], "Input",
 CellChangeTimes->{{3.653086557946844*^9, 3.6530865614421473`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["LogLogPlot",
   FontSize->16], 
  StyleBox["[",
   FontSize->16], 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"R", ",", "20", ",", "10", ",", "100"}], "]"}], ",", 
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"R", ",", 
       RowBox[{"-", "8"}], ",", "0", ",", "100"}], "]"}], ",", 
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"R", ",", 
       RowBox[{"-", "8"}], ",", "4", ",", "100"}], "]"}], ",", 
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"R", ",", 
       RowBox[{"-", "8"}], ",", "10", ",", "100"}], "]"}]}], "}"}], 
   StyleBox[",",
    FontSize->16], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"R", ",", "0.01", ",", "100"}], "}"}],
    FontSize->16], 
   StyleBox[",",
    FontSize->16], 
   StyleBox[
    RowBox[{"Frame", "->", "True"}],
    FontSize->16], 
   StyleBox[",",
    FontSize->16], 
   StyleBox[
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.005", ",", "0.01", ",", "0.05"}], "}"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.015", ",", "0.001", ",", "0.1"}], "}"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.0065", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", 
         RowBox[{"Thickness", "[", "0.007", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"DotDashed", ",", 
         RowBox[{"Thickness", "[", "0.0075", "]"}]}], "}"}]}], "}"}]}],
    FontSize->16], 
   StyleBox[",",
    FontSize->16], 
   StyleBox[
    RowBox[{"PlotRange", "\[Rule]", "All"}],
    FontSize->16], 
   StyleBox[",",
    FontSize->16], 
   StyleBox[
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<R\>\"", ",", "\"\<\[Sigma](R)\>\"", ",", "None", ",", "None"}], 
      "}"}]}],
    FontSize->16], 
   StyleBox[",",
    FontSize->16], 
   StyleBox[
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"{", "17", "}"}], "]"}]}],
    FontSize->16], 
   StyleBox[",",
    FontSize->16], 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  StyleBox["]",
   FontSize->16]}]], "Input",
 CellChangeTimes->{{3.521492202216486*^9, 3.521492217599907*^9}, 
   3.535127355402898*^9, 3.535127795892729*^9, {3.535127828156844*^9, 
   3.535127841768625*^9}, {3.541914894960935*^9, 3.541914901315681*^9}, {
   3.541945419490663*^9, 3.541945427789663*^9}, {3.638118311803241*^9, 
   3.6381183148807583`*^9}, {3.6382140280731783`*^9, 3.638214058676881*^9}, {
   3.640044332818725*^9, 3.64004433966581*^9}, {3.640046954332255*^9, 
   3.640046979679637*^9}, {3.648513627649955*^9, 3.648513663746635*^9}, {
   3.648513801879299*^9, 3.6485138093967*^9}, {3.648513858561818*^9, 
   3.6485138722598352`*^9}, {3.6485139175487423`*^9, 3.648513922223403*^9}, {
   3.64852213338992*^9, 3.648522157104575*^9}, {3.6492572293478518`*^9, 
   3.649257275824415*^9}, {3.650138322018682*^9, 3.650138359001417*^9}, {
   3.650141969058316*^9, 3.650141980835671*^9}, {3.6501505709546967`*^9, 
   3.65015060245644*^9}, {3.6501516980451717`*^9, 3.650151699584611*^9}, {
   3.650152509992667*^9, 3.650152523560319*^9}, {3.6530864472458677`*^9, 
   3.653086537549553*^9}, {3.6545345240978537`*^9, 3.6545345486167383`*^9}, {
   3.655409518060121*^9, 3.655409527245008*^9}, {3.6669785051126432`*^9, 
   3.666978505720393*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.005, 0.01, 0.05}], 
         Thickness[0.006]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         Dashing[{0.015, 0.001, 0.1}], 
         Thickness[0.0065]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         Thickness[0.007]], 
        LineBox[CompressedData["
1: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
x288uh+HBwnB/wHzWUAF
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small, Small, Small}], 
         Thickness[0.0075]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-5.065686997824157, -5.78958819620135}, 
     PlotRange -> {{-5.065686997824157, 
      5.065686997824158}, {-5.78958819620135, 0.05469273877691805}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-4.605169998021961, 
        4.605169998021962}, {-5.5239390627932465`, -0.21095639463118504`}}, \
{{-4.605169998021961, 
        4.605169998021962}, {-5.5239390627932465`, -0.21095639463118504`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -5.6000000000000005`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Sigma](R)\"", TraditionalForm], None}, {
        FormBox["\"R\"", TraditionalForm], None}}, FrameStyle -> 
     Directive[{17}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.045, 0.09, 0.45}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.045, 0.09, 0.45}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0.135, 0.009000000000000001, 0.9}], 
                    Thickness[0.058499999999999996`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0.135, 0.009000000000000001, 0.9}], 
                    Thickness[0.058499999999999996`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.063]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.063]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    Thickness[0.0675]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    Thickness[0.0675]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.01`", ",", "0.05`"}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.015`", ",", "0.001`", ",", "0.1`"}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.0065`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.007`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.0075`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.521492258137192*^9, 3.522446493477897*^9, 3.522704814523346*^9, 
   3.535132027027194*^9, 3.535162647852066*^9, 3.541922952756247*^9, 
   3.54196107874801*^9, 3.638118656105291*^9, 3.638128551674448*^9, 
   3.6382150220287123`*^9, 3.6400443373146267`*^9, 3.640044982140214*^9, 
   3.6400476629274807`*^9, 3.648340059340704*^9, 3.648471043586669*^9, 
   3.648513798717594*^9, 3.6485138505461903`*^9, 3.64851391253389*^9, 
   3.64851445455785*^9, 3.648533883029739*^9, 3.64873033493216*^9, 
   3.6487309553971767`*^9, 3.648813373195232*^9, 3.648877356904705*^9, 
   3.6488915746376867`*^9, 3.648945937799914*^9, 3.649257451038539*^9, 
   3.6492577097359657`*^9, 3.649286270392653*^9, 3.649339562176757*^9, 
   3.6501385667607594`*^9, 3.6501391075650177`*^9, 3.650142596959025*^9, 
   3.650150960994321*^9, 3.650152077816958*^9, 3.650152922908153*^9, 
   3.6511052464566402`*^9, 3.651622746798777*^9, 3.6530864260893583`*^9, 
   3.6530864607788343`*^9, {3.6530865010859547`*^9, 3.6530865385393553`*^9}, 
   3.654384478172727*^9, 3.654524753834024*^9, 3.654534598617338*^9, 
   3.654556606174148*^9, 3.655409622686924*^9, 3.6669827004862022`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"LogLogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"R", ",", "20", ",", "10", ",", "100"}], "]"}], ",", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"R", ",", 
        RowBox[{"-", "4"}], ",", "0", ",", "100"}], "]"}], ",", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"R", ",", 
        RowBox[{"-", "4"}], ",", "4", ",", "100"}], "]"}], ",", 
      RowBox[{"\[Sigma]", "[", 
       RowBox[{"R", ",", 
        RowBox[{"-", "4"}], ",", "10", ",", "100"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"R", ",", "0.01", ",", 
      RowBox[{"10", "^", "2"}]}], "}"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.005", ",", "0.01", ",", "0.05"}], "}"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.015", ",", "0.001", ",", "0.1"}], "}"}], "]"}], ",", 
         RowBox[{"Thickness", "[", "0.0065", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", 
         RowBox[{"Thickness", "[", "0.007", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"DotDashed", ",", 
         RowBox[{"Thickness", "[", "0.0075", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<R\>\"", ",", "\"\<\[Sigma](R)\>\"", ",", "None", ",", "None"}], 
      "}"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"{", "17", "}"}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<LCDM\>\"", ",", 
       "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"", ",", 
       "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
       "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
   "]"}],
  FontSize->16]], "Input",
 CellChangeTimes->{{3.521492225848577*^9, 3.521492236879226*^9}, {
   3.535127863672457*^9, 3.53512787572686*^9}, 3.6485136846414547`*^9, {
   3.648513754131198*^9, 3.648513813790161*^9}, {3.64851389377932*^9, 
   3.648513931037965*^9}, {3.648522178314082*^9, 3.648522198916885*^9}, {
   3.649257255811907*^9, 3.6492572642180843`*^9}, {3.649257299377977*^9, 
   3.64925729953006*^9}, {3.650138370337447*^9, 3.650138400950944*^9}, 
   3.65013876309269*^9, {3.6501388330230007`*^9, 3.650138833959998*^9}, {
   3.650139890692257*^9, 3.65013991920763*^9}, {3.650139963367449*^9, 
   3.650140014611746*^9}, {3.650140070244714*^9, 3.650140102980894*^9}, {
   3.650140143197578*^9, 3.6501401583393717`*^9}, {3.650140218112788*^9, 
   3.650140286722353*^9}, {3.650140578373769*^9, 3.65014059419599*^9}, {
   3.650140940525043*^9, 3.6501410246753683`*^9}, {3.650141921174615*^9, 
   3.650141956668*^9}, 3.6501537755012712`*^9, {3.650154656917095*^9, 
   3.650154665011177*^9}, {3.65453439312422*^9, 3.654534398734932*^9}, 
   3.6545345169268436`*^9, {3.666978492490082*^9, 3.666978492771579*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.005, 0.01, 0.05}], 
         Thickness[0.006]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         Dashing[{0.015, 0.001, 0.1}], 
         Thickness[0.0065]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         Thickness[0.007]], 
        LineBox[CompressedData["
1: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
B0ig/wHrdZOE
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small, Small, Small}], 
         Thickness[0.0075]], 
        LineBox[CompressedData["
1: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
fEXQ/wCb2GlH
         "]]}}}, {}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-5.065686997824157, -5.661187213870263}, 
     PlotRange -> {{-5.065686997824157, 
      5.065686997824158}, {-5.661187213870263, 0.04857840628496157}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-4.605169998021961, 
        4.605169998021962}, {-5.401652412954117, -0.21095639463118504`}}, \
{{-4.605169998021961, 
        4.605169998021962}, {-5.401652412954117, -0.21095639463118504`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -5.4}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Sigma](R)\"", TraditionalForm], None}, {
        FormBox["\"R\"", TraditionalForm], None}}, FrameStyle -> 
     Directive[{17}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.045, 0.09, 0.45}], 
                    Thickness[0.054]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.045, 0.09, 0.45}], 
                    Thickness[0.054]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0.135, 0.009000000000000001, 0.9}], 
                    Thickness[0.058499999999999996`]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{0.135, 0.009000000000000001, 0.9}], 
                    Thickness[0.058499999999999996`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.063]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    Thickness[0.063]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    Thickness[0.0675]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    Thickness[0.0675]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.01`", ",", "0.05`"}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.015`", ",", "0.001`", ",", "0.1`"}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.0065`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.007`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.0075`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.666982638523885*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"nM", 
       StyleBox["[",
        FontSize->16], 
       RowBox[{
        SuperscriptBox[
         StyleBox["10",
          FontSize->16], "R"], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["1.686",
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["20",
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["10",
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["201",
         FontSize->16]}], 
       StyleBox["]",
        FontSize->16]}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"nM", 
       StyleBox["[",
        FontSize->16], 
       RowBox[{
        SuperscriptBox[
         StyleBox["10",
          FontSize->16], "R"], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["1.686",
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox[
         RowBox[{"-", "4"}],
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["0",
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["201",
         FontSize->16]}], 
       StyleBox["]",
        FontSize->16]}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       StyleBox["nM",
        FontSize->16], 
       StyleBox["[",
        FontSize->16], 
       RowBox[{
        SuperscriptBox[
         StyleBox["10",
          FontSize->16], "R"], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["1.686",
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox[
         RowBox[{"-", "4"}],
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["4",
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["201",
         FontSize->16]}], 
       StyleBox["]",
        FontSize->16]}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       StyleBox["nM",
        FontSize->16], 
       StyleBox["[",
        FontSize->16], 
       RowBox[{
        SuperscriptBox[
         StyleBox["10",
          FontSize->16], "R"], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["1.686",
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox[
         RowBox[{"-", "4"}],
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["10",
         FontSize->16], 
        StyleBox[",",
         FontSize->16], 
        StyleBox["201",
         FontSize->16]}], 
       StyleBox["]",
        FontSize->16]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"R", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.648978173738002*^9, 3.64897818514391*^9}, {
  3.649293558765698*^9, 3.649293566634457*^9}, {3.650053591670331*^9, 
  3.650053600205924*^9}, {3.6548119483312397`*^9, 3.654811953049219*^9}, {
  3.65481198841327*^9, 3.654812014073955*^9}, {3.666978456510947*^9, 
  3.6669784569511423`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1:eJwt1Hs0lHkcBvC5mV+UaTWuMzXeIeaotqiUXHp/qdRalGSo1E6LFGM5Ktej
27IoaVZS4YRd5RatRGrT+11mxUkrqa1WueSyTRLrMqPB2Nlz9o/vec7nj+c8
/32F30bsCmbQaDRP7f2XgbdkI3NzCDi2YQViGyYYTvOsnWYQCOe2c/zsmCB3
ux4QPYVAt7er3HcDE6y77rV8HEXgR6+N8/yKCR8W9P38uhfBha1JsaIjTIgM
tfevbkSweaVQnlzChBNWf8GhFARU6r0T/1ixICfXMvMJB0GfeFJxm68D+d2p
Ed66bKh6x9Tv4CEwfuqzw8ZIBzTV4uDi7nnQvNNny2Nt76VXZpNuih5st7E6
ZmnBhOMxq8NOuSwAx8qAG22rGJCydNnFcbk+qM8e4q62oUNZwknNuX0LYVJV
dOmAiAbWd3e1rQ7/AuQWmWsfhmso10kPV30zA3DSOVm9PGiG8pZPxlxvNYAs
vH79pkQ19ZNbIDfsu0UQmOc/8CF/inp1ldP0FnGhrVigS89RUqxLjKPqEi4I
FvxiR9VOUI/N7BQXHQ1BjxhsU5SNUWJ6VLuswxCku5OvlJSMUhkhHhpRsBFI
GrsfCzKHKaljmLmBwggsXDTev59WUIGJEd+LjhlD6eHq3l9rB6gX4qOnIsaM
IXS8KuBcTi81euvrO9diTGDlCZ09bMtOqnvwuapHaQLcuOfzs3M7qM+FLRWF
oabwMki67FZfE2VxvzaeM2AKMfHLMlouVVJJjtZhebvNoOyCAy6yrSAbZ5Wt
SZQZZBw5/afkzCMy6rXjcLctD/QnPJxueneQa2djC72u8KDnWNPa6KRO0mTN
0mKlDh8+3fNsiGnuJV/VeYk3RfDhRkqhJChtgDR4VusX1cYHK2U5NzZXQTZY
Ox8ssV8MXbfN650OD5P9m5NTvry4GHwv96QOyUZJ1l7LHtHwYrh2Pb3eI3uM
7GZsqFJ6LAHWvvBhnbgJ0jeqhlNTtAT+kJQW70pSki2avyN5DAHU6PP2q6RT
5I+Rn5wa/ARgnSN8jzzU5AZj/VW+ZQJQRyfNlvvMkP1+7i2BDHMYUvM5JQ4a
kp5gYmfvYw4FISnP+ZY0LJl/MH1vqTnINrWmm1nRscxbujx1xhw4EeWujUYM
nLe5gjq+lICHW+rqa3lM/Ih/57KLJwGz4d+sE3NYeF2D7Yr6KALo6NnV5bMs
vJA21anOJmDd9qgGdxobl9eVRz+oJ0D95uZ7ozE2ftRReSOwl4At0maZp5KN
HSrKgf6OgPPTfQ7JajaW5Vm252tN8PhpEwyERRvPvujsI2CbX5pNBxfhxCP+
Up9BArLag0Nl9gjPrxR14CECVjYJPurFIdzeN5thOElArK9jlmsiwvedp+Or
tP6t39c5/jTCO2uu7fdSErCbeT5dkYbwB7e37FQVAQl4ekVzDsKFxAGF+jMB
zfdfhic/QHhJXfZIl4aARe7jRvWAMKsiyy1hjoCA15yHE3KEx954ZpnQhDCi
2soJeoLw+zUq7k66EIzt71S6dmn3TrkXAVMIEnmbOP4dwrmm26oCWEIo9RnS
VA0iLJHq1kxp7RxlsUM4gnBQaH+BLVsIP9A3qvzHEV54dy61Veunsj35MhXC
kSMDIYeREHjE8W3N0wiPhlxxYc0Twv//C+uHm+oVaP0vhlVRAg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJwt1Gs01HkcBvAZl/kRTcsYaWSay3/UqEglZWr/vxybiFpRaZfWCWXFZkti
OrqyKNWsRe2w6UK5REkUG/9vzDJKqdWFkhLSTAnThNza6Zx98ZznfN48Lx/+
1p3rQ/VoNJq3Ll87+Iqs/8sXBMnqwVCzD+ZgMcaxlYwjYG5NtekbNAfFqryA
mBEExaFv3zR8MgfbjsrG9wMIypuLr0onzEFt2nWhrRNBybm2eY9NWRAV7uRf
VodAPs6y2zKXBftFz2BbEgJKle1St50F8ixh2j0mgoOemuaBFyzIeZm808eY
AdN4B7r1WyzA8oHvOjHbEIp2aC6sKWKD8ntft7siA9jT+0BSF20Jq8WiaKFA
H8KvG37OdpsOLiUBF5sd9KDnd5W+dGI6jB7dxloopoPC5IZZwy0r+DScm7Fl
Ng0UaySLJFEzQCFIW1wTOUk5zBDtqf+GAxLDA2VzQ8Ypx9rE42M3OJCOnZ1X
xo9SCXdqrDlrrSE4279HnTNCVTbExpu1W0PzJa4xXT5E9bjbNpVEzQSu6VVH
qkJLnRdutcgamglTeG+aVYUaqmBLe+jgYRuI8Es8nZ8/QJkyGqYTRlwIqnt5
l5vWR521de9KPsgFwYpJn38OqahxdWnjgi9cKAgr6/y7oodyVdm29v86C8I/
lgYck3dSwdGZu8rVs8B+v+FmhvA5NVJoHDlgzwNW3COTzKwWqqqbvmBZMA+e
hkTYXemqp9Zn3/eIlPNgr9TuRGNGCeUrNjqS18SDwpNLce6CYvKSc2tn2TgP
Tvx86EnQ4Qay7LEnL8OBD1O1XpLLPi3kbkUgORjIh1fR9YtjEp6T90v2uzFO
8uFDpXftXmUn+aQqrMKyhg8Xk84FhaT0kP5XnHqRig+ioSJWbJaKNM2V5sot
BdBxbVa1JKyP5Nr5SjEWwIZTr5LfyQbIsQxj7aowAZzJS632ytSQFc1sWlua
AAx+jOwzjNOSRo/ai+9UCuB+UMGl9QlDZHacnL2oSwDlUzmBwxEjZNULhVxg
LARbOf8t8holDwdaHCmaL4TRmISJIt9x0mzvD1mn/ITwbtSamb90ktysLah1
jxXC2e1Jj6yFNLyq97ONxxkhyFY2pc4Q0bEf60KmplYIzJ1FrnVsPZzeuj05
s1sINW43qys4+tikvn6O1IiAiciflmxkGmBHh6Zzu8UE0NG/f86dMMAhSXfF
Xh4ELFm9q9aTxsBdXDN/vx0EjLZffsvWMPB7WcyRv44S4BahlHkPMXDgTZfF
c44RcHysa2niKAOvfezafk1nHsc6RauHcOZawlyZSoD7phRxCwthVzcftuYE
AekPQ8NlTgh7F+6Tuv1BgH099/2UOIQXznFvfJ1FQOwGl3TXeIRtfrEKjcgm
4Hb3huXSQwjj8k0jn3T20z+eqkpB+Fa4yND4DAH78Ng8pRxhq1r+TfuzBCir
nkYm3kLYZDaVEJtLgLnnR3Y1IEwLNjlNzyMgoI1Zo1Ug7CR5dv6ozv3D3zFD
7iGc02OQk32RAEun6yWuHQhHTZQ6Qj4BQYrmjdLXCPvTnOkeBQQU+L6bLH2j
2+tYrXyo8/JdgnX8foSXOVit6Cok4Df6t8P+HxHuXdSq3lFEwAPZ5hzZMMJP
hHYyrc4c3h535RjC3R7T5sdfJuD//8J+6uTbhsUE/AcvEFWe
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1:eJwt1Hs0lHkcBnCXMW9DzVYMmmHM69YZtXQhxOz7C6EarFS01NoocmiqLVJH
NW7D1mQ2TK0uQiREpZxu0/tNkx2VKNSKnUgU1dZhMsy47Ow5+8dznvP54/n3
wbcJ1m830NPTC9Llv46pk3yZmcFAP0NtZxlPAzMt09FrEoOOp/aUTgEN5P7l
UcnjGBSzbGmSFBo4Km83f/qKgX+PdZaeiAbDs/vLuvowmGsysuVJOQ12J7hF
1D/EYDZ5K5zWT4PDDq9hhwgDT2H27sVRxlB0xu5kCx0DV+GyRN4aEyh+kyMI
pVGhrD0jecZ1Dpi3hYVwGUYQI9/m4PCeDoofw/yeOFDg12q5bzdvLgRyHfbZ
2RrClJO2s5Q+D1bWRlW0uhiAy57mmTjFPND8tsN0GVcfqhueptzNmQ/f1BcL
ty7Ug3PaXq0XzxTktidd7ydNk+7ioInHSlPwMjpSvyh2knwesvC6ncgMCpC7
+6o0DTnhJy+JZDMg5mzEwHDxOPku0tNZcIUBrZfYNP2iMTKgN617ja85sGdf
XUo2qEjn3mNHdzw2B2POYOtQ1Qi5nJu987sIC0jckHW6svIrKbV30kiVFhD9
8M0T9snPpGPPYxWKsARb3nToI+EQiQsmloX+ZQmX4+v77jYMkJ7KO2lx/AWQ
MHot6lhRH0mD5Z6VTQvA+bDRZqpdN1mpyugM9mKCaWqHifRMO/l9Hd8ssJwJ
r2ITner6m0jZUbcj3gwWpBx0OtFcWEvKRdpd9odYUJXngS4uuUJMeQ6hhh4W
nNgpfBmd/ieRTd8gn+9nBXNUfK+a0HaCDDi1JbjUCnr3NbkmZ3YThZkWVjjV
Gv65HdSYougjeOqukvfbraFCVBIdmztASLc58cJl1uAwVm164MwQMUxdUuDC
ZIPyuo3MK/4zEdLb+cJMwIaNp3pzPkq+ElsLBtMbgA3ny4/L+NIRIjAnaEWh
hQ1QIpM+G6WqiMLN9fmWcTbwLPrypfWZY4TyQl163V0buDmHuUWdOE6Ia27U
n6VwwLEI/4DxNYSFO5U5zuWAJjlzqjpskqhW+nc1h3Lgo4ZFr/SYJlxeT4pC
kzlwIU7UwbLTQ6/WjV7lneOAZNXT4wsc9NHrcPt3zxo5QBdU+zxkGKALN01o
/AEO3Pe7JWtgGqLgPat9rYxxmEr6ecUmOgXFSR+dH12Egz724o9FUxS0a2dq
YQUfhxWBexvX6lERr8Ifzgpw0PTUfGCMUFEHL3dYnoeDX6JCEjRGRaU5s4Rh
EhzE2n6PLA0VGcb8TX+rM4fJylUZYCjfXjx35nccAsJzue2mGILn3BqPAhwK
nm9PkLhhyKfzyOqq0zg4N7E/Gadi6JhbG01UgsOBjSsLfNIw9HJWntisFIcH
7zZ6HxRiKC6hZVapzhsMxceHcjHUNtEycK8Mh0NIu1hRhCG/fIOVI+U4KO68
Ssq6p9vv+4kfWYXD/LWjDBlg6NNwTeAHnaO66PdVcgyZZ+d776/G4Yt6NT22
BUPrQmxN8mpwMHe7UeujxNAwJcG3sRaHaHnrpoNvMbQpXTgZXIfD5bCP09cG
MfToF/cr3Tp777UNwb9gKHldxjfVVRyy9X9QR4xi6MEgSyy8hkObZHOxRI0h
6Wi4Ff06DkzO/gCFFkPxMo+yIp3//y+0NIfEF9bj8C+vc1Jn
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJwt1Hs0lHkcBvAZxrw7s8ymcanBzLw07EhtK8qadt9f0pJ0EpHOzuw6m2Lt
WB0roUNpDcYllzRl2iWJXIpKHGV5vzGbsXIpLadVckmZUJZhHMTac/aP5zzn
88fz74N/H+F7VI9CoexbzX99pDr7/coKBp6KXzgNegwwWeTYipYwyO98TElg
MkD1dYk4eh6DTkafIbGWAbYD99ompjCQOivyG3AGvDUcKX42hEFsWG1BAWLA
8TDnwJoWDH4SPLEwSmBAguBvOJaCQWaVaiRHxwDlZZvcDhYGa5r2toeOMqHw
ZWrEAQYdrHh1o8NPDMGs22+/0NQATF/5X6lOZoHax8+9XUCDLOam7ijWGvAU
CqJsrPWhdbZUYje4BlyrxKVdn+mBhpsR0a40hoW0Y2xHIRVO12+Vs8VrYVZ3
7cK3dhQYGHoZnWzMBpV1rlNT+DLps07SO1/DBpHB6ZqNwUvkFz1b7ntKTCAP
bd++M36B1Ay/9QqZNYEjvwaOvi2cJ2kDChexzBS6rnMZVOUc6fTPI4q9pRlw
DW99TtZpSUnoyAW7a2bA5L/u0lRMk8Gmf1U+cDQH6UHZpbKyKfJm0oY/He+b
Q1DLy3Zu7iS50uCwp8ZpHVh/uXzgj0QNORh+fnNZ7TooD60ZaqgbJYPa0tuy
7NdD2MxtcbpyiBxYiZNVlayHzQkGh+k2/WS6g2ZaaMEBduzTjxWXe8iKPpN3
r2Qc6AuW2lePPCRHokwWS+Y4cDLO/lzbhSqSzdva4iGxgIosF3Rty03ipntm
ZxppAed+SOwNOttKOHpLZ4vsLMFI6y26caCHyKp8I01OtoTBqIdO0Un9xOvK
W2HMcUt4d29f80n1EOHo0Lwhdq8VlKYUBQXLR4msN1OJZ4qtQDBXyY65rCG8
W9CYjsKFgTu8RlHoJEHpPZ4hDeCC/8XB1PHsKWLJ54RAUcaFgpKMRm/FNFGs
2uuqT+EB7ZvwSYNYLUHd4qCm+/CgM6j8um/SHCFrNW62KeFBrRFHopPOE4+V
xCHbGR7YKvExzHuBcJnddteOx4eF6KQPlX5LxNCO5yJnDz6ML1iwylyWCT8t
s2H6Rz5cCUl5amFDQfHPi3Dz83zI3vkoY72AirQfFaS8qOcDK6LSrcVUD9Fo
Mzlp/Xxocq9vrOPoI/adTycyKDh8CP9uWwCLhjo6RJE51jhQsSf5Gz/QUIzR
C5eIXThs84xs9qLQUbFg967cYzgsPL8xZjpNR5ceyYaGk3Fwl6qz983R0XR1
oTAyBYfMxREX2QId5U9qQ6mpOPA5FnKtHoZSxwI6eHIcPA7JhT1sDAX6czeJ
03HIe3w0LNsZQyfN3uzpycJh80PuBDMWQ3zmHWrDJRxi/F3z3OIxVFrfsXVP
Pg4PXvnviEvEUJvvfknfqg/qZ2Zo5Bjyj5crZpQ4nEKLDmolhg7+vFy08Tcc
1Pf7wmW/Y6gy7xOusgiHtV4zpo2AoZJe21a7qziIn7GatCoMNQ/Xh9Su+r1u
Nyu4A0P953yzuotxMHO+W+U2sLpPOxNDL8UhSNUVEDeMoYmY3BfnV13uN758
+zWGVDlCV/w6Djsirffj7zF08fDEM1EZDsnUr3SBMxiKvsqxalt1d/bhwmwd
hoy39xwKKMeBwz/hoV7EkFeIedrIqv//L3T21FjN8Qoc/gWWM1ZR
         "]]}}}, {}}, {
    Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {-3, -10.735072028825673`}, 
     PlotRange -> {{-3, 3}, {-10.735072028825673`, -1.998047269379139}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-2.9999998775510206`, 
        2.9999998775510206`}, {-10.337934539759921`, -2.3951847584448904`}}, \
{{-2.9999998775510206`, 
        2.9999998775510206`}, {-10.337934539759921`, -2.3951847584448904`}}}},
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -10.4}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], None}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-3, 3}, {-10.337934539759921`, -2.3951847584448904`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.649091027722476*^9, 3.6498790796176357`*^9, 
  3.6501279102065687`*^9, 3.654631515909937*^9, 3.654823496392728*^9, 
  3.657293513606847*^9, 3.666978462014028*^9, 3.666982581389497*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dNdz", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["20",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"dNdz", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"dNdz", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["4",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"dNdz", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(a\), \(c\)]\)=\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)\>\"", ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.655661884601623*^9, 3.655661893223798*^9}, 
   3.6556797212689953`*^9, {3.658003926404399*^9, 3.6580040273238173`*^9}, {
   3.65800409238131*^9, 3.6580041050034733`*^9}, {3.658004268475659*^9, 
   3.658004283757657*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1: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
BpGHBMpsuoHmRx+QhySGDjolLXAJxH8AIufw/w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxd1nk81XkXB/B7rzX1tEppk2kqTU1DlorqnMhSyRJttiKUEVJRqGwpKTdL
CNnJzr24V6aIlhmjlKUU1bSKsYUs9yKe6PT88XxfLy+v6/e753vO533+IG/j
stOOxWAw/v72M/77/8/NRQHtxjfZIGfIjns6fwZ+/xwPi/r3LsqapIRSz1OO
bpRKh5pc98tNs7ToeR58Nn9RcvofI1SeOIVgFDjndamKGb1fDOmlTXVdd2zw
nad0nu67PyDR0f73yr0O9P0yqHok/iHY+SjqTbxQATO9hvW3Jp+gevcgfIqj
joyWB8qNv77oATwqP8lT1D9L9f8C3ZCaGUavfHFAweLK3f5KUMu01E6qOEf3
VcGb5WHzresvYPWjiQM1kfdr7069RPc/BktlxRUsVzbunPhDDTQNet8PHQ6h
fmqh3tDKVOlJGG6cuLAOsuIs7Z9yr1J/9aAgynggnhyJK8avV3gKp0oOmOvF
X6N+n4G8muy+hWkxON6Np3QDNGeF/7KQd536fw7HCmRf5TyKx+8KL6DEP8FT
2S2R5nkBf+V8MXI9n4QdxuMNNoK64Moag+hkmq8JtKUlmCtyU/B7uZdg0Kg+
aVtFKs37ChT8DPSmPUvDe/3jBV8DJ5XX9GfLDZr/H5i7uHNLkyAdJ9rLewOm
p/2fFUpkUh5vwdDldgVnVhbVewt9rDZn3QXZlM87GFHl+/QuzqH670BKw2z9
Rvlcyus9jEk2Cy4tyKP73kOvrCHHZmY+5fcBQsp0SjWZHLr/A0hZs9cruXMo
z4+w5usjkfoWDqaOj5fyEdKdoko+7+JSvs2QkG+11rGcizHR46cZGtrbvect
L6C8P0FtveqGDxcLcLyaxZVPkN9VrRnUWkD5t0BkrEzbJK1CnCgX0AJLtfiT
NkUXkkcrSO28F7WwvRC9Jgq2QnFsiNB7XRH5tEKSj+ZSa98idJ0Y+F+4VXHN
Jv9BEXn9CwujPFbZiPHQfuK0wYXCtKyTyCO/Nii54xPU7s7DiXEt2kFNt9mZ
k8Ejz3bor26qfviMRx4doGIpk755lEceHTCstrln1k988uiEsv50GYPNfPLo
hPRMr9VD5nzy6IIIvWnyy47xyaMLtmnVpVT488njM1RVFz8VC+WTx2c4HF2x
tjWaT3l2w2S/8Fuh8XzqpxtWu9RnTUvgU77dYPrSXdk2lk/9dUOkOvtMVjif
8u6BfWcCJeYG/ui3Bz49SG1JPsWn/HvgNn++zVm7H/33wAFnr9V8Az559MKR
nfoezio/5umFavMOY54Mn3x64VLNoN+tfh7N1wvyU3zKU2p55NULkrZr+s2y
eDTvF7DuOGyv48Mjvy+guivi7m4THs3/BcoU42Pyl/DI8ws0DJyIdespov3s
g0NyQds/3C4i3z6onZf6uyCgiPa1D7DyeUeVfhF594HkNIvSSzOKaH/74Y5I
Y4jZ00Ly7weNXHmuSUQh7XM/cKO/dIWYFtI+9MMR5+KrOLOQPAYgf4loUODj
AvIYANUclZ/2/W/fB+A4O0/2rWYBeQxAd6CbneUwlzwGwe51S+OfBVzyGASP
2iBFIwcueQxCfN8TOeEiLnkMwqRfpNf01nPIQwDR+5z0NAM55CGA0WwjL7kN
HPIQwKtOlqn8m3zyEEC/H9t0q3Y+eQjgQHG1xeesPPIQgppKwEqn6XnkIYRq
ZGpx3HLJQwh6lmN7p7zMIQ8hmE0fPHMWc8hjCHyk7DuVbmSTxxDkndd7dXhK
NnkMwWPN07kux7PIYwgSSmU7PjVlkscwtF0zyTmilUkew3DSlavSlZNBHsOQ
JBf37vicDPIYBo0n7x+q+qeTxwgYDx7V3tV9gzxGYM7Xu8kNVjfIYwRuNm9Z
VvY4jTxGYMfk4EFDTCOPr3DNR7jnTGEqeXyFpSYGWbYKqeTxFXSezFJXTEgh
j69QVVSe93ZOCnmMwvS5xoeNwpLJYxTsra0yG6cmk8cocA+JqTkHJ5HHKHTy
9psL/pNEHqNw9XJIUF1IInmMgV1QQ17G7ETyGAPXgw7qp9YnkMcYfCh2vT28
PZ48xsB/R2BxrU0c5cHA4E/hF63OXqd6DBwYNqk4Ex9L+TDwiNnp8r67MVSf
gSm+0nZLO6IpLwa+sI6fKZCNpvsYeF8u02iR/jXKj4H6Smu81f2j6H4Gegqv
PDxXFkl5MnHVp+WGqaMRtB9MjFuiGaGlFUH5MpHBbRhxvHyV9oWJ8Znb3YWN
4ZT3t/clP+pLrgqn/WHijDrvHF+/MMqfibw7TqWWr0Npn5jYfFA5tnJDKHmw
UDvSO31PYgjtFwttt2DidMkQ8mGhQCm63K2VTfvGwryES/CwMpi8WJhvsVZ/
B/cy7R8LZ7VW3E5P+vH/Cwuj1zm4GMQE0T6yUDZl6uZjMRfJk4Xt2RY/hyYH
kocIzjhWfnphwQXyEMENz4WtI5XnyUMEa5q6UbYlgDxEMOzXX5WPTwkgj2/P
dfgLytadIw8RrLz4WKHe0Z88RHBdOscuI82PPETw6ujKuR+bfclDFP/Q2DF6
cJUveYjiPNY8NtvDhzxE0c9MWm1ptDd5iGLG9ahNzO1nyUMU2xbPXt4keYY8
RHHl7jgdZp0XeYii2jTnVTVpnuQhiq4tAX+nnPMgDzHcPxS3odjpFHmI4ZuA
zp8PW58kDzHUfl1yL9jKnTzE0PjB+SfOdm7kIYby7NN6fLcT5CGG5dk5MiPs
4+Qhhnrsyoxl3GPkIYY2tYeK8l66kocYrtB9Y3Jnqit5iKO8R6Nnwtaj5CGO
Wxo0y6rmupCHOD6zna7okutEHuLoMKdTydfoCHmI4+za3ZJpTEfyEMeKfaNS
9uUO5CGOsp5eszmXD5OHOC77LUzL0e4QeUhgj9AjxWybPXlIYKeCqJ+uhh15
SGBaRPNA8Vpb8pBA09wlp+bBQfKQQKM928x/M7YhDwmcqrFJ64aTNXlIoH5U
0eSn4QfIQwItpVUVFC7sJw9J3HHPIdlNaIn/Bf75404=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1: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
BecotQDykMQ1V+MXvbL2x/8BfhwCHw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
PBRwA/9azvKUP8lDEUXXMm2/bQrG/wNKofrI
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 18828.206742749833`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], 
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(a\\), \
\\(c\\)]\\)=\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
         TraditionalForm]}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.}, {0, 18828.206742749833`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.667233064972546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dNdz", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["20",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"dNdz", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox[
        RowBox[{"-", "2"}],
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"dNdz", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox[
        RowBox[{"-", "2"}],
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["4",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"dNdz", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox[
        RowBox[{"-", "2"}],
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(a\), \(c\)]\)=\!\(\*SuperscriptBox[\(10\), \
\(-4\)]\)\>\"", ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657459900877266*^9, 3.657459917155704*^9}, {
  3.6574718825897903`*^9, 3.657471890797071*^9}, {3.657492182265938*^9, 
  3.657492188552174*^9}, {3.658004306997785*^9, 3.6580043201857147`*^9}, {
  3.658004418070109*^9, 3.658004419553247*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1: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
BpGHBMpsuoHmRx+QhySGDjolLXAJxH8AIufw/w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxd0nlYzfkXB/C7dO9NMmMpS5JKSI0IqYhzkImaQhIqiYQYJTVJlvYoifZb
tHxLC5OiZipFJAoxirQM0iJS2vdSTeX8/vl9nuc+97n3fu/5nPN+Hbn9toZW
HBaL9Wz0Nfb+/ydLxqtpW5Y/+GgpnbXJEMEfn6OgKP7qjs8XFFCsPO74GrFE
mH75hWdQ3Ur6PQWC8y4qms/XxuXjJx1kHh2ZsG/BFno+E2zSotJWqxhjjbNE
ik5NNug7CmU7y/bQ/3MhSZUlKAFL3DT+QB7synx1eEj8MNXLh71dSsJYvWM4
d+xxmScg9JvQM8vZjuoXwoHo+xIWLg7Yo2h2+VH3U5j354aQjDsn6b7ncI99
LE980ml8+WL8wKsZzT1ml87R/f/A36KrxWGGGxqOf1EM23IXnF3X4079lMBd
C9AU1njimvELX4NM+bCrQbk39fcGUjVOpZq9vYCLxq5XLIVDCzQiiyp9qd+3
IFd04npurR+OdeMsUQbLb+LEPS3+1H85dC2Q8txx9gr+UKiA6bL2HhyPAJqn
AiCavWbP+UD8tm2swUrIPWB8wN8niOb7Fzxlm+blXwjGH+XegeKEF736niE0
73tQb4pJdD4divndYwU/wERVmTjnY2E0fxW040JWwW4hjreX8hHqja9JPoNw
yqMaTGYmW9TLRFC9ahBUPHaJ7ImgfGqAE793q0/BVapfA6kSF+sl/K9RXrUg
Vpj9SFQ/ku6rhapmP/06ThTlVwcyug8i7VKj6P46iBRy5lgZRlOenyDMwjzb
pSkar4+NF/cJNP03xhqsiaF866Hf9sjUJy4xGBE+duoBS9ybf74fQ3l/Bvm3
NquUumNwrJrZ5c8QwWvvn6zIUP5f4MhaJV7uDgbHy3l9gQa3TbsWn2PIowHe
bO44Zc8weHq8YAPEnRyqcnnAkE8DnBFdInmugkG78YG/wl5DWVHrbwx5fYWG
QYkUo0EGD46fRmgoTHtqwYslv0Z4jFklgWKxOD6uWRNUmz4rFp0YS55NcHNn
qVgvP5Y8voGsTovI0WGGPL5BumVbu3c7Qx7NcEfgbHqomiGPZqhZNbd7RRFD
Hi1QXBpgKpXGkEcL2AlyIjRCGPJohQ3ZqWkJDgx5tEL+eu8jkVsZyrMNjlW+
/9lgEUP9tMGsbfIdZcP/y7cNauUtk/VLYqi/ttF9EVOTYmIo73ZQ8bSPnGYT
Q/22g7rQsYXRiKH82yFA975KFSuG+m8H2+bynBuXosmjAzJUKzclSEbTPB3w
ZYPwXV14FPl0wL2uxIMPpaJovg5QkB0scxVGklcHTFHz6LaeFknzdsJKVZ1+
nt818usEjVsPF23lXKP5O8HQXazb1/EqeXbCgveSk9W/RtB+dkEN56WWuUkE
+XZBwZxZu8Ofh9O+dkHmro6EPM1w8u6CgybnDY4nCWl/uwEVeYVJ04Xk3w23
5woXpnuG0T53w/WvBoN3O0JpH7pBL371rT6LUPLogYL0lPSbr0LIowcYKbXk
zrUh5NEDt73WeixMDSaPHvBcX1gqJxtMHr3w4Oj6TWaBQeTRCzOPnw96zQsi
j17I4U88GOMcSB694Kpbun1KewB59EH5fb0jE6wDyKMP8vZWxdXVXiGPPjg4
o8jbx/wKefRBgAuvdmfWZfLoAyf2pDv+mf7k0Q+2uRmc3TmXyKMfYm2UDjvk
+5HH6Oc34pkNry6SRz9Mdsr7YlTjSx4D4GC3VMSo14c8BkCvoO7e4qk+5DEA
OrfNpDpVL5DHAMBbQ5ci4/PkMQg6ieWNTq7e5DEIyknK3N2pXuQxCAPKPDeF
Ok/yGAR5p9xXq6Q9yeM7TIovWmlp4kEe32GaVMyXxEh38vgOvxWI3fhe70Ye
3+E245hwYLkbeQzBhtqKh9+8XMljCLQDvA59ynYhjyEY3Bdm2WZ/jjyG4FTB
2rqAlWfJYxiOtkjLWHDPkMcwzJ5nVW9V6Uwew3Bpo56P5t1T5DEMWmrF1ptj
nchjGEyypv7rFnySPEbgL5/WuHuXHcljBJIMqrkjQX+QxwjMXBJpNJlxII8R
mL+9w9ciw57yYKFWIr/VrvQE1WOhUarVXpsBO8qHhZnLDO8FK9pRfRZ6gOSy
ePPjlBcLNYt1VA5p2NJ9LJxaKPH0waNjlB8LJ8V56B02/Z3uZ2Hz8+CXxeyj
lCcb/2LvbvHJsKb9YOMVvcTO/U6HKV82hvqJc9V1DtG+jD4/ZSggQf4g5c1G
38f75Y+IWdH+sDGhztsofciS8mej5gex92Hf99M+sVFZweRSOX8/eXBwWH7W
Gb/Z+2i/OFgyJyc1aJUF+XBwwKer6HShOe0bB5PC3pSpL95DXhwMjvvpjkq8
Ke0fB+PkHp8IXWJCfhwcMfYvLn2+i/aRg9PVr9urntxJnhwMtGqNn77cmDy4
uKrTRlc4bEQeXNy3SOoxq3I7eXBxY/uKofw8Q/LgYsG6Wy9LMreRBxdlZ/ql
rsnZSh5cZDaf/Hg4dAt5cHF6aN1D3X/0yYOLmppd0snSv5GHCG5t7vk45KZL
HiKYMsTmVA9uIg+R0XkF83/y1SEPETR85/rWWvlX8hDBJf1Lg+w+apOHCE5e
/1y/9PoG8hBBuYfnnURPrycPETz64NYc933ryIOHha+3qDcaI3nwMKQsqMDt
77XkwUM1ZaHNtUot8uBh631pKesZq8mDh2EOETe5tprkwUPOBa3Gsg/q5MFD
xzONaWqWK8mDh7W+pju1h1eQx2g93+2bO28tJw8+3sh6ElpwfBl58DHjdoGi
2a+q5MHHtSbuZhG/LCUPPgYqiFcU6qiQBx8bQ5dpP9vxC3nwMa5IW/KEmxJ5
8PHeo1rT+KeK5MHHzj/2/2mltJA8BGggfs5PKX4+eQjQ/P1dS9BQIA8Bzt5V
5fZTjTx5CHBP9u8iWtFy5CHA6uSQNgc7WfIQYFyu4bKXyTLkIcAkDUbeO0Ka
PAR40SRp0pMbUuQhinktOc3SFTPxP5K3yDc=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 18828.206742749833`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], 
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(a\\), \
\\(c\\)]\\)=\\!\\(\\*SuperscriptBox[\\(10\\), \\(-4\\)]\\)\"", 
         TraditionalForm]}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.}, {0, 18828.206742749833`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.657471907873703*^9, 3.657487544587679*^9, 
  3.6575541832547703`*^9, 3.6579913201392117`*^9, 3.6580848962516403`*^9, 
  3.667073429675919*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"Table", 
        StyleBox["nM",
         FontSize->16]}]], 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["20",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{
      StyleBox[
       RowBox[{"Table", 
        StyleBox["nM",
         FontSize->16]}]], 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{
      StyleBox[
       RowBox[{"Table", 
        StyleBox["nM",
         FontSize->16]}]], 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["4",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{
      StyleBox[
       RowBox[{"Table", 
        StyleBox["nM",
         FontSize->16]}]], 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656014085107428*^9, 3.6560140874102917`*^9}, {
  3.6560141556980753`*^9, 3.6560141827194223`*^9}, {3.656014854829239*^9, 
  3.656014861629669*^9}, {3.666978525262501*^9, 3.6669785255881433`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1: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
TIjcXrISPRSIwsYuwly8Ev4B9aWxHg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
DyKopmY=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1: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
PHnhWfZCyVYbPRTILMdDvrkZC+D/pk6w0A==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
YBGNlCQ3Zs5q9JhHpHY3xyIXroa/ABrPvLo=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 0.0024565909227036078`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], None}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.}, {0, 0.0024565909227036078`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.656030625606039*^9, 3.656866605072321*^9, 
  3.6568943570645742`*^9, 3.656977594814142*^9, 3.657399724158411*^9, 
  3.667199697774815*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Tabledn", "[", 
  RowBox[{"R_", ",", 
   RowBox[{"deltac_", "?", "NumberQ"}], ",", 
   RowBox[{"l_", "?", "NumberQ"}], ",", 
   RowBox[{"j_", "?", "NumberQ"}], ",", 
   RowBox[{"znum_", "?", "NumberQ"}]}], "]"}]], "Input",
 CellChangeTimes->{3.656016862832711*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.656014025362221*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tabledn", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["20",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Tabledn", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Tabledn", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["4",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Tabledn", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1.686",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6560168791650877`*^9, 3.656016889628809*^9}, {
  3.6669785379290323`*^9, 3.666978538389473*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1: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
va2fD2ighzwxOKXSYhjAgX8ANaC9Jw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
9TefM7XY
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1:eJw10gs41HkXB/CZwQxqqTddZFGoVOuNxLqk88OqlCwi1xFyi2qMocFgUChp
qbUqtaLLmxJ58UoXJTZCeqKEldwa5JZxz/WNPX7PM888M/Of8zvn+znr3VhW
HjQKhVLx/TX/vngSXWrGJZgRUKgQ3WtZ+Bvk+YyYF9gtfk6FwejZ9WUHI0Cy
/qafgeQdGDC3CdU1X/w9GwyfmAT/sDcCNBdOHoxkaHruMlx8/iH4Ch3kKnUj
oC1EJntP22NQe+btlaex+P9ncPOP8EfDqhGwd+GBF1CWrzEar7hYrxQu84TK
YSsjQHH+cYWXcOzBWFqZ5GL9cih2T8kunuXDmKpTQsnoK8jqFSy/2snH+ypB
rVxCXaWaD9WvFw4cNNteYp3Lx/vfwI9yub9vSeaD1cIXb6FQtqfqfhAf+6mB
omy7q5X2fDBYuLAWVmeo19zQ5WN/7+BtUbrOujV82Dx/vep7cOGaB1uOhmO/
dRC4ktqsVBMO892EyHyAht93b8jLDMf+62F5gQpz4nQ4/KPRAAFCjvGwUzjO
0wCugpdlGZrh0Gc532Aj1N3TXrtRIhzn+xu6bgVccm0Og3/KNUH589Yo75ww
nPcj6DtzH+pFhUHp6HzBZlhXGH2xySoM5/8E5GOwo4NSGCy0l90Czp+91R4N
hmIerbDLNtNgsigU67WC8dQ9c5W4UMynDUwoxk36NqFYvw2e0FbI7FMMxbza
4XhMd4VtNw/vawfOmf4itxwe5tcBY9SkyEguD+/vgD//U708y4CHeX6GlloD
jR4aD27Nj3fzM/T+FOjPLA/BfAVwVPjblZ64EEi5Mn8EsPlBEPfOgRDMuxPY
MZlvr0uHwHw1p4ROYNk2Cz++Dcb8u+DGL/kT9heCYaFcdBeUyN04pWIZjB7d
oH8xp9R6WTDwFgp2wwe24b8b3gShTzc4bC3uqIoPAvbCwF/ApOpfter7gtDr
Cyx5xx1cwQgCz4XTAwWnHdadLOWiXw9w76Q+ZvK5sDCuUy/UPuDKtulx0bMX
+pUoG4dHT6JHHxx+/cY8L+ckevQBtynfUdb3JHr0g5tmmteODSfRox8icgui
pFoC0WMAZMMHnHIvB6LHADh0NJ2QtQpEj6+g83Rs1m5JIHp8BWmPrp0BfwVg
noPgVlemwgoLwH4G4bJZfYGbdgDmOwj3yyXajb5ysL9BOLv6S6tyBgfzFsLW
2Y1chisH+xWCbG9bWr8sB/MXAqu21rWv1h/7F0LvyKmzc+f80WMIisX/G6Rl
4o/zDMGW4miphFk2+gyBbFCVgnwhG+cbglCJlcM1bDZ6DYGt4G/vyq1snHcY
7o5emGF0+qHfMLRc6lhxPs0P5x+GJZXxLGtHP/QchhV3FQs5q/xwP0dA6ZFc
vuAmC31H4NNBjkGaHAv3dQQYRX1rZZJOoPcIiMelDjB/OIH7OwrqySXiZ2KP
o/8oHEqqtIqhHcd9HgUh+9dt8eHHcB9GIW7K7B5nyhc9xqDQLnOnb7AveoyB
vnFijP+ED3qMwbXxVE5EkA96jME7HSXVnG9H0WMc1tx+ljLJO4oe43B6dUAJ
a84bPcahatwmXfq0N3qMwynt0BmBhDd6TEA+3e/nsUQv9JiA2Dg5w92yXugx
ATd/MOhpvOGJHt+ffy91qULNEz0mwCeibaPUYw/0+AbyU7yAtD0e6PENXiWn
x/M/uKPHN6B2X0l54umOHt+glL6rnDNxBD0mQTv2wIvIc0fQYxKoz2XThxSP
oMckVFy/w635nxt6TMITKrdZ4YAbekzBnLlpXIvAFT2mgG1UTl0R4YoeU/BK
slY5S84VPabg81P5yFeFLugxDZkNjUtNbV3QYxpunJHPvTNwGD2m4cdIi+Qk
jcPoMQ23DVpVWVxn9JgBB0+Jh6SYiR4zAPH670WXMtFjBpwE1x1vOzihxwwc
u3d4Wv++I3rMQmXUAZdiiiN6zIK0bBBd184BPWbBzFJc4VyuPXrMglAywLBe
2h49ZmH/o6lNkyw79JiDzmsDFsJaW/SYA5e6hOBcHVv0mIPCSIpyYPoh9JgD
qXVXaaNLD2EeFJJ+pHEZk2eD9SiEf1VFj9VnjflQSJnR+peeLtZYn0J0WNdW
TX84iHlRyJGHWbttLA7ifRRyQdv08onXVpgfhby0kDqksN8K76eQ+sjjFnpV
lpgnlbTLR3vFWFjiflBJkatzsnK9BeZLJXGK10SsXCxwX6ikOsWUt6zhV8yb
SlJuXW3KGDHH/aGSo6Q6Vm2VOeZPJatPGYrwdh7AfaIS3f4PWQ+8zNCDRijJ
KhM5l/bjftFIjzl02L/ehz40YiPz/l2d2D7cNxrZ685r7TQ2RS8a6T9f4+Uc
sxf3j0aCq3xTj1XvQT8aeeZAza1fswf3kUburix4fNF7N3rSSKaUqEzCUxP0
ECEMrwqF9zIm6CFCRvyJuhb7F/QQIet9l19JqjFGDxEivUxBXlzbGD1ECN3p
aSUz1Qg9REjWVubTM5JG6CFC5BXWaiWHGKKHCJnZlXjFa4CghyjhG66Zy/Ig
6CFKmIIwb+YLQA9Rcu3YOX2/Z7vQQ5QM5k5viioxQA9RQhsXmG6r3okeokTL
p9CH90kfPUSJcHy7nveYHnqIkrR7dfWlMnroIUZYLe069rq66CFGtk0mRjLc
ddBDjLykjXSlJ/2MHmLE4YtWlnyVNnqIET9nRmMAQxs9xIjJ8zdd1qZa6CFG
2pqNlC8m7kAPMbL9XHbj6WZN9Pj+e311Tug2TfSgk4yyP3PTYrajB53k/bXk
bEe7BnrQibtv1tJ6Yw30oJPmUzFx+XfV0YNOlDx6LfRk1NGDToRVlQ8C6dvQ
g07oZza1RferoQedTFPEVXc0/4QeDCIoapqJrduKHgyiYmAj31u3BT0YJKiC
c9T802b0YBClj5e/BQ6oogeDnG8TZ3PoqujBIB+d/0hJ3LAJPRgk0y9BQ9Ns
I3owSFTI+fLY4A3oIU6WTL8Lmc5Sgf8D1yHDSA==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
6MEkgVXDDI6cGnrMII1+4sGXm1Xh/7KLquM=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 0.009085310762753372}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], None}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.}, {0, 0.009085310762753372}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6560307342080097`*^9, 3.656808024307572*^9, 
  3.6568944202170687`*^9, 3.656952000948144*^9, 3.656969813620867*^9, 
  3.6569776715973663`*^9, 3.656982351096114*^9, 3.6672069596258497`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
  "Needs", "[", "\"\<NumericalDifferentialEquationAnalysis`\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.655927323413548*^9, 3.655927341419536*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<GaussianQuadratureWeights.dat\>\"", ",", 
    RowBox[{"GaussianQuadratureWeights", "[", 
     RowBox[{"nd", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.655927577247011*^9, 3.6559276395805273`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CurrentValue", "[", 
   RowBox[{"$FrontEnd", ",", "\"\<NotebookAutoSave\>\""}], "]"}], "=", 
  "True"}]], "Input",
 CellChangeTimes->{{3.656019705190805*^9, 3.656019705192593*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.656030738904358*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.656806916461362*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table\[Sigma]", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["20",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Table\[Sigma]", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Table\[Sigma]", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["4",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Table\[Sigma]", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656806920096161*^9, 3.656806950999399*^9}, {
  3.666978544250895*^9, 3.6669785445551*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1: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
EwM9viBXk41eeJkz4P+vnik3
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJw10gdUk1kWB3ASUhTFCoJZmoI0VxhEFgt6nyjFhqLDqiiOIKPAYAFXR8EG
iFgOoIDr6kZG1B0RGUZYZ3VwaCIoLqCilIG0L4WQhJKEhF52Ya7vnJycJF/u
u/f/uwvCjm7/lm5gYFDz/9fE+5eTaFU+z2NGH7ywSlYFvkiDwsiAuNuUHj9n
g9+W0jzfX/Rg1Pzg2GqjR2DacDLQ88qX3wsgOu/ckyMhenCfPP+G2yYWGWq3
L88/h9zQxSNvWHqg4kwK/KhiGFHuC1C26fD/pVAT+HX63kId+E8+UAEVSflX
HVJ0WK8S1La23/uG6MB64nGrKjC9u0j3q7sO678BTsBldoqRDvoc96a/0r8F
Z8vkbwupXrzvHbgpLTM8fu2FutrJA8rXnUqzG714fz2wLpdtC47she2TX3yA
I9vyy9Rre7Gfj2DCupyj5fTC6skLG8Dfp0m2SafF/j4Bl0O9nVKvBaeJ6x0/
Q/TA6qBFuVrstxEyvDWanEQtTHQTZ9IERtf2jV4K0WL/zeB2xtKqcrkW/tBo
gewHxa3hJlqcpwXWZ9wqO6TWQGfgRIO/g1Td5fKuVoPztcJA0BtN6mMN/FGu
DehpbeqfL2lwXh7YmTjleoZroFI/UZAPo6cf+HK8NTi/AHrLQ41DbDQw2V6B
EKrLJQ6G42rMQwQN96enMwRqrCeCdc+8XoWWqDEfCpYtsQ23uqvG+hQsDd3g
7XVWjXmJQeeSkFMUosb7xEBlJkWdWaPG/CRwK2IT+4m1Gu+XQOZ6hzWuNDXm
KQVTQnEtqnvg4cR4D6QQMXUgK/FqD+YrA+G1z7ezt/bAndsTRwZmEeviI017
MO92uD8l7yjV1g0T1famt0PYP7s/Dd3vxvzlcHzr85cVUd0wWS5ZDomW7+VL
3LvRowMeWMwla0a6IH6yYAcMsm7+oK7qQp8OkH7w/ATXuyBmcmAF8Mtmi133
dKGXApzXHjAute+Cg5NHCTGlHi/l2k70U8KzoSLD/LJOmBx3rwqChTV2zNRO
9FRBwsUPAfrgTvTohB3RFQ6nnDrRoxNmdL+2Sh1QoUcX2F2nP3F/q0KPLhha
9nP2oX+o0KMbvrkz3OMcqUKPbrCpazkQs1KFHj0wVET38pmuQo8eWBuXorkr
UGKeaihzcM47V6jEftTA+c28VXZRifmqYZVrY3PNLiX2p4alCa4xi5coMW8N
7G6sl82kK7FfDZjZc5sONyswfw3kn+R1b/hJgf1rgBGhS7qbpEAPLdT43KqI
CFbgPFoQLN9VneumQB8tfLb1Gg+ZqsD5tECbFl51hepALy38J5DVa1HcgfP2
wlazjamOmR3o1wsHnCILs6M7cP5esCqL+OWCbwd69kLm4SKrWpsO3E8dXPDa
UZgyLEdfHbhsSRY9bpLjvuqAuWtNsGuRHL11cOQVZ8A8TY77q4epp6Vlh6Lk
6K+HDGdhvLmfHPdZDzZTatc72clxH/Rg9ef+zVyaHD36YPqz6Nkxwnb06IMK
0/Mybkk7evTBuoeZrQu57ejRBx4gspsS344e/eDWNn+2T3A7evRD//sOj7YV
7ejRD+VLYkjV/Hb06AeBc38bc0iGHgPQabRBd6tVhh4DsHFGR17CSxl6DIBD
3HHZb1wZegzAFSlX4XtOhh4D8OhMidp6vww9BoFWOdVns7cMPQbBftmPKyrt
ZOgxCNr0/o1X2DL0GISVdw9W31JK0WMI5lfHb+uuk6LHEPDrxsPSC6XoMQTu
2r7MCzel6DEEdTvNrQpOS9FjGIjJ39457pOixzDsb9yzXOEtRY9huNGgilM5
SNFjGPyvTbVeaixFjxHoOmGaV6KVoMcIvNHdqL/aIkGPEdhq874pq1SCHiNg
nHFFSD2UoMcobM/4nhd9TYIeo7BSm6HyiJWgxyjUn0lcD7sl6DEKPzlzf7hE
JOgxBrP2+7sxHCXoMQbivxwML58pQY8xkEitTz3vF6PHGKw6p8+UCsXoMQbW
ob6PA9+K0WMcPKedKlU/FaPHOGTbb8+quS1Gj3FQM5vXtCSK0WMcVov6mZxo
MeZhQCTfCYJuBn2pZ0DK9z828QUx5mNAOkvst9k7falvQF7NvDzmNVeMeRmQ
MIrrkjJK4X0GJCDYLWpMTmF+BmRgTlNSQQOF9xuQhYc5VZdKKMyTRtgtxUVZ
uRTuB40MLMr/7mMmhfnSiHKWAWP1eQr3hUb4d3RvPkdRmDeNpJcHHb/zVwr3
h0Ycg+ZtTvWmMH8auRFzcUO+C4X7RCMKp7q5oxwKPejkaaPb5hNsCveLTsJy
r1eY6kToQyecQJdauUiE+0YnZ6mcUUGdCL3o5KtKV+F4sQj3j06MR+7d980V
oR+djHPn3Ht5U4T7SCe/B5Zd3ZEkQk86USTum2YeI0IPQ9IY20Zo34jQw5Bc
Tiizn7VFhB6GJD+h+Nj6VSL0MCQZppaR95xE6GFIjLZvDVxgLkIPQ8IS+r2o
YonQw5AYLlIprFVC9DAkJVdlR/VvhejBINUz6tcaPxKiB4MUcD53nUkWogeD
tPKyLOzDhejBIMf+O2g6Z50QPRikNnbWqo0LhejBIP+aF9BVRROiB4O0Ofzo
f5oSoAeD5Jje9D9RIUAPJvnTi5Hl+TkC9GASs7nT01wTBejBJA28eA9ZmAA9
mIS28OgK/joBejDJSb+1FiaLBOjBJIk23OFklgA9mGSoYc8mzw4+ejCJ/Ktm
R8t3fPRgksKn+4z88vnowSKvG88kPkzjoweLjPls+AQxfPRgkVa/jRzTr/no
wSLK6thRa08+erCI8Int7jAOHz1YxDZ+V1rrKA89WKRUoXtyg+KhB4uEQ1Dx
qSoeerBJuaIkOOMxDz3YJJZwCySpPPRgkyUX3FuiYnnowSZLd053sN3JQw82
8QqVvpjhxUMPNlkeYJbitoCHHmyy2eZs9XkWDz3YJCv+73m0zjb0mEKkjMDF
Lz+2wf8AYdseLg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1: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
lU5noocxWZo2w/qIKRP+D9+PKhE=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
1LywZML/ARD5ME4=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 1.5981560320255421`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], None}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.}, {0, 1.5981560320255421`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.656806955507203*^9, 3.656806966859191*^9}, 
   3.6568073378654003`*^9, 3.656807403104287*^9, 3.6568944339150047`*^9, 
   3.65696974679772*^9, 3.667206973462616*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TableD\[Sigma]", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["20",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"TableD\[Sigma]", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"TableD\[Sigma]", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["4",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"TableD\[Sigma]", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6568076000370617`*^9, 3.6568076204598093`*^9}, {
  3.6669785478967047`*^9, 3.666978548154359*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1:eJw10gk41PsaB/DZzEjREWkTpZLqRHFPu94fktKqhRxLut20Iie3hJabOFG2
e2U2w4wxxm6Q8lD+pUs6nNJJpcVaiEzZ9+UcztvveeaZZ2b+8/7e9/t5F/7T
a98xBo1Ge/rXa+L9+5FsUuS73cqh8vWCvtjlh4O3R9CKWvfvn+NA9Xk4K9oi
h1J7Iz1rriYHR6L2LEj3+++ZEHbEek1efzZlNnlyYVisFbXoZTY+fw8Wmttp
vcjMphr8tDNtGgpAXTsgtCQ0G/9fBLOa6h+MuGdT2yYfeAQzEvyjAqy+13sM
93hGJlYLsin9icf1SiC8LWONw6gC6z8Bw8hzWdnvFFSfkXNEcW8ZcMx0rR3y
FXjfb+DUdunw7hgF9XvF5AFhVLFFpI8C738G/n84JBvsV1D7Jr+ohHGPHdUs
UwX28wLGblwPWaWpoMwnL/wDpEumDZ1syML+XkKV4ZCXhiSLWjZxvVEVxFTW
7HY8koX9voLbrr1ko0EWNdGNn/Zr2Giu8Cj7mIn9vwGfQ0cbh2SZ1N8a1aBf
GGNTcSIT56mG7LnWZvBjJtVuN9HgWzA8fLHapSMD53sHtn4jLrPzMqi/y72H
RzqX6n39MnDeD5DoX+3uSzKox70TBWtAuzlvuTYnA+evBavYgGGHZ+nUZHuZ
dfBobEvEpph0zKMeit/XsB+6pmO9erC7H6+oW5qO+TSAMVurWNCZhvUbwCzX
s6GzMA3zaoSyU3pWzcFpeF8jrPs1KcljXxrm9xFiXGacidFLw/s/wus4RdHe
L6mY5ye4FKBs4+enUokT40k/gYejfV1IcCrm2wR+G4qP0w+mUgL+xGmC54M+
W1QXp2LezfDftyYlku4UaqKac0QzXHApW1r5OAXzb4Fo41abwOgUarJcUAts
/g9lSR1LQY/PcKP1RFXk2hTKf7LgZzB5o1hfNyUFfT5Dx13LjoIPyZT35MCt
4FlQmDVfkYxerdDg9MSXfT2Zcp88bbBfbWG916Fk9GsDNz0q9ODKZGpyXOcv
IHqfz3nMSEbPL1CU63xTXC1Hj3aw2rFfl50lR492UP0mc6gPkqOHEtizZzmb
ucjRQwmW3rH3mT/J0eMrTJ3zLNJWXY4eXyHS1opOa05Cj2/wovbOwRVUEnp8
g+Vz8tpKeUmYZwcI16aaV/6ShP10wJyQo3V7diVhvh0QMP+K/zqjJOyvA/4h
1w2JYCZh3p3gnLJzzu46GfbbCYxK7l3vQhnm3wlfTbW4NJ4M++8EY/rDmC4f
GXp0wXxpacSufTKcpwuOqztc5KySoU8XuPg8+MVIQ4bzdcHdwNiC+PZE9OoC
bb8tJwLKE3HebjA9q16Sn5qIft3Q2ap8ZReaiPN3g+cN6Q+WpxLRsxvc+Z7W
4baJuJ89QLucI1y7IhF9e8A+2DPObFoi7msPXKwx7QpWStG7B8pn6vStfC7F
/e0FsU/8vRXZUvTvhelLmvac/58U97kX1mtd15l3Xor70AtaN5Xaqo5S9OgD
1092dts2SdGjD04nLKdV60vRow+U9zVrc5lS9OiDgNonF2paEtCjH/SGi/t2
VSSgx1+fGT/rqGcnoEc/VEs7WqfGJKBHPywKCeY5+SegxwC4HZXVKd0S0GMA
fhq/Hv1kawJ6DADdyyKn8ccE9BiA3z2in9loJaDHAFQ9Ue7vGpSgxyCYWMzz
fFcvQY9BGB28PpdWJkGPQYiZf9/PPUuCHoPA71GsnMGVoMcQSMLKd49dlqDH
EJSe3nh84XEJegxBo/8Ou8A9EvQYgq3cxScM1knQYxisZ4dmDy2QoMcwaLqf
s5yhJkGPYZgadTX/cLcYPYbhPOW0vvmDGD1G4EDIahdpqRg9RkB+Zv9RgUKM
HiPgbP/gTJlAjB4joJ8j+MEoSIweo7D+Di/+kZcYPUbhQH9UQOTPYvQYhX95
9tSGW4vRYxSGQ8xyH64So8cYFGrcOW6kK0aPMQgt3tD3kCNGjzG4MH7SU7Ml
Hj3G4Jaz4T46FY8eY/C+zG2JPTcePcZhMLO8iX02Hj3GwWTJkPm07fHoMQ59
Znf6/Q3i0WMcHEJ8zm4cicM8aKSxLnjTkddxWI9G6DG6rJeKOMyHRkheGVt+
Mw7r00hIb7fXU/c4zItGThwO32xhGYf30cgyeYO3ml4c5kcjJkVdhiuGRHg/
jSwc9DEzfy3CPOmk2oh5xilXhPtBJyZvL3/2jhRhvnRy4MNevdceItwXOsmT
6TRc2SHCvOkk7FDE1avLRLg/dLKpwqDrN44I86eTLfniHNfmWNwnOjHt4vpu
KIlFDwZhueb6OSfG4n4xiIaBvWZ5YCz6MAil2mJ47Wgs7huD+K4Snr1qFYte
DGJzz6CleFEs7h+DBGn43bRlxaIfgxTpVDya2STEfWSQtBKX3AWlQvRkEBVB
sdJfLkQPJilvDWNOCRGiB5MsiPOzqT8lRA8mORbo067cKUQPJrm8tmp8s4kQ
PZhkTmPs2AtNIXowiestV5aoR4AeTLLXePtA+hsBejAJVeC7eqhAgB4sYnJg
45qLcQL0YJFftwZeWXVNgB4scn7W6f8buwvQg0W8WK803GwF6MEiaTbSmApj
AXqwyILb3JlntATowSLLBvVebh/goweLNHI/RdjX8NFDhZgZvV0mKuajhwqZ
vnrnG/1kPnqokNJoQ3ZVGB89VEjGvyWye+f46KFC9B5/tXrnyEcPFcLwLzBa
TPjooUJ02WZf4w356KFC5LNGtjqp89FDhYQHtmpY9fDQg03u1E6pO/Sehx5s
8vIjb5uomIcebLLao7VQO5WHHmxSuSFrXkEUDz3YRHJwNDrsIg892OS+kjEQ
eYSHHmyiKGxhlW7noQeb1PJCQvRNeejBIbedT3qlz+WhB4c8tTm/+SSThx4c
km1frrernYseHLLzockNx1dc9OAQ/iWphFvERQ8OyfvQsXZAzkUPDikeu+Z4
K4qLHhyybWn1dAt/LnqoEjqn3sbgGJf6E1SFRzI=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
bTJ6GJD6Z1592z8mo8cIEmxJs2osT6b+B7fGXfY=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {-0.08266586490043105, 0}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], None}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.}, {-0.08266586490043105, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0495], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.656807645917367*^9, 3.656894455163844*^9, 
  3.656969730622802*^9, 3.667209580714775*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6568077048245296`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TableFmasses", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["20",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"TableFmasses", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"TableFmasses", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["4",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"TableFmasses", 
      StyleBox["[",
       FontSize->16], 
      RowBox[{
       SuperscriptBox[
        StyleBox["10",
         FontSize->16], "0"], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["0",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["10",
        FontSize->16], 
       StyleBox[",",
        FontSize->16], 
       StyleBox["1",
        FontSize->16]}], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6568077074892883`*^9, 3.656807716309535*^9}, {
  3.666978551833827*^9, 3.6669785521373253`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1:eJxdlTtMFFEYhWcfM2OoqTHGBmtrstNpYwGl2cpEW6XFmlZqLWwwodvGQmJh
osT4iBrxAfh2AWGRXVh2d/YFu6szR8+feyYh5HDu/P+9/3fucObK9ZmrWc/z
Xvz9SX7/f7pnl3qXL9UKyxPz+9PLtwquvks9tr54Y2psSfwS9fn0uV/oOOsf
0C/PjZculB/Sx/uP6F9MFzymj3or9E8nyyeeSv1n9NuTxYUn8XP66PeS+vWr
9JH+bwr9f3om/cPbQuzsZ5Xrp9KG7+S87+mfS9pPfqDGfj9SJ7uZG19jP+x/
nT5obMh5NuhXp5MNfpJ5fqaPcl/kvF+5fiVOCn6T83+nTrdX+sH1mMdPqWca
8ylL/bLMa5PzRL9N4bsl/bdYD/Pcpn8vOd7ituThF/Wd28ljGvPeoU6qFRd2
JD+71Gm5+V3hUeH7N9OCFeFT4flm0wPv0QevPda7lj6/hZ/p9LjFfeFpGjyq
wqMqPGrCo8a8gceB3N8D4XEoPA5lnnXJR53rMV/zsb+6fD+O5L6bxvyPZP+m
waMh+WoIn4bkuyG8GnLeJn3wa8r5m8KzyXkiny364GsaeW0J75bkNxb+Mfsj
z7HkIRYebeHRZh7Boy082pL/jvDoCI+O8OjI/ejSB48u+4NHV/LWFR6mwaMn
PHqsBx494WEaPPrCoy/fj77wMB88joWHafAwDR7HwuNEeJgGjxPmBzzMB4+B
3OeB8BgID9PgMRQeQ9YDj6HcD9PgMRQeI/rgMaIPHuaDx0jm4UVuPS+Knfl4
kVvfNOblRX2nn/mYn2n0t36YZyZy82Ea881wP8hLJnL/H9h65Mc05m/rkSer
Bx7ZyM1XNnL5mI+8mQ9e5iN/psHP1iOPpsHTNHjkIvf7Zxo8csIjJzxMg0eO
9cHDNHjYevDIC4985ObdNHjYevAwHzzynDd45IWHvQ8evvDwhYcvPHzhYRo8
fOFhGjx84eELj0Duh2nwCIRHIDwC4RFE7vclEB6B8AipwSMUHqHwCDlv8Ajl
foRyP0yDh9UDj1P0/wBh0XxV
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxN0ntMlXUYB/Bz4XAYNWvFUlaCzkozqTlv8Qf7PrqlppmKstQYm5a3Lcvb
monZH4rmikuUq9SVAyegeEDucBA9IlcBuXNERO73O4c7HOq879q+78bOvpz3
PL/f83yehfu+9d2v02g0Bf/9OT7/f8YXRU3s2dKLNI+g7u1pIcjfwvlveJ9S
s2tN5FEf1yhsjuTvTZgqUfMK5UnEpil+PxUfLYlWcuNpN9OGxgzk+kXT77Ng
O6fmjcoLFlgSoqleNrya1OzpeN0jB96vxVD9PLSuU/PoEv/QhyP58DoZQ+cV
Yu5NNRcXKQ+uW2Po/BIUvnRLyb7KP0oRglt0nzKMnVCzj3JgOWajb9H9KhBZ
r+b3HMcvqUSH2226bxVKNqvZcZvTbtXYee423b8GJ81qVjWs8Lbdpn6suOoV
q+Se7Y4LPsXVg7HUXy18ItSslnuGs89jqd86BLjfUXL2iKPgc9T53aH+6zER
rmbleqYXMJfeoXk0YN4rJqrXgNc/M9F8GpEQbKL6jegpNtG8mpAzJ47Oa8La
bXE0v2bsCY+j85vhVhVH82zBkXnxSr7haC+yBQf942m+rbBfV/OVvxxPK1a1
xdO82+C67K6SHdX8Q9tw9vhdmn87wtPVrJQLasd6bQJ5dODaJ2oOVAp2IDg8
gXw64Fmn5mNKw53Y8W4ieXVi0TE1H1CeLvyWmUh+XbjpkqRkpV3/bvj6JZFn
NyIjksijB78OJJFHDzyRTB692BKSTB69cK9PJo8+BH2QQh59CPkxhTz64V2W
Qh79OL8oleY5gCPfpdJ9BmArSKX5DmC+RxrdbwAtx9No3oP4ND+N7juIHR7p
NP9BjJ9Mp/sPwqconTyG4Pl2BvUzhBtnMshnCHlVGdTfEC59aCavIXRfMlO/
w+htMZPfMIIlk/ofxpNrmeQ5jLiJTNpPG7w+v0e+NmxOvkf7aoOLWxZ523Dg
RBbt7wj2VWSR/wjsK+7TPo9gzeX7tA8jcBu7Tx6jCNn9gDxGEZ35gDxGsXeB
hTxGkXreQh5jiOu0kMcYNmx9SB5j+CH5IXmMwfetbPIYR/65bPIYR213NnmM
I3TnI/IYR9O9R+QxjurFOeQxgUPhOeQxgT9ncshjAocP55LHBGqrcsljEp3r
8shjEn/E55HHJNo88sljEpXB+eQxhS9n8sljCqFHCshjCl/UF5DHFHK2FpLH
NMosheQxjcCVj8ljGrlRj8ljGqY3i8hjBivDishjBv6GYvKYwTuBxeQxg58H
i8nDjrBDJeRhx+qGEvKw4/tdT8jDjoCyJ+RhR9OmUvKYhT6nlDxmUYAy8pjF
YnMZecxi6ZpymodGChLLqZ5GXJZX0Hw00m6qoPoa+cqrkualkQuxlXSeRtYu
q6L5aeSf2Co6XyNXvappnlpZFVdN+6GVY8traL5a2ZhUQ/uilew1Vpq3VurN
VtofrVyWpzR/rfTmPKV90krT5lry0ElgeS3tl04Sdj8jH50ENT6jfdPJ5OE6
8tLJnOE62j+dWM48Jz+dvGGsp33UiUt4PXnq5Nr8F+Shl4KYF+ShlyurG8hD
L66PGshDL+6+jeShl/yGRvLQy9yjTeShF72mmTz0EhbWTB5OkrmwhTyc5EJi
C3k4ydDHreThJHZrK3k4SdTXbeThJP2advJwEuvldvJwkr3vd5CHQS5aOsjD
INt2dZKHQRL7O8nDIOaLXeRhkIAF3eRhkIj0bvIwyE87esjDIC/39ZCHQZZe
6iUPZ+l7u488nGWrpY88nGVbQD95OEv/VD95OIvXlQHycJZXvQfJw1l+sQ6S
h7PEnBoiD6Psdx8mD6NYMobJwyiZ/jbyMIrfrI08jPJ7xAh5GOWb9aPkYZT2
rlHyMIo9dIw8XCRl1biS/wXTFoT/
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1:eJxV0ntolXUYB/BzPyqEViNo1Gq49/f+3jdakAXCsO8TVlakqBWVDSFDu1Cs
CKUMhlT7oyz3T1ITSUJFi5hYyKQbptZKcmXeLdeZl7mru52zc3a2ndU5e4vv
88I4fHfe8/x+z/N5KlfVLV8dCYVCv/z7V/z878nN3TW2YnE/9lc09C7bvwl5
lT9BuGo6zzq9/ZUFs3YhUsXfNyMR5Hml5yvMVO+3YHaQO9aXNS/q+BrXq99/
jxuC/GDphR9QruodQkWQbym+XvEjqlT9Vtggj9raxoOZn3GbOu8I7gjy0V9L
D+ap89tQE+TlpX/8/n+evs8xSJAXlA78A/ep+x3Hw0H2isfbE1ii7nsSjwa5
eJv1ZafwpLr/aTwd5GmNM1il+jmD1UHuW1a84Fm8pPo7h7ogT5f7E2tVv3/h
jSAfyhQLnscG1X87GoJcul7z33hfzSOFRlUvhc1qPh3Yqup3YJua1wXsVOdd
wOdqfhexV51/ES1qnpfwXZB3FNvbfgmH1Xwv40iQtzQVn8toU/PuxPEgF6vV
NnbirJr/FaSCXCrXcAWdyqML/UF+s1SwC2nl04VckF8tNdyNsMNe3UgEeU3p
6cE1Dvv1oCzIpXZre3Gjw569qHTYow/WYY8+VDvs0Y+7Hfboxz0Oe1zFQoc9
ruIhhz0GsNRhjwE85fA8B7FS3WcQaxye7yBeVvcbxDqH5z2EenXfIbzj8PyH
sFHdfwgfOuwxjCbVzzA+ddhnGJ+p/oaxx2GvYbSofkdwwGG/EbSq/kfwm/Ic
wTmH9zONlPJNo9vhfU1jUHmnkXd4fzMIG/bPYKbhfc7gOsP7kEG5YY9RVBr2
GIVv2GMUdxr2GEWNYY8s7jfskcUSwx5ZPG7YI4uVhj1yeMGwRw51hj1yeN2w
Rw5vG/bI4QPDHmPYbNhjDFsNe4xht2GPMXxp2COPbwx75HHYsEcebYY98jhl
2GMcKeUxjh7lMY4R5TGOgvKYwAyXPSYwx2WPCdzksscEjMsek6h22WMS8132
mMRClz0msdhljwKecNmjgGdc9ijgRZc9CljnskcBb7nsMYV3XfaYwscue0xh
m8seU/jC5XmEpEXVC8kBNZ+QHFX1Q3JSzSskKXVeSHrU/EKSVueHJGx5nmGZ
bXk/wlJueb5hmWt5X8JSbXneYamxvD9hecDy/MOy1PI+haXWskdEnrO8XxFZ
a9knIvWW9y0iGy17ReQjy/sXkR2W/SKyx/I+RuRby54RabXsEZVjlj2i0m7Z
Iyrdlj2ikrXsEZWYxx5RmeOxR1Ru9tgjKp7HHjG5y2OPmNzrsUdMHvHYIyYr
PPaIyfMee8TkNY89YrLBY4+YbPLYIy5bPPaIy26PPeKyz2OPuBz02CMubR57
xOW8xx5x6fHYIy5Zjz3iEvHZIyHX+uyRkFt99kjI7T57JGS+zx4JWeSzR0Ie
89kjIc/67JGQOp89klLvs0dS3vPZIylNPnskZafPHknZ57NHUn7y2SMpJ3z2
SEq7zx4zZCDI/wA4Fhun
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxdlTtMFFEYhWcfM2OoqTHGBmtrstNpYwGl2cpEW6XFmlZqLWwwodvGQmJh
osT4iBrxAfh2AWGRXVh2d/YFu6szR8+feyYh5HDu/P+9/3fucObK9ZmrWc/z
Xvz9SX7/f7pnl3qXL9UKyxPz+9PLtwquvks9tr54Y2psSfwS9fn0uV/oOOsf
0C/PjZculB/Sx/uP6F9MFzymj3or9E8nyyeeSv1n9NuTxYUn8XP66PeS+vWr
9JH+bwr9f3om/cPbQuzsZ5Xrp9KG7+S87+mfS9pPfqDGfj9SJ7uZG19jP+x/
nT5obMh5NuhXp5MNfpJ5fqaPcl/kvF+5fiVOCn6T83+nTrdX+sH1mMdPqWca
8ylL/bLMa5PzRL9N4bsl/bdYD/Pcpn8vOd7ituThF/Wd28ljGvPeoU6qFRd2
JD+71Gm5+V3hUeH7N9OCFeFT4flm0wPv0QevPda7lj6/hZ/p9LjFfeFpGjyq
wqMqPGrCo8a8gceB3N8D4XEoPA5lnnXJR53rMV/zsb+6fD+O5L6bxvyPZP+m
waMh+WoIn4bkuyG8GnLeJn3wa8r5m8KzyXkiny364GsaeW0J75bkNxb+Mfsj
z7HkIRYebeHRZh7Boy082pL/jvDoCI+O8OjI/ejSB48u+4NHV/LWFR6mwaMn
PHqsBx494WEaPPrCoy/fj77wMB88joWHafAwDR7HwuNEeJgGjxPmBzzMB4+B
3OeB8BgID9PgMRQeQ9YDj6HcD9PgMRQeI/rgMaIPHuaDx0jm4UVuPS+Knfl4
kVvfNOblRX2nn/mYn2n0t36YZyZy82Ea881wP8hLJnL/H9h65Mc05m/rkSer
Bx7ZyM1XNnL5mI+8mQ9e5iN/psHP1iOPpsHTNHjkIvf7Zxo8csIjJzxMg0eO
9cHDNHjYevDIC4985ObdNHjYevAwHzzynDd45IWHvQ8evvDwhYcvPHzhYRo8
fOFhGjx84eELj0Duh2nwCIRHIDwC4RFE7vclEB6B8AipwSMUHqHwCDlv8Ajl
foRyP0yDh9UDj1P0/wBh0XxV
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 1.8313855888429746`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], None}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.}, {0, 1.8313855888429746`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.656807717748694*^9, 3.6568079475749197`*^9, 
  3.656894455301984*^9, 3.656969701322609*^9, 3.6672095809675922`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tablercom", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"20", ",", "10", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Tablercom", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"0", ",", "0", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Tablercom", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"0", ",", "4", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Tablercom", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"0", ",", "10", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657287847068132*^9, 3.6572878888598967`*^9}, {
  3.66697855571484*^9, 3.666978555973024*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1: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
ZSXaueQxCQ02b49OW56LfwFws/50
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
6KFCPEp/My3Vk6KHKjmst+VqhpmU/BceUvm+
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1:eJxd0nk81PsaB/CZwUx3og3HOZUka8s92p1Cz9dtUafFVrrdY9KiTacS55RL
SickOfY6lkLGGsOY7TdSUrKlZElJqUiDKLuxDTd6zj/3+3rNa14z85vn+zyf
96N74JTdIQaNRiv7+pp4//8jnefXbisNhpPxPzao1lmTb5/joK8p00r3jhNh
v+S6WrBTgc3Tn64mPoK/Z0FufHfPO+9TZMXkEcL9w5ekubHu+DwFaxrK9Otd
z5JGT40sq8Y7QDef2bp5nRf+Px/+8yqxc0zpAtk8+cADWL6pZPnIvotYrxCG
Vgt3appfIjoTj88rgmPLLPW3qfth/RJgUh2ecTJ/MmDsGPKwvxSkZvcLpkoC
8L7HYCqTtURcDCRPn0weUP9uyVHTLUF4fwW41m5dK1cNJnaTX1QCS9Oi5vmT
EOynCkwXCKcfexRKLCYvrIbjG5rzPRLCsL8akBWEN8R4hpOFE9cbP4fcOeHM
KrsI7LcW3O7eZWovjCQT3XhqvIBNFVfrfRSR2P9L0EsQZYw9u0a+KdSB7qKn
FVEJ13GeOvhj1VCB7am/SIftRIOvwNT7lsES8yicrx5kA6seLWJFk2/lXoO1
zaifTWU0zvsGDALb3RP+iiGF/RMFG4DrcU2kzYnF+d/C5+p5geXzb5DJ9rLe
gRNnkw2v6Qbm8R5s4r08ixNvYr33cN1LJXz2/jjMpxGutv+0kqcdj/Ub4TKz
YMYfdfGYVxMoxIPuFZsT8L4mUGffeOSTlID5fQCve0Wte8YT8P4P8F559Pkv
e25hns2QUD7nUoDgFkmaGI/bDCXNmd2N7ETM9yN4q63TczmQSGKiJ85HUL9Z
qq2Xm4h5yyD0zpxP06ZzyUQ1xxAZBHbsiDBx5mL+LTC91szwspRLJsv5tUBn
6xhfSzUJPVrhh67z//qwN4l4TRZshRezR9ra+Uno8/XzmXjJCkYyOT05cBto
ButQd+2S0asNfhhyGApITCaHJ88nGOZ1XonpTka/T+Bfq/ZbL6SQyXEd28Go
i/bg2p8p6NkOAo3hs5fqU9CjA6rUS27mG6aiRwdEbg1fucUtFT0+Q5g8xczg
Xip6fIaZ5Wuyd7LS0OMLPOWuCnhlk4YeX8DIQPWuODoNPTohUzXQvL0xDT06
wW1WttxrYTrm2QXDxldeHnNNx3664GL3rIcSSTrm2wWRZprRzqPp2F8XnDky
de3vlrcx72747Ms+/8nvNvbbDQv+kbGmuOw25t8NPHmfOVstA/vvBm/HHfZS
6wz06IGd/cfXV4dl4Dw9cLp9/bM9NRno0wPJ5xkiG41MnK8HpvjRbkt3ZqJX
D+zj5jlHRGbivL1wTa8yvKkmE/16YcS6ryF1Fg/n74U5Zv2fmm146NkL3W9E
e2KDebiffZB+amHRk3Ie+vYBXc4p9JyShfvaBxZv3T+mbMhC7z4Yik6m7Hyy
cH/7oczs5wcX8rLQvx+uy175mgxk4T73Q5p674WDS7NxH/qhNWrfYm2XbPQY
gPH980c43Gz0GADHCpe9Rm+y0WMAsuwbnCzYfPQYAI0ql4dLDPnoIYdKvsvl
Jks+esgh98z3HCcOHz3kwP75YCfXg48ecij9rreFH8FHj0HQe/3PL/5ZfPQY
hCNzLVINy/joMQjOF9QloR/46DEI533c8ooUfPQYhMdWXbuKtXLQYwgqril0
I5bloMcQFBS15y7ZmoMeQ7CoqUcc4ZyDHkPAKTPNLPXOQY9hqNhbvfTJ9Rz0
GIZlJTW1cdk56DEMDzO3LbYszUGPYai8Yn9f+D4HPUbgpJw9Tz6Ygx4jcHgs
tWrqTAF6jMCjox4HeowF6DECDrPaHDKIAD1G4cbqoBWm/xagxygU3NHxun5K
gB6jsNstIqvMX4Aeo8DjTN9edVOAHgoIeT9UwxMJ0EMB57oU+U7lAvRQwJ41
MwNaGgXooYDnpp6pGwcF6DEGQZtfRHhOE6LHGJzI0Hnory9EjzE45ylMdlkr
RI8x8InYzTe0EaLHGCjciV3eISF6jMMUltawsZcQPcbB13lMwzVUiB7jYHcx
elpYshA9xsGkcoZt0B0h5kEjbdVaGw88+7sejXBje2zVm4WYD43ILLwa4gf/
rk8jHBOjbVPURJgXjdCjVOnbdUV4H41EhrVwTq4SYX40ssVBp/DXLSK8n0ai
9paHbOaIME86YZ+U6jJOi3A/6EQj5ERttK8I86WTJsVS5owoEe4Lnegx1KYd
yhBh3nRSSj3fGJ0vwv2hkzfFxiq8KhHmTyfb2ecSE5pFuE90MmrwvftvchF6
MMjrqQvKjdli3C8GOekap7g3V4w+DHLrxzOOK03EuG8Moh3r+VOQpRi9GARK
jjUW2Ytx/xgkV9iT3HhIjH5fn3fPrXl3Voz7yCDHzH+hCq6I0ZNBMk+43fCN
FaOHEhk9H/N0MU+MHkqk7aN7pCRfjB5K5Hxb6hqDSjF6KBHNIx3KHo1i9FAi
WgEsi+weMXookaajNUblShL0UCKdfEv2Ew0JeigRz7lOxgIDCXookxdyhyLv
1RL0UCb+QWf0TKwk6KFMjvss9S3eLUEPZaJpNN94w1EJeiiTgCJV6zQPCXoo
k8DSDtPeAAl6KJOMz63zDaIl6KFMrJycrNalS9BDheQUylrW5UrQQ4VEgO06
ozIJeqgQ2fFsP3mdBD1USDDYD2a3StBDhdR2VD+zGZSghwppE0zdWM+i0EOF
pHD1Q7dpUeihQkScsNZUQwo9VMiWPA2/jlUUejBJ0u+FsbM3UujBJH/eYx5Y
vpNCDyZ5XBqnuvIghR5Mwt6V/EzHjUIPJtGfH/q234dCDyaZ5bDiV0kIhR5M
Et5XeHt/HIUeTNKuX18uz6TQg0WSrrrT/ptHoQeL8IL7PT6WUejBIlVhJocs
6ij0YJGOhZw+HxmFHixSvMl4F7+PQg8WabDPEJczpOjBIjts3NfXzJCiB4u8
bri4uGSeFD2mEHcr65jUJVLyP/LMAeg=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
ZSXaueQxCQ02b49OW56LfwFws/50
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 6188.654698329082}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], None}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 3.}, {0, 6188.654698329082}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.657287897051158*^9, 3.6672095880324583`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TabledVdzd\[CapitalOmega]", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"20", ",", "10", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"TabledVdzd\[CapitalOmega]", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"0", ",", "0", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"TabledVdzd\[CapitalOmega]", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"0", ",", "4", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"TabledVdzd\[CapitalOmega]", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"0", ",", "10", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.65728782629204*^9, {3.657288084303361*^9, 3.657288093528886*^9}, {
   3.6573822508571863`*^9, 3.657382266576935*^9}, {3.666978559348349*^9, 
   3.666978559629731*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 1.1004636672726614`*^7}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], None}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.}, {0, 1.1004636672726614`*^7}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6572880953252153`*^9, 3.6572883256745872`*^9, 
  3.6572893044263983`*^9, 3.657382274361487*^9, 3.657385557527535*^9, 
  3.667209594669312*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.657288087545229*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tabledhfun", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"20", ",", "10", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Tabledhfun", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"0", ",", "0", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Tabledhfun", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"0", ",", "4", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}], 
     StyleBox[",",
      FontSize->16], 
     RowBox[{"Tabledhfun", 
      StyleBox["[",
       FontSize->16], 
      StyleBox[
       RowBox[{"0", ",", "10", ",", "1"}],
       FontSize->16], 
      StyleBox["]",
       FontSize->16]}]}], 
    StyleBox["}",
     FontSize->16]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.010", ",", "0.005"}], "}"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", "Dashed", ",", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.001", ",", "0.005", ",", "0.005", ",", "0.005"}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], ",", "Green", ",", 
      "Red"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log[\!\(\*SubscriptBox[\(M\), \(min\)]\) \
\!\(\*SuperscriptBox[\(10\), \(-12\)]\) \!\(\*SuperscriptBox[\(h\), \
\(\(-1\)\(\\\ \)\)]\)\!\(\*SubsuperscriptBox[\(M\), \(\[CircleDot]\), \(-1\)]\
\)]\>\"", ",", "\"\<n(\!\(\*SubscriptBox[\(M\), \(min\)]\))\>\"", ",", "None",
       ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"{", "12", "}"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<LCDM\>\"", ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=0\>\"",
       ",", "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-4\>\"", ",", 
      "\"\<Log(\!\(\*SubscriptBox[\(v\), \(c\)]\))=-10\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657382218962797*^9, 3.6573822284616013`*^9}, {
  3.657385552533257*^9, 3.657385583497134*^9}, {3.666978563443808*^9, 
  3.66697856374717*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Dashing[{0.01, 0.005}], 
         Thickness[0.003]], 
        LineBox[CompressedData["
1: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
ED2YZGZ3hV9UvhA9fiCRZY0FFqVC+D9Zmp5/
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
uSX0uhA9viJbE8byzcqE8H+oYKnL
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{0.001, 0.005, 0.005, 0.005}], 
         Thickness[0.001]], 
        LineBox[CompressedData["
1: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
Ue0uW777igQ9JpGIkrosyyIJ/B+DPZ2v
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
ED2YZGZ3hV9UvhA9fiCRZY0FFqVC+D9Zmp5/
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.}, {0, 0.0010839027125730454`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"n(\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"Log[\\!\\(\\*SubscriptBox[\\(M\\), \\(min\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-12\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(h\\), \\(\\(-1\\)\\(\\\\ \
\\)\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(M\\), \\(\[CircleDot]\\), \
\\(-1\\)]\\)]\"", TraditionalForm], None}}, FrameStyle -> Directive[{12}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.}, {0, 0.0010839027125730454`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"LCDM\"", "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=0\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-4\"", 
       "\"Log(\\!\\(\\*SubscriptBox[\\(v\\), \\(c\\)]\\))=-10\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0.09, 0.045}], 
                    Thickness[0.027]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{0.009000000000000001, 0.045, 0.045, 0.045}], 
                    Thickness[0.009000000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.005`"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.003`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.001`", ",", "0.005`", ",", "0.005`", ",", "0.005`"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.001`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.657382230262473*^9, 3.65738223363975*^9}, 
   3.657385586199936*^9, 3.667209594964267*^9}]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{-10, Automatic}, {Automatic, -10}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 25, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 4159, 115, 225, "Input"],
Cell[4562, 130, 122, 2, 35, "Input"],
Cell[4687, 134, 102464, 2970, 4739, "Input"],
Cell[107154, 3106, 44, 1, 4, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[107223, 3111, 1867, 41, 57, "Input"],
Cell[109093, 3154, 118562, 2028, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227692, 5187, 1325, 34, 57, "Input"],
Cell[229020, 5223, 133765, 2276, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362822, 7504, 1251, 33, 57, "Input"],
Cell[364076, 7539, 143673, 2450, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[507786, 9994, 1251, 33, 57, "Input"],
Cell[509040, 10029, 153877, 2607, 312, "Output"]
}, Open  ]],
Cell[662932, 12639, 398, 9, 35, "Input"],
Cell[663333, 12650, 199, 5, 35, "Input"],
Cell[663535, 12657, 205, 5, 39, "Input"],
Cell[CellGroupData[{
Cell[663765, 12666, 3973, 106, 150, "Input"],
Cell[667741, 12774, 60932, 1097, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[728710, 13876, 3439, 77, 166, "Input"],
Cell[732152, 13955, 58390, 1058, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790579, 15018, 4687, 159, 89, "Input"],
Cell[795269, 15179, 27206, 542, 306, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[822512, 15726, 4393, 154, 90, "Input"],
Cell[826908, 15882, 32539, 627, 330, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[859484, 16514, 4485, 157, 90, "Input"],
Cell[863972, 16673, 32673, 629, 349, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896682, 17307, 4625, 168, 90, "Input"],
Cell[901310, 17477, 32537, 626, 302, "Output"]
}, Open  ]],
Cell[933862, 18106, 288, 7, 36, "Input"],
Cell[934153, 18115, 68, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[934246, 18120, 4202, 151, 90, "Input"],
Cell[938451, 18273, 32587, 626, 307, "Output"]
}, Open  ]],
Cell[971053, 18902, 194, 5, 36, "Input"],
Cell[971250, 18909, 318, 7, 36, "Input"],
Cell[CellGroupData[{
Cell[971593, 18920, 215, 5, 35, "Input"],
Cell[971811, 18927, 73, 1, 35, "Output"]
}, Open  ]],
Cell[971899, 18931, 68, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[971992, 18936, 3844, 135, 90, "Input"],
Cell[975839, 19073, 32469, 625, 318, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008345, 19703, 3856, 135, 90, "Input"],
Cell[1012204, 19840, 32475, 624, 310, "Output"]
}, Open  ]],
Cell[1044694, 20467, 70, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[1044789, 20472, 3846, 135, 90, "Input"],
Cell[1048638, 20609, 25945, 518, 318, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1074620, 21132, 2699, 83, 89, "Input"],
Cell[1077322, 21217, 32358, 622, 311, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1109717, 21844, 2839, 85, 89, "Input"],
Cell[1112559, 21931, 32308, 621, 303, "Output"]
}, Open  ]],
Cell[1144882, 22555, 68, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[1144975, 22560, 2752, 84, 89, "Input"],
Cell[1147730, 22646, 32429, 624, 302, "Output"]
}, Open  ]]
}
]
*)

